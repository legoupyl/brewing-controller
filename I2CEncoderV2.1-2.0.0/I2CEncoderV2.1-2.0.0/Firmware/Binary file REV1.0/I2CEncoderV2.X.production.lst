

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Oct 07 17:57:58 2018

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	swtext1,local,class=CONST,delta=2
    23                           	psect	swtext2,local,class=CONST,delta=2
    24                           	psect	swtext3,local,class=CONST,delta=2
    25                           	psect	swtext4,local,class=CONST,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text42,local,class=CODE,merge=1,delta=2
    28                           	psect	text45,local,class=CODE,merge=1,delta=2
    29                           	psect	text46,local,class=CODE,merge=1,delta=2
    30                           	psect	text47,local,class=CODE,merge=1,delta=2
    31                           	psect	text48,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext5,local,class=CONST,delta=2
    33                           	psect	swtext6,local,class=CONST,delta=2
    34                           	psect	swtext7,local,class=CONST,delta=2
    35                           	psect	swtext8,local,class=CONST,delta=2
    36                           	psect	swtext9,local,class=CONST,delta=2
    37                           	psect	text72,local,class=CODE,merge=1,delta=2
    38                           	psect	swtext10,local,class=CONST,delta=2
    39                           	psect	text75,local,class=CODE,merge=1,delta=2
    40                           	psect	pa_nodes0,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.00
    44                           ; Generated 27/05/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F18345 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0097                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0297                     	;# 
   206  0298                     	;# 
   207  029F                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  0311                     	;# 
   212  0311                     	;# 
   213  0312                     	;# 
   214  0313                     	;# 
   215  0314                     	;# 
   216  0315                     	;# 
   217  0315                     	;# 
   218  0316                     	;# 
   219  0317                     	;# 
   220  0318                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0391                     	;# 
   225  0392                     	;# 
   226  0393                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  0397                     	;# 
   231  0398                     	;# 
   232  0399                     	;# 
   233  039A                     	;# 
   234  039C                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0411                     	;# 
   239  0411                     	;# 
   240  0412                     	;# 
   241  0413                     	;# 
   242  0414                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  0418                     	;# 
   247  0418                     	;# 
   248  0419                     	;# 
   249  041A                     	;# 
   250  041B                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  041F                     	;# 
   255  0498                     	;# 
   256  0498                     	;# 
   257  0499                     	;# 
   258  049A                     	;# 
   259  049B                     	;# 
   260  049B                     	;# 
   261  049C                     	;# 
   262  049D                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0617                     	;# 
   266  0618                     	;# 
   267  0619                     	;# 
   268  0619                     	;# 
   269  061A                     	;# 
   270  061B                     	;# 
   271  061C                     	;# 
   272  061C                     	;# 
   273  061F                     	;# 
   274  0691                     	;# 
   275  0692                     	;# 
   276  0693                     	;# 
   277  0694                     	;# 
   278  0695                     	;# 
   279  0696                     	;# 
   280  0697                     	;# 
   281  0698                     	;# 
   282  0699                     	;# 
   283  0711                     	;# 
   284  0712                     	;# 
   285  0713                     	;# 
   286  0714                     	;# 
   287  0715                     	;# 
   288  0716                     	;# 
   289  0717                     	;# 
   290  0718                     	;# 
   291  0719                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0892                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0894                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0896                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  089B                     	;# 
   317  0911                     	;# 
   318  0912                     	;# 
   319  0913                     	;# 
   320  0914                     	;# 
   321  0915                     	;# 
   322  0916                     	;# 
   323  0918                     	;# 
   324  0919                     	;# 
   325  091A                     	;# 
   326  091B                     	;# 
   327  091C                     	;# 
   328  091D                     	;# 
   329  091E                     	;# 
   330  091F                     	;# 
   331  0E0F                     	;# 
   332  0E10                     	;# 
   333  0E11                     	;# 
   334  0E12                     	;# 
   335  0E13                     	;# 
   336  0E14                     	;# 
   337  0E15                     	;# 
   338  0E16                     	;# 
   339  0E17                     	;# 
   340  0E18                     	;# 
   341  0E19                     	;# 
   342  0E1A                     	;# 
   343  0E1B                     	;# 
   344  0E1C                     	;# 
   345  0E1D                     	;# 
   346  0E1E                     	;# 
   347  0E1F                     	;# 
   348  0E20                     	;# 
   349  0E21                     	;# 
   350  0E22                     	;# 
   351  0E24                     	;# 
   352  0E25                     	;# 
   353  0E28                     	;# 
   354  0E29                     	;# 
   355  0E2A                     	;# 
   356  0E2B                     	;# 
   357  0E2C                     	;# 
   358  0E2D                     	;# 
   359  0E2E                     	;# 
   360  0E2F                     	;# 
   361  0E90                     	;# 
   362  0E91                     	;# 
   363  0E92                     	;# 
   364  0E94                     	;# 
   365  0E95                     	;# 
   366  0E9C                     	;# 
   367  0E9D                     	;# 
   368  0E9E                     	;# 
   369  0E9F                     	;# 
   370  0EA0                     	;# 
   371  0EA1                     	;# 
   372  0EA2                     	;# 
   373  0EA3                     	;# 
   374  0EA4                     	;# 
   375  0EA5                     	;# 
   376  0EA6                     	;# 
   377  0EA7                     	;# 
   378  0F0F                     	;# 
   379  0F10                     	;# 
   380  0F11                     	;# 
   381  0F12                     	;# 
   382  0F13                     	;# 
   383  0F14                     	;# 
   384  0F15                     	;# 
   385  0F16                     	;# 
   386  0F17                     	;# 
   387  0F18                     	;# 
   388  0F19                     	;# 
   389  0F1A                     	;# 
   390  0F1B                     	;# 
   391  0F1C                     	;# 
   392  0F1D                     	;# 
   393  0F1E                     	;# 
   394  0F1F                     	;# 
   395  0F20                     	;# 
   396  0F21                     	;# 
   397  0F22                     	;# 
   398  0F23                     	;# 
   399  0F24                     	;# 
   400  0F25                     	;# 
   401  0F26                     	;# 
   402  0F27                     	;# 
   403  0F28                     	;# 
   404  0F29                     	;# 
   405  0F2A                     	;# 
   406  0F2B                     	;# 
   407  0F2C                     	;# 
   408  0F2D                     	;# 
   409  0F2E                     	;# 
   410  0F2F                     	;# 
   411  0F30                     	;# 
   412  0F31                     	;# 
   413  0F32                     	;# 
   414  0F33                     	;# 
   415  0F34                     	;# 
   416  0F35                     	;# 
   417  0F36                     	;# 
   418  0F37                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  000E                     	;# 
   445  0010                     	;# 
   446  0011                     	;# 
   447  0012                     	;# 
   448  0013                     	;# 
   449  0014                     	;# 
   450  0015                     	;# 
   451  0015                     	;# 
   452  0016                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  0090                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0097                     	;# 
   473  009B                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  018E                     	;# 
   494  0197                     	;# 
   495  0199                     	;# 
   496  0199                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019A                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019C                     	;# 
   507  019C                     	;# 
   508  019C                     	;# 
   509  019D                     	;# 
   510  019D                     	;# 
   511  019D                     	;# 
   512  019E                     	;# 
   513  019E                     	;# 
   514  019E                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  020C                     	;# 
   521  020D                     	;# 
   522  020E                     	;# 
   523  0211                     	;# 
   524  0211                     	;# 
   525  0212                     	;# 
   526  0212                     	;# 
   527  0213                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0214                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0219                     	;# 
   540  021A                     	;# 
   541  021B                     	;# 
   542  021C                     	;# 
   543  021D                     	;# 
   544  021D                     	;# 
   545  021E                     	;# 
   546  021F                     	;# 
   547  028C                     	;# 
   548  028D                     	;# 
   549  028E                     	;# 
   550  0291                     	;# 
   551  0291                     	;# 
   552  0292                     	;# 
   553  0293                     	;# 
   554  0294                     	;# 
   555  0295                     	;# 
   556  0295                     	;# 
   557  0296                     	;# 
   558  0297                     	;# 
   559  0298                     	;# 
   560  029F                     	;# 
   561  030C                     	;# 
   562  030D                     	;# 
   563  030E                     	;# 
   564  0311                     	;# 
   565  0311                     	;# 
   566  0312                     	;# 
   567  0313                     	;# 
   568  0314                     	;# 
   569  0315                     	;# 
   570  0315                     	;# 
   571  0316                     	;# 
   572  0317                     	;# 
   573  0318                     	;# 
   574  038C                     	;# 
   575  038D                     	;# 
   576  038E                     	;# 
   577  0391                     	;# 
   578  0392                     	;# 
   579  0393                     	;# 
   580  0394                     	;# 
   581  0395                     	;# 
   582  0396                     	;# 
   583  0397                     	;# 
   584  0398                     	;# 
   585  0399                     	;# 
   586  039A                     	;# 
   587  039C                     	;# 
   588  039D                     	;# 
   589  039E                     	;# 
   590  039F                     	;# 
   591  0411                     	;# 
   592  0411                     	;# 
   593  0412                     	;# 
   594  0413                     	;# 
   595  0414                     	;# 
   596  0415                     	;# 
   597  0416                     	;# 
   598  0417                     	;# 
   599  0418                     	;# 
   600  0418                     	;# 
   601  0419                     	;# 
   602  041A                     	;# 
   603  041B                     	;# 
   604  041C                     	;# 
   605  041D                     	;# 
   606  041E                     	;# 
   607  041F                     	;# 
   608  0498                     	;# 
   609  0498                     	;# 
   610  0499                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049B                     	;# 
   614  049C                     	;# 
   615  049D                     	;# 
   616  049E                     	;# 
   617  049F                     	;# 
   618  0617                     	;# 
   619  0618                     	;# 
   620  0619                     	;# 
   621  0619                     	;# 
   622  061A                     	;# 
   623  061B                     	;# 
   624  061C                     	;# 
   625  061C                     	;# 
   626  061F                     	;# 
   627  0691                     	;# 
   628  0692                     	;# 
   629  0693                     	;# 
   630  0694                     	;# 
   631  0695                     	;# 
   632  0696                     	;# 
   633  0697                     	;# 
   634  0698                     	;# 
   635  0699                     	;# 
   636  0711                     	;# 
   637  0712                     	;# 
   638  0713                     	;# 
   639  0714                     	;# 
   640  0715                     	;# 
   641  0716                     	;# 
   642  0717                     	;# 
   643  0718                     	;# 
   644  0719                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0892                     	;# 
   652  0892                     	;# 
   653  0892                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0894                     	;# 
   661  0894                     	;# 
   662  0894                     	;# 
   663  0895                     	;# 
   664  0895                     	;# 
   665  0895                     	;# 
   666  0896                     	;# 
   667  0896                     	;# 
   668  0896                     	;# 
   669  089B                     	;# 
   670  0911                     	;# 
   671  0912                     	;# 
   672  0913                     	;# 
   673  0914                     	;# 
   674  0915                     	;# 
   675  0916                     	;# 
   676  0918                     	;# 
   677  0919                     	;# 
   678  091A                     	;# 
   679  091B                     	;# 
   680  091C                     	;# 
   681  091D                     	;# 
   682  091E                     	;# 
   683  091F                     	;# 
   684  0E0F                     	;# 
   685  0E10                     	;# 
   686  0E11                     	;# 
   687  0E12                     	;# 
   688  0E13                     	;# 
   689  0E14                     	;# 
   690  0E15                     	;# 
   691  0E16                     	;# 
   692  0E17                     	;# 
   693  0E18                     	;# 
   694  0E19                     	;# 
   695  0E1A                     	;# 
   696  0E1B                     	;# 
   697  0E1C                     	;# 
   698  0E1D                     	;# 
   699  0E1E                     	;# 
   700  0E1F                     	;# 
   701  0E20                     	;# 
   702  0E21                     	;# 
   703  0E22                     	;# 
   704  0E24                     	;# 
   705  0E25                     	;# 
   706  0E28                     	;# 
   707  0E29                     	;# 
   708  0E2A                     	;# 
   709  0E2B                     	;# 
   710  0E2C                     	;# 
   711  0E2D                     	;# 
   712  0E2E                     	;# 
   713  0E2F                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E94                     	;# 
   718  0E95                     	;# 
   719  0E9C                     	;# 
   720  0E9D                     	;# 
   721  0E9E                     	;# 
   722  0E9F                     	;# 
   723  0EA0                     	;# 
   724  0EA1                     	;# 
   725  0EA2                     	;# 
   726  0EA3                     	;# 
   727  0EA4                     	;# 
   728  0EA5                     	;# 
   729  0EA6                     	;# 
   730  0EA7                     	;# 
   731  0F0F                     	;# 
   732  0F10                     	;# 
   733  0F11                     	;# 
   734  0F12                     	;# 
   735  0F13                     	;# 
   736  0F14                     	;# 
   737  0F15                     	;# 
   738  0F16                     	;# 
   739  0F17                     	;# 
   740  0F18                     	;# 
   741  0F19                     	;# 
   742  0F1A                     	;# 
   743  0F1B                     	;# 
   744  0F1C                     	;# 
   745  0F1D                     	;# 
   746  0F1E                     	;# 
   747  0F1F                     	;# 
   748  0F20                     	;# 
   749  0F21                     	;# 
   750  0F22                     	;# 
   751  0F23                     	;# 
   752  0F24                     	;# 
   753  0F25                     	;# 
   754  0F26                     	;# 
   755  0F27                     	;# 
   756  0F28                     	;# 
   757  0F29                     	;# 
   758  0F2A                     	;# 
   759  0F2B                     	;# 
   760  0F2C                     	;# 
   761  0F2D                     	;# 
   762  0F2E                     	;# 
   763  0F2F                     	;# 
   764  0F30                     	;# 
   765  0F31                     	;# 
   766  0F32                     	;# 
   767  0F33                     	;# 
   768  0F34                     	;# 
   769  0F35                     	;# 
   770  0F36                     	;# 
   771  0F37                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  0010                     	;# 
   799  0011                     	;# 
   800  0012                     	;# 
   801  0013                     	;# 
   802  0014                     	;# 
   803  0015                     	;# 
   804  0015                     	;# 
   805  0016                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  0019                     	;# 
   811  001A                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  001D                     	;# 
   815  001E                     	;# 
   816  001F                     	;# 
   817  008C                     	;# 
   818  008D                     	;# 
   819  008E                     	;# 
   820  0090                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0093                     	;# 
   824  0094                     	;# 
   825  0097                     	;# 
   826  009B                     	;# 
   827  009B                     	;# 
   828  009C                     	;# 
   829  009D                     	;# 
   830  009E                     	;# 
   831  009F                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010E                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0113                     	;# 
   838  0114                     	;# 
   839  0115                     	;# 
   840  0116                     	;# 
   841  0117                     	;# 
   842  0118                     	;# 
   843  0119                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018E                     	;# 
   847  0197                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020D                     	;# 
   875  020E                     	;# 
   876  0211                     	;# 
   877  0211                     	;# 
   878  0212                     	;# 
   879  0212                     	;# 
   880  0213                     	;# 
   881  0213                     	;# 
   882  0214                     	;# 
   883  0214                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0216                     	;# 
   890  0217                     	;# 
   891  0217                     	;# 
   892  0219                     	;# 
   893  021A                     	;# 
   894  021B                     	;# 
   895  021C                     	;# 
   896  021D                     	;# 
   897  021D                     	;# 
   898  021E                     	;# 
   899  021F                     	;# 
   900  028C                     	;# 
   901  028D                     	;# 
   902  028E                     	;# 
   903  0291                     	;# 
   904  0291                     	;# 
   905  0292                     	;# 
   906  0293                     	;# 
   907  0294                     	;# 
   908  0295                     	;# 
   909  0295                     	;# 
   910  0296                     	;# 
   911  0297                     	;# 
   912  0298                     	;# 
   913  029F                     	;# 
   914  030C                     	;# 
   915  030D                     	;# 
   916  030E                     	;# 
   917  0311                     	;# 
   918  0311                     	;# 
   919  0312                     	;# 
   920  0313                     	;# 
   921  0314                     	;# 
   922  0315                     	;# 
   923  0315                     	;# 
   924  0316                     	;# 
   925  0317                     	;# 
   926  0318                     	;# 
   927  038C                     	;# 
   928  038D                     	;# 
   929  038E                     	;# 
   930  0391                     	;# 
   931  0392                     	;# 
   932  0393                     	;# 
   933  0394                     	;# 
   934  0395                     	;# 
   935  0396                     	;# 
   936  0397                     	;# 
   937  0398                     	;# 
   938  0399                     	;# 
   939  039A                     	;# 
   940  039C                     	;# 
   941  039D                     	;# 
   942  039E                     	;# 
   943  039F                     	;# 
   944  0411                     	;# 
   945  0411                     	;# 
   946  0412                     	;# 
   947  0413                     	;# 
   948  0414                     	;# 
   949  0415                     	;# 
   950  0416                     	;# 
   951  0417                     	;# 
   952  0418                     	;# 
   953  0418                     	;# 
   954  0419                     	;# 
   955  041A                     	;# 
   956  041B                     	;# 
   957  041C                     	;# 
   958  041D                     	;# 
   959  041E                     	;# 
   960  041F                     	;# 
   961  0498                     	;# 
   962  0498                     	;# 
   963  0499                     	;# 
   964  049A                     	;# 
   965  049B                     	;# 
   966  049B                     	;# 
   967  049C                     	;# 
   968  049D                     	;# 
   969  049E                     	;# 
   970  049F                     	;# 
   971  0617                     	;# 
   972  0618                     	;# 
   973  0619                     	;# 
   974  0619                     	;# 
   975  061A                     	;# 
   976  061B                     	;# 
   977  061C                     	;# 
   978  061C                     	;# 
   979  061F                     	;# 
   980  0691                     	;# 
   981  0692                     	;# 
   982  0693                     	;# 
   983  0694                     	;# 
   984  0695                     	;# 
   985  0696                     	;# 
   986  0697                     	;# 
   987  0698                     	;# 
   988  0699                     	;# 
   989  0711                     	;# 
   990  0712                     	;# 
   991  0713                     	;# 
   992  0714                     	;# 
   993  0715                     	;# 
   994  0716                     	;# 
   995  0717                     	;# 
   996  0718                     	;# 
   997  0719                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0892                     	;# 
  1005  0892                     	;# 
  1006  0892                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0894                     	;# 
  1014  0894                     	;# 
  1015  0894                     	;# 
  1016  0895                     	;# 
  1017  0895                     	;# 
  1018  0895                     	;# 
  1019  0896                     	;# 
  1020  0896                     	;# 
  1021  0896                     	;# 
  1022  089B                     	;# 
  1023  0911                     	;# 
  1024  0912                     	;# 
  1025  0913                     	;# 
  1026  0914                     	;# 
  1027  0915                     	;# 
  1028  0916                     	;# 
  1029  0918                     	;# 
  1030  0919                     	;# 
  1031  091A                     	;# 
  1032  091B                     	;# 
  1033  091C                     	;# 
  1034  091D                     	;# 
  1035  091E                     	;# 
  1036  091F                     	;# 
  1037  0E0F                     	;# 
  1038  0E10                     	;# 
  1039  0E11                     	;# 
  1040  0E12                     	;# 
  1041  0E13                     	;# 
  1042  0E14                     	;# 
  1043  0E15                     	;# 
  1044  0E16                     	;# 
  1045  0E17                     	;# 
  1046  0E18                     	;# 
  1047  0E19                     	;# 
  1048  0E1A                     	;# 
  1049  0E1B                     	;# 
  1050  0E1C                     	;# 
  1051  0E1D                     	;# 
  1052  0E1E                     	;# 
  1053  0E1F                     	;# 
  1054  0E20                     	;# 
  1055  0E21                     	;# 
  1056  0E22                     	;# 
  1057  0E24                     	;# 
  1058  0E25                     	;# 
  1059  0E28                     	;# 
  1060  0E29                     	;# 
  1061  0E2A                     	;# 
  1062  0E2B                     	;# 
  1063  0E2C                     	;# 
  1064  0E2D                     	;# 
  1065  0E2E                     	;# 
  1066  0E2F                     	;# 
  1067  0E90                     	;# 
  1068  0E91                     	;# 
  1069  0E92                     	;# 
  1070  0E94                     	;# 
  1071  0E95                     	;# 
  1072  0E9C                     	;# 
  1073  0E9D                     	;# 
  1074  0E9E                     	;# 
  1075  0E9F                     	;# 
  1076  0EA0                     	;# 
  1077  0EA1                     	;# 
  1078  0EA2                     	;# 
  1079  0EA3                     	;# 
  1080  0EA4                     	;# 
  1081  0EA5                     	;# 
  1082  0EA6                     	;# 
  1083  0EA7                     	;# 
  1084  0F0F                     	;# 
  1085  0F10                     	;# 
  1086  0F11                     	;# 
  1087  0F12                     	;# 
  1088  0F13                     	;# 
  1089  0F14                     	;# 
  1090  0F15                     	;# 
  1091  0F16                     	;# 
  1092  0F17                     	;# 
  1093  0F18                     	;# 
  1094  0F19                     	;# 
  1095  0F1A                     	;# 
  1096  0F1B                     	;# 
  1097  0F1C                     	;# 
  1098  0F1D                     	;# 
  1099  0F1E                     	;# 
  1100  0F1F                     	;# 
  1101  0F20                     	;# 
  1102  0F21                     	;# 
  1103  0F22                     	;# 
  1104  0F23                     	;# 
  1105  0F24                     	;# 
  1106  0F25                     	;# 
  1107  0F26                     	;# 
  1108  0F27                     	;# 
  1109  0F28                     	;# 
  1110  0F29                     	;# 
  1111  0F2A                     	;# 
  1112  0F2B                     	;# 
  1113  0F2C                     	;# 
  1114  0F2D                     	;# 
  1115  0F2E                     	;# 
  1116  0F2F                     	;# 
  1117  0F30                     	;# 
  1118  0F31                     	;# 
  1119  0F32                     	;# 
  1120  0F33                     	;# 
  1121  0F34                     	;# 
  1122  0F35                     	;# 
  1123  0F36                     	;# 
  1124  0F37                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  0010                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0014                     	;# 
  1156  0015                     	;# 
  1157  0015                     	;# 
  1158  0016                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  0019                     	;# 
  1163  0019                     	;# 
  1164  001A                     	;# 
  1165  001B                     	;# 
  1166  001C                     	;# 
  1167  001D                     	;# 
  1168  001E                     	;# 
  1169  001F                     	;# 
  1170  008C                     	;# 
  1171  008D                     	;# 
  1172  008E                     	;# 
  1173  0090                     	;# 
  1174  0091                     	;# 
  1175  0092                     	;# 
  1176  0093                     	;# 
  1177  0094                     	;# 
  1178  0097                     	;# 
  1179  009B                     	;# 
  1180  009B                     	;# 
  1181  009C                     	;# 
  1182  009D                     	;# 
  1183  009E                     	;# 
  1184  009F                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0118                     	;# 
  1196  0119                     	;# 
  1197  018C                     	;# 
  1198  018D                     	;# 
  1199  018E                     	;# 
  1200  0197                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019C                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019D                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019E                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0216                     	;# 
  1242  0216                     	;# 
  1243  0217                     	;# 
  1244  0217                     	;# 
  1245  0219                     	;# 
  1246  021A                     	;# 
  1247  021B                     	;# 
  1248  021C                     	;# 
  1249  021D                     	;# 
  1250  021D                     	;# 
  1251  021E                     	;# 
  1252  021F                     	;# 
  1253  028C                     	;# 
  1254  028D                     	;# 
  1255  028E                     	;# 
  1256  0291                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0293                     	;# 
  1260  0294                     	;# 
  1261  0295                     	;# 
  1262  0295                     	;# 
  1263  0296                     	;# 
  1264  0297                     	;# 
  1265  0298                     	;# 
  1266  029F                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  0311                     	;# 
  1271  0311                     	;# 
  1272  0312                     	;# 
  1273  0313                     	;# 
  1274  0314                     	;# 
  1275  0315                     	;# 
  1276  0315                     	;# 
  1277  0316                     	;# 
  1278  0317                     	;# 
  1279  0318                     	;# 
  1280  038C                     	;# 
  1281  038D                     	;# 
  1282  038E                     	;# 
  1283  0391                     	;# 
  1284  0392                     	;# 
  1285  0393                     	;# 
  1286  0394                     	;# 
  1287  0395                     	;# 
  1288  0396                     	;# 
  1289  0397                     	;# 
  1290  0398                     	;# 
  1291  0399                     	;# 
  1292  039A                     	;# 
  1293  039C                     	;# 
  1294  039D                     	;# 
  1295  039E                     	;# 
  1296  039F                     	;# 
  1297  0411                     	;# 
  1298  0411                     	;# 
  1299  0412                     	;# 
  1300  0413                     	;# 
  1301  0414                     	;# 
  1302  0415                     	;# 
  1303  0416                     	;# 
  1304  0417                     	;# 
  1305  0418                     	;# 
  1306  0418                     	;# 
  1307  0419                     	;# 
  1308  041A                     	;# 
  1309  041B                     	;# 
  1310  041C                     	;# 
  1311  041D                     	;# 
  1312  041E                     	;# 
  1313  041F                     	;# 
  1314  0498                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  049E                     	;# 
  1323  049F                     	;# 
  1324  0617                     	;# 
  1325  0618                     	;# 
  1326  0619                     	;# 
  1327  0619                     	;# 
  1328  061A                     	;# 
  1329  061B                     	;# 
  1330  061C                     	;# 
  1331  061C                     	;# 
  1332  061F                     	;# 
  1333  0691                     	;# 
  1334  0692                     	;# 
  1335  0693                     	;# 
  1336  0694                     	;# 
  1337  0695                     	;# 
  1338  0696                     	;# 
  1339  0697                     	;# 
  1340  0698                     	;# 
  1341  0699                     	;# 
  1342  0711                     	;# 
  1343  0712                     	;# 
  1344  0713                     	;# 
  1345  0714                     	;# 
  1346  0715                     	;# 
  1347  0716                     	;# 
  1348  0717                     	;# 
  1349  0718                     	;# 
  1350  0719                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0891                     	;# 
  1356  0891                     	;# 
  1357  0892                     	;# 
  1358  0892                     	;# 
  1359  0892                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0893                     	;# 
  1365  0893                     	;# 
  1366  0894                     	;# 
  1367  0894                     	;# 
  1368  0894                     	;# 
  1369  0895                     	;# 
  1370  0895                     	;# 
  1371  0895                     	;# 
  1372  0896                     	;# 
  1373  0896                     	;# 
  1374  0896                     	;# 
  1375  089B                     	;# 
  1376  0911                     	;# 
  1377  0912                     	;# 
  1378  0913                     	;# 
  1379  0914                     	;# 
  1380  0915                     	;# 
  1381  0916                     	;# 
  1382  0918                     	;# 
  1383  0919                     	;# 
  1384  091A                     	;# 
  1385  091B                     	;# 
  1386  091C                     	;# 
  1387  091D                     	;# 
  1388  091E                     	;# 
  1389  091F                     	;# 
  1390  0E0F                     	;# 
  1391  0E10                     	;# 
  1392  0E11                     	;# 
  1393  0E12                     	;# 
  1394  0E13                     	;# 
  1395  0E14                     	;# 
  1396  0E15                     	;# 
  1397  0E16                     	;# 
  1398  0E17                     	;# 
  1399  0E18                     	;# 
  1400  0E19                     	;# 
  1401  0E1A                     	;# 
  1402  0E1B                     	;# 
  1403  0E1C                     	;# 
  1404  0E1D                     	;# 
  1405  0E1E                     	;# 
  1406  0E1F                     	;# 
  1407  0E20                     	;# 
  1408  0E21                     	;# 
  1409  0E22                     	;# 
  1410  0E24                     	;# 
  1411  0E25                     	;# 
  1412  0E28                     	;# 
  1413  0E29                     	;# 
  1414  0E2A                     	;# 
  1415  0E2B                     	;# 
  1416  0E2C                     	;# 
  1417  0E2D                     	;# 
  1418  0E2E                     	;# 
  1419  0E2F                     	;# 
  1420  0E90                     	;# 
  1421  0E91                     	;# 
  1422  0E92                     	;# 
  1423  0E94                     	;# 
  1424  0E95                     	;# 
  1425  0E9C                     	;# 
  1426  0E9D                     	;# 
  1427  0E9E                     	;# 
  1428  0E9F                     	;# 
  1429  0EA0                     	;# 
  1430  0EA1                     	;# 
  1431  0EA2                     	;# 
  1432  0EA3                     	;# 
  1433  0EA4                     	;# 
  1434  0EA5                     	;# 
  1435  0EA6                     	;# 
  1436  0EA7                     	;# 
  1437  0F0F                     	;# 
  1438  0F10                     	;# 
  1439  0F11                     	;# 
  1440  0F12                     	;# 
  1441  0F13                     	;# 
  1442  0F14                     	;# 
  1443  0F15                     	;# 
  1444  0F16                     	;# 
  1445  0F17                     	;# 
  1446  0F18                     	;# 
  1447  0F19                     	;# 
  1448  0F1A                     	;# 
  1449  0F1B                     	;# 
  1450  0F1C                     	;# 
  1451  0F1D                     	;# 
  1452  0F1E                     	;# 
  1453  0F1F                     	;# 
  1454  0F20                     	;# 
  1455  0F21                     	;# 
  1456  0F22                     	;# 
  1457  0F23                     	;# 
  1458  0F24                     	;# 
  1459  0F25                     	;# 
  1460  0F26                     	;# 
  1461  0F27                     	;# 
  1462  0F28                     	;# 
  1463  0F29                     	;# 
  1464  0F2A                     	;# 
  1465  0F2B                     	;# 
  1466  0F2C                     	;# 
  1467  0F2D                     	;# 
  1468  0F2E                     	;# 
  1469  0F2F                     	;# 
  1470  0F30                     	;# 
  1471  0F31                     	;# 
  1472  0F32                     	;# 
  1473  0F33                     	;# 
  1474  0F34                     	;# 
  1475  0F35                     	;# 
  1476  0F36                     	;# 
  1477  0F37                     	;# 
  1478  0FE4                     	;# 
  1479  0FE5                     	;# 
  1480  0FE6                     	;# 
  1481  0FE7                     	;# 
  1482  0FE8                     	;# 
  1483  0FE9                     	;# 
  1484  0FEA                     	;# 
  1485  0FEB                     	;# 
  1486  0FED                     	;# 
  1487  0FEE                     	;# 
  1488  0FEF                     	;# 
  1489  0000                     	;# 
  1490  0001                     	;# 
  1491  0002                     	;# 
  1492  0003                     	;# 
  1493  0004                     	;# 
  1494  0005                     	;# 
  1495  0006                     	;# 
  1496  0007                     	;# 
  1497  0008                     	;# 
  1498  0009                     	;# 
  1499  000A                     	;# 
  1500  000B                     	;# 
  1501  000C                     	;# 
  1502  000D                     	;# 
  1503  000E                     	;# 
  1504  0010                     	;# 
  1505  0011                     	;# 
  1506  0012                     	;# 
  1507  0013                     	;# 
  1508  0014                     	;# 
  1509  0015                     	;# 
  1510  0015                     	;# 
  1511  0016                     	;# 
  1512  0016                     	;# 
  1513  0017                     	;# 
  1514  0018                     	;# 
  1515  0019                     	;# 
  1516  0019                     	;# 
  1517  001A                     	;# 
  1518  001B                     	;# 
  1519  001C                     	;# 
  1520  001D                     	;# 
  1521  001E                     	;# 
  1522  001F                     	;# 
  1523  008C                     	;# 
  1524  008D                     	;# 
  1525  008E                     	;# 
  1526  0090                     	;# 
  1527  0091                     	;# 
  1528  0092                     	;# 
  1529  0093                     	;# 
  1530  0094                     	;# 
  1531  0097                     	;# 
  1532  009B                     	;# 
  1533  009B                     	;# 
  1534  009C                     	;# 
  1535  009D                     	;# 
  1536  009E                     	;# 
  1537  009F                     	;# 
  1538  010C                     	;# 
  1539  010D                     	;# 
  1540  010E                     	;# 
  1541  0111                     	;# 
  1542  0112                     	;# 
  1543  0113                     	;# 
  1544  0114                     	;# 
  1545  0115                     	;# 
  1546  0116                     	;# 
  1547  0117                     	;# 
  1548  0118                     	;# 
  1549  0119                     	;# 
  1550  018C                     	;# 
  1551  018D                     	;# 
  1552  018E                     	;# 
  1553  0197                     	;# 
  1554  0199                     	;# 
  1555  0199                     	;# 
  1556  0199                     	;# 
  1557  019A                     	;# 
  1558  019A                     	;# 
  1559  019A                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019C                     	;# 
  1568  019D                     	;# 
  1569  019D                     	;# 
  1570  019D                     	;# 
  1571  019E                     	;# 
  1572  019E                     	;# 
  1573  019E                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  019F                     	;# 
  1578  019F                     	;# 
  1579  020C                     	;# 
  1580  020D                     	;# 
  1581  020E                     	;# 
  1582  0211                     	;# 
  1583  0211                     	;# 
  1584  0212                     	;# 
  1585  0212                     	;# 
  1586  0213                     	;# 
  1587  0213                     	;# 
  1588  0214                     	;# 
  1589  0214                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0215                     	;# 
  1594  0216                     	;# 
  1595  0216                     	;# 
  1596  0217                     	;# 
  1597  0217                     	;# 
  1598  0219                     	;# 
  1599  021A                     	;# 
  1600  021B                     	;# 
  1601  021C                     	;# 
  1602  021D                     	;# 
  1603  021D                     	;# 
  1604  021E                     	;# 
  1605  021F                     	;# 
  1606  028C                     	;# 
  1607  028D                     	;# 
  1608  028E                     	;# 
  1609  0291                     	;# 
  1610  0291                     	;# 
  1611  0292                     	;# 
  1612  0293                     	;# 
  1613  0294                     	;# 
  1614  0295                     	;# 
  1615  0295                     	;# 
  1616  0296                     	;# 
  1617  0297                     	;# 
  1618  0298                     	;# 
  1619  029F                     	;# 
  1620  030C                     	;# 
  1621  030D                     	;# 
  1622  030E                     	;# 
  1623  0311                     	;# 
  1624  0311                     	;# 
  1625  0312                     	;# 
  1626  0313                     	;# 
  1627  0314                     	;# 
  1628  0315                     	;# 
  1629  0315                     	;# 
  1630  0316                     	;# 
  1631  0317                     	;# 
  1632  0318                     	;# 
  1633  038C                     	;# 
  1634  038D                     	;# 
  1635  038E                     	;# 
  1636  0391                     	;# 
  1637  0392                     	;# 
  1638  0393                     	;# 
  1639  0394                     	;# 
  1640  0395                     	;# 
  1641  0396                     	;# 
  1642  0397                     	;# 
  1643  0398                     	;# 
  1644  0399                     	;# 
  1645  039A                     	;# 
  1646  039C                     	;# 
  1647  039D                     	;# 
  1648  039E                     	;# 
  1649  039F                     	;# 
  1650  0411                     	;# 
  1651  0411                     	;# 
  1652  0412                     	;# 
  1653  0413                     	;# 
  1654  0414                     	;# 
  1655  0415                     	;# 
  1656  0416                     	;# 
  1657  0417                     	;# 
  1658  0418                     	;# 
  1659  0418                     	;# 
  1660  0419                     	;# 
  1661  041A                     	;# 
  1662  041B                     	;# 
  1663  041C                     	;# 
  1664  041D                     	;# 
  1665  041E                     	;# 
  1666  041F                     	;# 
  1667  0498                     	;# 
  1668  0498                     	;# 
  1669  0499                     	;# 
  1670  049A                     	;# 
  1671  049B                     	;# 
  1672  049B                     	;# 
  1673  049C                     	;# 
  1674  049D                     	;# 
  1675  049E                     	;# 
  1676  049F                     	;# 
  1677  0617                     	;# 
  1678  0618                     	;# 
  1679  0619                     	;# 
  1680  0619                     	;# 
  1681  061A                     	;# 
  1682  061B                     	;# 
  1683  061C                     	;# 
  1684  061C                     	;# 
  1685  061F                     	;# 
  1686  0691                     	;# 
  1687  0692                     	;# 
  1688  0693                     	;# 
  1689  0694                     	;# 
  1690  0695                     	;# 
  1691  0696                     	;# 
  1692  0697                     	;# 
  1693  0698                     	;# 
  1694  0699                     	;# 
  1695  0711                     	;# 
  1696  0712                     	;# 
  1697  0713                     	;# 
  1698  0714                     	;# 
  1699  0715                     	;# 
  1700  0716                     	;# 
  1701  0717                     	;# 
  1702  0718                     	;# 
  1703  0719                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0891                     	;# 
  1709  0891                     	;# 
  1710  0892                     	;# 
  1711  0892                     	;# 
  1712  0892                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0894                     	;# 
  1720  0894                     	;# 
  1721  0894                     	;# 
  1722  0895                     	;# 
  1723  0895                     	;# 
  1724  0895                     	;# 
  1725  0896                     	;# 
  1726  0896                     	;# 
  1727  0896                     	;# 
  1728  089B                     	;# 
  1729  0911                     	;# 
  1730  0912                     	;# 
  1731  0913                     	;# 
  1732  0914                     	;# 
  1733  0915                     	;# 
  1734  0916                     	;# 
  1735  0918                     	;# 
  1736  0919                     	;# 
  1737  091A                     	;# 
  1738  091B                     	;# 
  1739  091C                     	;# 
  1740  091D                     	;# 
  1741  091E                     	;# 
  1742  091F                     	;# 
  1743  0E0F                     	;# 
  1744  0E10                     	;# 
  1745  0E11                     	;# 
  1746  0E12                     	;# 
  1747  0E13                     	;# 
  1748  0E14                     	;# 
  1749  0E15                     	;# 
  1750  0E16                     	;# 
  1751  0E17                     	;# 
  1752  0E18                     	;# 
  1753  0E19                     	;# 
  1754  0E1A                     	;# 
  1755  0E1B                     	;# 
  1756  0E1C                     	;# 
  1757  0E1D                     	;# 
  1758  0E1E                     	;# 
  1759  0E1F                     	;# 
  1760  0E20                     	;# 
  1761  0E21                     	;# 
  1762  0E22                     	;# 
  1763  0E24                     	;# 
  1764  0E25                     	;# 
  1765  0E28                     	;# 
  1766  0E29                     	;# 
  1767  0E2A                     	;# 
  1768  0E2B                     	;# 
  1769  0E2C                     	;# 
  1770  0E2D                     	;# 
  1771  0E2E                     	;# 
  1772  0E2F                     	;# 
  1773  0E90                     	;# 
  1774  0E91                     	;# 
  1775  0E92                     	;# 
  1776  0E94                     	;# 
  1777  0E95                     	;# 
  1778  0E9C                     	;# 
  1779  0E9D                     	;# 
  1780  0E9E                     	;# 
  1781  0E9F                     	;# 
  1782  0EA0                     	;# 
  1783  0EA1                     	;# 
  1784  0EA2                     	;# 
  1785  0EA3                     	;# 
  1786  0EA4                     	;# 
  1787  0EA5                     	;# 
  1788  0EA6                     	;# 
  1789  0EA7                     	;# 
  1790  0F0F                     	;# 
  1791  0F10                     	;# 
  1792  0F11                     	;# 
  1793  0F12                     	;# 
  1794  0F13                     	;# 
  1795  0F14                     	;# 
  1796  0F15                     	;# 
  1797  0F16                     	;# 
  1798  0F17                     	;# 
  1799  0F18                     	;# 
  1800  0F19                     	;# 
  1801  0F1A                     	;# 
  1802  0F1B                     	;# 
  1803  0F1C                     	;# 
  1804  0F1D                     	;# 
  1805  0F1E                     	;# 
  1806  0F1F                     	;# 
  1807  0F20                     	;# 
  1808  0F21                     	;# 
  1809  0F22                     	;# 
  1810  0F23                     	;# 
  1811  0F24                     	;# 
  1812  0F25                     	;# 
  1813  0F26                     	;# 
  1814  0F27                     	;# 
  1815  0F28                     	;# 
  1816  0F29                     	;# 
  1817  0F2A                     	;# 
  1818  0F2B                     	;# 
  1819  0F2C                     	;# 
  1820  0F2D                     	;# 
  1821  0F2E                     	;# 
  1822  0F2F                     	;# 
  1823  0F30                     	;# 
  1824  0F31                     	;# 
  1825  0F32                     	;# 
  1826  0F33                     	;# 
  1827  0F34                     	;# 
  1828  0F35                     	;# 
  1829  0F36                     	;# 
  1830  0F37                     	;# 
  1831  0FE4                     	;# 
  1832  0FE5                     	;# 
  1833  0FE6                     	;# 
  1834  0FE7                     	;# 
  1835  0FE8                     	;# 
  1836  0FE9                     	;# 
  1837  0FEA                     	;# 
  1838  0FEB                     	;# 
  1839  0FED                     	;# 
  1840  0FEE                     	;# 
  1841  0FEF                     	;# 
  1842  0000                     	;# 
  1843  0001                     	;# 
  1844  0002                     	;# 
  1845  0003                     	;# 
  1846  0004                     	;# 
  1847  0005                     	;# 
  1848  0006                     	;# 
  1849  0007                     	;# 
  1850  0008                     	;# 
  1851  0009                     	;# 
  1852  000A                     	;# 
  1853  000B                     	;# 
  1854  000C                     	;# 
  1855  000D                     	;# 
  1856  000E                     	;# 
  1857  0010                     	;# 
  1858  0011                     	;# 
  1859  0012                     	;# 
  1860  0013                     	;# 
  1861  0014                     	;# 
  1862  0015                     	;# 
  1863  0015                     	;# 
  1864  0016                     	;# 
  1865  0016                     	;# 
  1866  0017                     	;# 
  1867  0018                     	;# 
  1868  0019                     	;# 
  1869  0019                     	;# 
  1870  001A                     	;# 
  1871  001B                     	;# 
  1872  001C                     	;# 
  1873  001D                     	;# 
  1874  001E                     	;# 
  1875  001F                     	;# 
  1876  008C                     	;# 
  1877  008D                     	;# 
  1878  008E                     	;# 
  1879  0090                     	;# 
  1880  0091                     	;# 
  1881  0092                     	;# 
  1882  0093                     	;# 
  1883  0094                     	;# 
  1884  0097                     	;# 
  1885  009B                     	;# 
  1886  009B                     	;# 
  1887  009C                     	;# 
  1888  009D                     	;# 
  1889  009E                     	;# 
  1890  009F                     	;# 
  1891  010C                     	;# 
  1892  010D                     	;# 
  1893  010E                     	;# 
  1894  0111                     	;# 
  1895  0112                     	;# 
  1896  0113                     	;# 
  1897  0114                     	;# 
  1898  0115                     	;# 
  1899  0116                     	;# 
  1900  0117                     	;# 
  1901  0118                     	;# 
  1902  0119                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  0197                     	;# 
  1907  0199                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019D                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019E                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  020C                     	;# 
  1933  020D                     	;# 
  1934  020E                     	;# 
  1935  0211                     	;# 
  1936  0211                     	;# 
  1937  0212                     	;# 
  1938  0212                     	;# 
  1939  0213                     	;# 
  1940  0213                     	;# 
  1941  0214                     	;# 
  1942  0214                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0216                     	;# 
  1948  0216                     	;# 
  1949  0217                     	;# 
  1950  0217                     	;# 
  1951  0219                     	;# 
  1952  021A                     	;# 
  1953  021B                     	;# 
  1954  021C                     	;# 
  1955  021D                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  028C                     	;# 
  1960  028D                     	;# 
  1961  028E                     	;# 
  1962  0291                     	;# 
  1963  0291                     	;# 
  1964  0292                     	;# 
  1965  0293                     	;# 
  1966  0294                     	;# 
  1967  0295                     	;# 
  1968  0295                     	;# 
  1969  0296                     	;# 
  1970  0297                     	;# 
  1971  0298                     	;# 
  1972  029F                     	;# 
  1973  030C                     	;# 
  1974  030D                     	;# 
  1975  030E                     	;# 
  1976  0311                     	;# 
  1977  0311                     	;# 
  1978  0312                     	;# 
  1979  0313                     	;# 
  1980  0314                     	;# 
  1981  0315                     	;# 
  1982  0315                     	;# 
  1983  0316                     	;# 
  1984  0317                     	;# 
  1985  0318                     	;# 
  1986  038C                     	;# 
  1987  038D                     	;# 
  1988  038E                     	;# 
  1989  0391                     	;# 
  1990  0392                     	;# 
  1991  0393                     	;# 
  1992  0394                     	;# 
  1993  0395                     	;# 
  1994  0396                     	;# 
  1995  0397                     	;# 
  1996  0398                     	;# 
  1997  0399                     	;# 
  1998  039A                     	;# 
  1999  039C                     	;# 
  2000  039D                     	;# 
  2001  039E                     	;# 
  2002  039F                     	;# 
  2003  0411                     	;# 
  2004  0411                     	;# 
  2005  0412                     	;# 
  2006  0413                     	;# 
  2007  0414                     	;# 
  2008  0415                     	;# 
  2009  0416                     	;# 
  2010  0417                     	;# 
  2011  0418                     	;# 
  2012  0418                     	;# 
  2013  0419                     	;# 
  2014  041A                     	;# 
  2015  041B                     	;# 
  2016  041C                     	;# 
  2017  041D                     	;# 
  2018  041E                     	;# 
  2019  041F                     	;# 
  2020  0498                     	;# 
  2021  0498                     	;# 
  2022  0499                     	;# 
  2023  049A                     	;# 
  2024  049B                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  049E                     	;# 
  2029  049F                     	;# 
  2030  0617                     	;# 
  2031  0618                     	;# 
  2032  0619                     	;# 
  2033  0619                     	;# 
  2034  061A                     	;# 
  2035  061B                     	;# 
  2036  061C                     	;# 
  2037  061C                     	;# 
  2038  061F                     	;# 
  2039  0691                     	;# 
  2040  0692                     	;# 
  2041  0693                     	;# 
  2042  0694                     	;# 
  2043  0695                     	;# 
  2044  0696                     	;# 
  2045  0697                     	;# 
  2046  0698                     	;# 
  2047  0699                     	;# 
  2048  0711                     	;# 
  2049  0712                     	;# 
  2050  0713                     	;# 
  2051  0714                     	;# 
  2052  0715                     	;# 
  2053  0716                     	;# 
  2054  0717                     	;# 
  2055  0718                     	;# 
  2056  0719                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0891                     	;# 
  2062  0891                     	;# 
  2063  0892                     	;# 
  2064  0892                     	;# 
  2065  0892                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0893                     	;# 
  2071  0893                     	;# 
  2072  0894                     	;# 
  2073  0894                     	;# 
  2074  0894                     	;# 
  2075  0895                     	;# 
  2076  0895                     	;# 
  2077  0895                     	;# 
  2078  0896                     	;# 
  2079  0896                     	;# 
  2080  0896                     	;# 
  2081  089B                     	;# 
  2082  0911                     	;# 
  2083  0912                     	;# 
  2084  0913                     	;# 
  2085  0914                     	;# 
  2086  0915                     	;# 
  2087  0916                     	;# 
  2088  0918                     	;# 
  2089  0919                     	;# 
  2090  091A                     	;# 
  2091  091B                     	;# 
  2092  091C                     	;# 
  2093  091D                     	;# 
  2094  091E                     	;# 
  2095  091F                     	;# 
  2096  0E0F                     	;# 
  2097  0E10                     	;# 
  2098  0E11                     	;# 
  2099  0E12                     	;# 
  2100  0E13                     	;# 
  2101  0E14                     	;# 
  2102  0E15                     	;# 
  2103  0E16                     	;# 
  2104  0E17                     	;# 
  2105  0E18                     	;# 
  2106  0E19                     	;# 
  2107  0E1A                     	;# 
  2108  0E1B                     	;# 
  2109  0E1C                     	;# 
  2110  0E1D                     	;# 
  2111  0E1E                     	;# 
  2112  0E1F                     	;# 
  2113  0E20                     	;# 
  2114  0E21                     	;# 
  2115  0E22                     	;# 
  2116  0E24                     	;# 
  2117  0E25                     	;# 
  2118  0E28                     	;# 
  2119  0E29                     	;# 
  2120  0E2A                     	;# 
  2121  0E2B                     	;# 
  2122  0E2C                     	;# 
  2123  0E2D                     	;# 
  2124  0E2E                     	;# 
  2125  0E2F                     	;# 
  2126  0E90                     	;# 
  2127  0E91                     	;# 
  2128  0E92                     	;# 
  2129  0E94                     	;# 
  2130  0E95                     	;# 
  2131  0E9C                     	;# 
  2132  0E9D                     	;# 
  2133  0E9E                     	;# 
  2134  0E9F                     	;# 
  2135  0EA0                     	;# 
  2136  0EA1                     	;# 
  2137  0EA2                     	;# 
  2138  0EA3                     	;# 
  2139  0EA4                     	;# 
  2140  0EA5                     	;# 
  2141  0EA6                     	;# 
  2142  0EA7                     	;# 
  2143  0F0F                     	;# 
  2144  0F10                     	;# 
  2145  0F11                     	;# 
  2146  0F12                     	;# 
  2147  0F13                     	;# 
  2148  0F14                     	;# 
  2149  0F15                     	;# 
  2150  0F16                     	;# 
  2151  0F17                     	;# 
  2152  0F18                     	;# 
  2153  0F19                     	;# 
  2154  0F1A                     	;# 
  2155  0F1B                     	;# 
  2156  0F1C                     	;# 
  2157  0F1D                     	;# 
  2158  0F1E                     	;# 
  2159  0F1F                     	;# 
  2160  0F20                     	;# 
  2161  0F21                     	;# 
  2162  0F22                     	;# 
  2163  0F23                     	;# 
  2164  0F24                     	;# 
  2165  0F25                     	;# 
  2166  0F26                     	;# 
  2167  0F27                     	;# 
  2168  0F28                     	;# 
  2169  0F29                     	;# 
  2170  0F2A                     	;# 
  2171  0F2B                     	;# 
  2172  0F2C                     	;# 
  2173  0F2D                     	;# 
  2174  0F2E                     	;# 
  2175  0F2F                     	;# 
  2176  0F30                     	;# 
  2177  0F31                     	;# 
  2178  0F32                     	;# 
  2179  0F33                     	;# 
  2180  0F34                     	;# 
  2181  0F35                     	;# 
  2182  0F36                     	;# 
  2183  0F37                     	;# 
  2184  0FE4                     	;# 
  2185  0FE5                     	;# 
  2186  0FE6                     	;# 
  2187  0FE7                     	;# 
  2188  0FE8                     	;# 
  2189  0FE9                     	;# 
  2190  0FEA                     	;# 
  2191  0FEB                     	;# 
  2192  0FED                     	;# 
  2193  0FEE                     	;# 
  2194  0FEF                     	;# 
  2195  0000                     	;# 
  2196  0001                     	;# 
  2197  0002                     	;# 
  2198  0003                     	;# 
  2199  0004                     	;# 
  2200  0005                     	;# 
  2201  0006                     	;# 
  2202  0007                     	;# 
  2203  0008                     	;# 
  2204  0009                     	;# 
  2205  000A                     	;# 
  2206  000B                     	;# 
  2207  000C                     	;# 
  2208  000D                     	;# 
  2209  000E                     	;# 
  2210  0010                     	;# 
  2211  0011                     	;# 
  2212  0012                     	;# 
  2213  0013                     	;# 
  2214  0014                     	;# 
  2215  0015                     	;# 
  2216  0015                     	;# 
  2217  0016                     	;# 
  2218  0016                     	;# 
  2219  0017                     	;# 
  2220  0018                     	;# 
  2221  0019                     	;# 
  2222  0019                     	;# 
  2223  001A                     	;# 
  2224  001B                     	;# 
  2225  001C                     	;# 
  2226  001D                     	;# 
  2227  001E                     	;# 
  2228  001F                     	;# 
  2229  008C                     	;# 
  2230  008D                     	;# 
  2231  008E                     	;# 
  2232  0090                     	;# 
  2233  0091                     	;# 
  2234  0092                     	;# 
  2235  0093                     	;# 
  2236  0094                     	;# 
  2237  0097                     	;# 
  2238  009B                     	;# 
  2239  009B                     	;# 
  2240  009C                     	;# 
  2241  009D                     	;# 
  2242  009E                     	;# 
  2243  009F                     	;# 
  2244  010C                     	;# 
  2245  010D                     	;# 
  2246  010E                     	;# 
  2247  0111                     	;# 
  2248  0112                     	;# 
  2249  0113                     	;# 
  2250  0114                     	;# 
  2251  0115                     	;# 
  2252  0116                     	;# 
  2253  0117                     	;# 
  2254  0118                     	;# 
  2255  0119                     	;# 
  2256  018C                     	;# 
  2257  018D                     	;# 
  2258  018E                     	;# 
  2259  0197                     	;# 
  2260  0199                     	;# 
  2261  0199                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019A                     	;# 
  2265  019A                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019B                     	;# 
  2270  019B                     	;# 
  2271  019C                     	;# 
  2272  019C                     	;# 
  2273  019C                     	;# 
  2274  019D                     	;# 
  2275  019D                     	;# 
  2276  019D                     	;# 
  2277  019E                     	;# 
  2278  019E                     	;# 
  2279  019E                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  019F                     	;# 
  2284  019F                     	;# 
  2285  020C                     	;# 
  2286  020D                     	;# 
  2287  020E                     	;# 
  2288  0211                     	;# 
  2289  0211                     	;# 
  2290  0212                     	;# 
  2291  0212                     	;# 
  2292  0213                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0215                     	;# 
  2300  0216                     	;# 
  2301  0216                     	;# 
  2302  0217                     	;# 
  2303  0217                     	;# 
  2304  0219                     	;# 
  2305  021A                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021D                     	;# 
  2309  021D                     	;# 
  2310  021E                     	;# 
  2311  021F                     	;# 
  2312  028C                     	;# 
  2313  028D                     	;# 
  2314  028E                     	;# 
  2315  0291                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0293                     	;# 
  2319  0294                     	;# 
  2320  0295                     	;# 
  2321  0295                     	;# 
  2322  0296                     	;# 
  2323  0297                     	;# 
  2324  0298                     	;# 
  2325  029F                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  0311                     	;# 
  2330  0311                     	;# 
  2331  0312                     	;# 
  2332  0313                     	;# 
  2333  0314                     	;# 
  2334  0315                     	;# 
  2335  0315                     	;# 
  2336  0316                     	;# 
  2337  0317                     	;# 
  2338  0318                     	;# 
  2339  038C                     	;# 
  2340  038D                     	;# 
  2341  038E                     	;# 
  2342  0391                     	;# 
  2343  0392                     	;# 
  2344  0393                     	;# 
  2345  0394                     	;# 
  2346  0395                     	;# 
  2347  0396                     	;# 
  2348  0397                     	;# 
  2349  0398                     	;# 
  2350  0399                     	;# 
  2351  039A                     	;# 
  2352  039C                     	;# 
  2353  039D                     	;# 
  2354  039E                     	;# 
  2355  039F                     	;# 
  2356  0411                     	;# 
  2357  0411                     	;# 
  2358  0412                     	;# 
  2359  0413                     	;# 
  2360  0414                     	;# 
  2361  0415                     	;# 
  2362  0416                     	;# 
  2363  0417                     	;# 
  2364  0418                     	;# 
  2365  0418                     	;# 
  2366  0419                     	;# 
  2367  041A                     	;# 
  2368  041B                     	;# 
  2369  041C                     	;# 
  2370  041D                     	;# 
  2371  041E                     	;# 
  2372  041F                     	;# 
  2373  0498                     	;# 
  2374  0498                     	;# 
  2375  0499                     	;# 
  2376  049A                     	;# 
  2377  049B                     	;# 
  2378  049B                     	;# 
  2379  049C                     	;# 
  2380  049D                     	;# 
  2381  049E                     	;# 
  2382  049F                     	;# 
  2383  0617                     	;# 
  2384  0618                     	;# 
  2385  0619                     	;# 
  2386  0619                     	;# 
  2387  061A                     	;# 
  2388  061B                     	;# 
  2389  061C                     	;# 
  2390  061C                     	;# 
  2391  061F                     	;# 
  2392  0691                     	;# 
  2393  0692                     	;# 
  2394  0693                     	;# 
  2395  0694                     	;# 
  2396  0695                     	;# 
  2397  0696                     	;# 
  2398  0697                     	;# 
  2399  0698                     	;# 
  2400  0699                     	;# 
  2401  0711                     	;# 
  2402  0712                     	;# 
  2403  0713                     	;# 
  2404  0714                     	;# 
  2405  0715                     	;# 
  2406  0716                     	;# 
  2407  0717                     	;# 
  2408  0718                     	;# 
  2409  0719                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0891                     	;# 
  2414  0891                     	;# 
  2415  0891                     	;# 
  2416  0892                     	;# 
  2417  0892                     	;# 
  2418  0892                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0893                     	;# 
  2423  0893                     	;# 
  2424  0893                     	;# 
  2425  0894                     	;# 
  2426  0894                     	;# 
  2427  0894                     	;# 
  2428  0895                     	;# 
  2429  0895                     	;# 
  2430  0895                     	;# 
  2431  0896                     	;# 
  2432  0896                     	;# 
  2433  0896                     	;# 
  2434  089B                     	;# 
  2435  0911                     	;# 
  2436  0912                     	;# 
  2437  0913                     	;# 
  2438  0914                     	;# 
  2439  0915                     	;# 
  2440  0916                     	;# 
  2441  0918                     	;# 
  2442  0919                     	;# 
  2443  091A                     	;# 
  2444  091B                     	;# 
  2445  091C                     	;# 
  2446  091D                     	;# 
  2447  091E                     	;# 
  2448  091F                     	;# 
  2449  0E0F                     	;# 
  2450  0E10                     	;# 
  2451  0E11                     	;# 
  2452  0E12                     	;# 
  2453  0E13                     	;# 
  2454  0E14                     	;# 
  2455  0E15                     	;# 
  2456  0E16                     	;# 
  2457  0E17                     	;# 
  2458  0E18                     	;# 
  2459  0E19                     	;# 
  2460  0E1A                     	;# 
  2461  0E1B                     	;# 
  2462  0E1C                     	;# 
  2463  0E1D                     	;# 
  2464  0E1E                     	;# 
  2465  0E1F                     	;# 
  2466  0E20                     	;# 
  2467  0E21                     	;# 
  2468  0E22                     	;# 
  2469  0E24                     	;# 
  2470  0E25                     	;# 
  2471  0E28                     	;# 
  2472  0E29                     	;# 
  2473  0E2A                     	;# 
  2474  0E2B                     	;# 
  2475  0E2C                     	;# 
  2476  0E2D                     	;# 
  2477  0E2E                     	;# 
  2478  0E2F                     	;# 
  2479  0E90                     	;# 
  2480  0E91                     	;# 
  2481  0E92                     	;# 
  2482  0E94                     	;# 
  2483  0E95                     	;# 
  2484  0E9C                     	;# 
  2485  0E9D                     	;# 
  2486  0E9E                     	;# 
  2487  0E9F                     	;# 
  2488  0EA0                     	;# 
  2489  0EA1                     	;# 
  2490  0EA2                     	;# 
  2491  0EA3                     	;# 
  2492  0EA4                     	;# 
  2493  0EA5                     	;# 
  2494  0EA6                     	;# 
  2495  0EA7                     	;# 
  2496  0F0F                     	;# 
  2497  0F10                     	;# 
  2498  0F11                     	;# 
  2499  0F12                     	;# 
  2500  0F13                     	;# 
  2501  0F14                     	;# 
  2502  0F15                     	;# 
  2503  0F16                     	;# 
  2504  0F17                     	;# 
  2505  0F18                     	;# 
  2506  0F19                     	;# 
  2507  0F1A                     	;# 
  2508  0F1B                     	;# 
  2509  0F1C                     	;# 
  2510  0F1D                     	;# 
  2511  0F1E                     	;# 
  2512  0F1F                     	;# 
  2513  0F20                     	;# 
  2514  0F21                     	;# 
  2515  0F22                     	;# 
  2516  0F23                     	;# 
  2517  0F24                     	;# 
  2518  0F25                     	;# 
  2519  0F26                     	;# 
  2520  0F27                     	;# 
  2521  0F28                     	;# 
  2522  0F29                     	;# 
  2523  0F2A                     	;# 
  2524  0F2B                     	;# 
  2525  0F2C                     	;# 
  2526  0F2D                     	;# 
  2527  0F2E                     	;# 
  2528  0F2F                     	;# 
  2529  0F30                     	;# 
  2530  0F31                     	;# 
  2531  0F32                     	;# 
  2532  0F33                     	;# 
  2533  0F34                     	;# 
  2534  0F35                     	;# 
  2535  0F36                     	;# 
  2536  0F37                     	;# 
  2537  0FE4                     	;# 
  2538  0FE5                     	;# 
  2539  0FE6                     	;# 
  2540  0FE7                     	;# 
  2541  0FE8                     	;# 
  2542  0FE9                     	;# 
  2543  0FEA                     	;# 
  2544  0FEB                     	;# 
  2545  0FED                     	;# 
  2546  0FEE                     	;# 
  2547  0FEF                     	;# 
  2548  0000                     	;# 
  2549  0001                     	;# 
  2550  0002                     	;# 
  2551  0003                     	;# 
  2552  0004                     	;# 
  2553  0005                     	;# 
  2554  0006                     	;# 
  2555  0007                     	;# 
  2556  0008                     	;# 
  2557  0009                     	;# 
  2558  000A                     	;# 
  2559  000B                     	;# 
  2560  000C                     	;# 
  2561  000D                     	;# 
  2562  000E                     	;# 
  2563  0010                     	;# 
  2564  0011                     	;# 
  2565  0012                     	;# 
  2566  0013                     	;# 
  2567  0014                     	;# 
  2568  0015                     	;# 
  2569  0015                     	;# 
  2570  0016                     	;# 
  2571  0016                     	;# 
  2572  0017                     	;# 
  2573  0018                     	;# 
  2574  0019                     	;# 
  2575  0019                     	;# 
  2576  001A                     	;# 
  2577  001B                     	;# 
  2578  001C                     	;# 
  2579  001D                     	;# 
  2580  001E                     	;# 
  2581  001F                     	;# 
  2582  008C                     	;# 
  2583  008D                     	;# 
  2584  008E                     	;# 
  2585  0090                     	;# 
  2586  0091                     	;# 
  2587  0092                     	;# 
  2588  0093                     	;# 
  2589  0094                     	;# 
  2590  0097                     	;# 
  2591  009B                     	;# 
  2592  009B                     	;# 
  2593  009C                     	;# 
  2594  009D                     	;# 
  2595  009E                     	;# 
  2596  009F                     	;# 
  2597  010C                     	;# 
  2598  010D                     	;# 
  2599  010E                     	;# 
  2600  0111                     	;# 
  2601  0112                     	;# 
  2602  0113                     	;# 
  2603  0114                     	;# 
  2604  0115                     	;# 
  2605  0116                     	;# 
  2606  0117                     	;# 
  2607  0118                     	;# 
  2608  0119                     	;# 
  2609  018C                     	;# 
  2610  018D                     	;# 
  2611  018E                     	;# 
  2612  0197                     	;# 
  2613  0199                     	;# 
  2614  0199                     	;# 
  2615  0199                     	;# 
  2616  019A                     	;# 
  2617  019A                     	;# 
  2618  019A                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019B                     	;# 
  2622  019B                     	;# 
  2623  019B                     	;# 
  2624  019C                     	;# 
  2625  019C                     	;# 
  2626  019C                     	;# 
  2627  019D                     	;# 
  2628  019D                     	;# 
  2629  019D                     	;# 
  2630  019E                     	;# 
  2631  019E                     	;# 
  2632  019E                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  019F                     	;# 
  2636  019F                     	;# 
  2637  019F                     	;# 
  2638  020C                     	;# 
  2639  020D                     	;# 
  2640  020E                     	;# 
  2641  0211                     	;# 
  2642  0211                     	;# 
  2643  0212                     	;# 
  2644  0212                     	;# 
  2645  0213                     	;# 
  2646  0213                     	;# 
  2647  0214                     	;# 
  2648  0214                     	;# 
  2649  0215                     	;# 
  2650  0215                     	;# 
  2651  0215                     	;# 
  2652  0215                     	;# 
  2653  0216                     	;# 
  2654  0216                     	;# 
  2655  0217                     	;# 
  2656  0217                     	;# 
  2657  0219                     	;# 
  2658  021A                     	;# 
  2659  021B                     	;# 
  2660  021C                     	;# 
  2661  021D                     	;# 
  2662  021D                     	;# 
  2663  021E                     	;# 
  2664  021F                     	;# 
  2665  028C                     	;# 
  2666  028D                     	;# 
  2667  028E                     	;# 
  2668  0291                     	;# 
  2669  0291                     	;# 
  2670  0292                     	;# 
  2671  0293                     	;# 
  2672  0294                     	;# 
  2673  0295                     	;# 
  2674  0295                     	;# 
  2675  0296                     	;# 
  2676  0297                     	;# 
  2677  0298                     	;# 
  2678  029F                     	;# 
  2679  030C                     	;# 
  2680  030D                     	;# 
  2681  030E                     	;# 
  2682  0311                     	;# 
  2683  0311                     	;# 
  2684  0312                     	;# 
  2685  0313                     	;# 
  2686  0314                     	;# 
  2687  0315                     	;# 
  2688  0315                     	;# 
  2689  0316                     	;# 
  2690  0317                     	;# 
  2691  0318                     	;# 
  2692  038C                     	;# 
  2693  038D                     	;# 
  2694  038E                     	;# 
  2695  0391                     	;# 
  2696  0392                     	;# 
  2697  0393                     	;# 
  2698  0394                     	;# 
  2699  0395                     	;# 
  2700  0396                     	;# 
  2701  0397                     	;# 
  2702  0398                     	;# 
  2703  0399                     	;# 
  2704  039A                     	;# 
  2705  039C                     	;# 
  2706  039D                     	;# 
  2707  039E                     	;# 
  2708  039F                     	;# 
  2709  0411                     	;# 
  2710  0411                     	;# 
  2711  0412                     	;# 
  2712  0413                     	;# 
  2713  0414                     	;# 
  2714  0415                     	;# 
  2715  0416                     	;# 
  2716  0417                     	;# 
  2717  0418                     	;# 
  2718  0418                     	;# 
  2719  0419                     	;# 
  2720  041A                     	;# 
  2721  041B                     	;# 
  2722  041C                     	;# 
  2723  041D                     	;# 
  2724  041E                     	;# 
  2725  041F                     	;# 
  2726  0498                     	;# 
  2727  0498                     	;# 
  2728  0499                     	;# 
  2729  049A                     	;# 
  2730  049B                     	;# 
  2731  049B                     	;# 
  2732  049C                     	;# 
  2733  049D                     	;# 
  2734  049E                     	;# 
  2735  049F                     	;# 
  2736  0617                     	;# 
  2737  0618                     	;# 
  2738  0619                     	;# 
  2739  0619                     	;# 
  2740  061A                     	;# 
  2741  061B                     	;# 
  2742  061C                     	;# 
  2743  061C                     	;# 
  2744  061F                     	;# 
  2745  0691                     	;# 
  2746  0692                     	;# 
  2747  0693                     	;# 
  2748  0694                     	;# 
  2749  0695                     	;# 
  2750  0696                     	;# 
  2751  0697                     	;# 
  2752  0698                     	;# 
  2753  0699                     	;# 
  2754  0711                     	;# 
  2755  0712                     	;# 
  2756  0713                     	;# 
  2757  0714                     	;# 
  2758  0715                     	;# 
  2759  0716                     	;# 
  2760  0717                     	;# 
  2761  0718                     	;# 
  2762  0719                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0892                     	;# 
  2770  0892                     	;# 
  2771  0892                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0894                     	;# 
  2779  0894                     	;# 
  2780  0894                     	;# 
  2781  0895                     	;# 
  2782  0895                     	;# 
  2783  0895                     	;# 
  2784  0896                     	;# 
  2785  0896                     	;# 
  2786  0896                     	;# 
  2787  089B                     	;# 
  2788  0911                     	;# 
  2789  0912                     	;# 
  2790  0913                     	;# 
  2791  0914                     	;# 
  2792  0915                     	;# 
  2793  0916                     	;# 
  2794  0918                     	;# 
  2795  0919                     	;# 
  2796  091A                     	;# 
  2797  091B                     	;# 
  2798  091C                     	;# 
  2799  091D                     	;# 
  2800  091E                     	;# 
  2801  091F                     	;# 
  2802  0E0F                     	;# 
  2803  0E10                     	;# 
  2804  0E11                     	;# 
  2805  0E12                     	;# 
  2806  0E13                     	;# 
  2807  0E14                     	;# 
  2808  0E15                     	;# 
  2809  0E16                     	;# 
  2810  0E17                     	;# 
  2811  0E18                     	;# 
  2812  0E19                     	;# 
  2813  0E1A                     	;# 
  2814  0E1B                     	;# 
  2815  0E1C                     	;# 
  2816  0E1D                     	;# 
  2817  0E1E                     	;# 
  2818  0E1F                     	;# 
  2819  0E20                     	;# 
  2820  0E21                     	;# 
  2821  0E22                     	;# 
  2822  0E24                     	;# 
  2823  0E25                     	;# 
  2824  0E28                     	;# 
  2825  0E29                     	;# 
  2826  0E2A                     	;# 
  2827  0E2B                     	;# 
  2828  0E2C                     	;# 
  2829  0E2D                     	;# 
  2830  0E2E                     	;# 
  2831  0E2F                     	;# 
  2832  0E90                     	;# 
  2833  0E91                     	;# 
  2834  0E92                     	;# 
  2835  0E94                     	;# 
  2836  0E95                     	;# 
  2837  0E9C                     	;# 
  2838  0E9D                     	;# 
  2839  0E9E                     	;# 
  2840  0E9F                     	;# 
  2841  0EA0                     	;# 
  2842  0EA1                     	;# 
  2843  0EA2                     	;# 
  2844  0EA3                     	;# 
  2845  0EA4                     	;# 
  2846  0EA5                     	;# 
  2847  0EA6                     	;# 
  2848  0EA7                     	;# 
  2849  0F0F                     	;# 
  2850  0F10                     	;# 
  2851  0F11                     	;# 
  2852  0F12                     	;# 
  2853  0F13                     	;# 
  2854  0F14                     	;# 
  2855  0F15                     	;# 
  2856  0F16                     	;# 
  2857  0F17                     	;# 
  2858  0F18                     	;# 
  2859  0F19                     	;# 
  2860  0F1A                     	;# 
  2861  0F1B                     	;# 
  2862  0F1C                     	;# 
  2863  0F1D                     	;# 
  2864  0F1E                     	;# 
  2865  0F1F                     	;# 
  2866  0F20                     	;# 
  2867  0F21                     	;# 
  2868  0F22                     	;# 
  2869  0F23                     	;# 
  2870  0F24                     	;# 
  2871  0F25                     	;# 
  2872  0F26                     	;# 
  2873  0F27                     	;# 
  2874  0F28                     	;# 
  2875  0F29                     	;# 
  2876  0F2A                     	;# 
  2877  0F2B                     	;# 
  2878  0F2C                     	;# 
  2879  0F2D                     	;# 
  2880  0F2E                     	;# 
  2881  0F2F                     	;# 
  2882  0F30                     	;# 
  2883  0F31                     	;# 
  2884  0F32                     	;# 
  2885  0F33                     	;# 
  2886  0F34                     	;# 
  2887  0F35                     	;# 
  2888  0F36                     	;# 
  2889  0F37                     	;# 
  2890  0FE4                     	;# 
  2891  0FE5                     	;# 
  2892  0FE6                     	;# 
  2893  0FE7                     	;# 
  2894  0FE8                     	;# 
  2895  0FE9                     	;# 
  2896  0FEA                     	;# 
  2897  0FEB                     	;# 
  2898  0FED                     	;# 
  2899  0FEE                     	;# 
  2900  0FEF                     	;# 
  2901  0000                     	;# 
  2902  0001                     	;# 
  2903  0002                     	;# 
  2904  0003                     	;# 
  2905  0004                     	;# 
  2906  0005                     	;# 
  2907  0006                     	;# 
  2908  0007                     	;# 
  2909  0008                     	;# 
  2910  0009                     	;# 
  2911  000A                     	;# 
  2912  000B                     	;# 
  2913  000C                     	;# 
  2914  000D                     	;# 
  2915  000E                     	;# 
  2916  0010                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0014                     	;# 
  2921  0015                     	;# 
  2922  0015                     	;# 
  2923  0016                     	;# 
  2924  0016                     	;# 
  2925  0017                     	;# 
  2926  0018                     	;# 
  2927  0019                     	;# 
  2928  0019                     	;# 
  2929  001A                     	;# 
  2930  001B                     	;# 
  2931  001C                     	;# 
  2932  001D                     	;# 
  2933  001E                     	;# 
  2934  001F                     	;# 
  2935  008C                     	;# 
  2936  008D                     	;# 
  2937  008E                     	;# 
  2938  0090                     	;# 
  2939  0091                     	;# 
  2940  0092                     	;# 
  2941  0093                     	;# 
  2942  0094                     	;# 
  2943  0097                     	;# 
  2944  009B                     	;# 
  2945  009B                     	;# 
  2946  009C                     	;# 
  2947  009D                     	;# 
  2948  009E                     	;# 
  2949  009F                     	;# 
  2950  010C                     	;# 
  2951  010D                     	;# 
  2952  010E                     	;# 
  2953  0111                     	;# 
  2954  0112                     	;# 
  2955  0113                     	;# 
  2956  0114                     	;# 
  2957  0115                     	;# 
  2958  0116                     	;# 
  2959  0117                     	;# 
  2960  0118                     	;# 
  2961  0119                     	;# 
  2962  018C                     	;# 
  2963  018D                     	;# 
  2964  018E                     	;# 
  2965  0197                     	;# 
  2966  0199                     	;# 
  2967  0199                     	;# 
  2968  0199                     	;# 
  2969  019A                     	;# 
  2970  019A                     	;# 
  2971  019A                     	;# 
  2972  019B                     	;# 
  2973  019B                     	;# 
  2974  019B                     	;# 
  2975  019B                     	;# 
  2976  019B                     	;# 
  2977  019C                     	;# 
  2978  019C                     	;# 
  2979  019C                     	;# 
  2980  019D                     	;# 
  2981  019D                     	;# 
  2982  019D                     	;# 
  2983  019E                     	;# 
  2984  019E                     	;# 
  2985  019E                     	;# 
  2986  019F                     	;# 
  2987  019F                     	;# 
  2988  019F                     	;# 
  2989  019F                     	;# 
  2990  019F                     	;# 
  2991  020C                     	;# 
  2992  020D                     	;# 
  2993  020E                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0212                     	;# 
  2998  0213                     	;# 
  2999  0213                     	;# 
  3000  0214                     	;# 
  3001  0214                     	;# 
  3002  0215                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0215                     	;# 
  3006  0216                     	;# 
  3007  0216                     	;# 
  3008  0217                     	;# 
  3009  0217                     	;# 
  3010  0219                     	;# 
  3011  021A                     	;# 
  3012  021B                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028D                     	;# 
  3020  028E                     	;# 
  3021  0291                     	;# 
  3022  0291                     	;# 
  3023  0292                     	;# 
  3024  0293                     	;# 
  3025  0294                     	;# 
  3026  0295                     	;# 
  3027  0295                     	;# 
  3028  0296                     	;# 
  3029  0297                     	;# 
  3030  0298                     	;# 
  3031  029F                     	;# 
  3032  030C                     	;# 
  3033  030D                     	;# 
  3034  030E                     	;# 
  3035  0311                     	;# 
  3036  0311                     	;# 
  3037  0312                     	;# 
  3038  0313                     	;# 
  3039  0314                     	;# 
  3040  0315                     	;# 
  3041  0315                     	;# 
  3042  0316                     	;# 
  3043  0317                     	;# 
  3044  0318                     	;# 
  3045  038C                     	;# 
  3046  038D                     	;# 
  3047  038E                     	;# 
  3048  0391                     	;# 
  3049  0392                     	;# 
  3050  0393                     	;# 
  3051  0394                     	;# 
  3052  0395                     	;# 
  3053  0396                     	;# 
  3054  0397                     	;# 
  3055  0398                     	;# 
  3056  0399                     	;# 
  3057  039A                     	;# 
  3058  039C                     	;# 
  3059  039D                     	;# 
  3060  039E                     	;# 
  3061  039F                     	;# 
  3062  0411                     	;# 
  3063  0411                     	;# 
  3064  0412                     	;# 
  3065  0413                     	;# 
  3066  0414                     	;# 
  3067  0415                     	;# 
  3068  0416                     	;# 
  3069  0417                     	;# 
  3070  0418                     	;# 
  3071  0418                     	;# 
  3072  0419                     	;# 
  3073  041A                     	;# 
  3074  041B                     	;# 
  3075  041C                     	;# 
  3076  041D                     	;# 
  3077  041E                     	;# 
  3078  041F                     	;# 
  3079  0498                     	;# 
  3080  0498                     	;# 
  3081  0499                     	;# 
  3082  049A                     	;# 
  3083  049B                     	;# 
  3084  049B                     	;# 
  3085  049C                     	;# 
  3086  049D                     	;# 
  3087  049E                     	;# 
  3088  049F                     	;# 
  3089  0617                     	;# 
  3090  0618                     	;# 
  3091  0619                     	;# 
  3092  0619                     	;# 
  3093  061A                     	;# 
  3094  061B                     	;# 
  3095  061C                     	;# 
  3096  061C                     	;# 
  3097  061F                     	;# 
  3098  0691                     	;# 
  3099  0692                     	;# 
  3100  0693                     	;# 
  3101  0694                     	;# 
  3102  0695                     	;# 
  3103  0696                     	;# 
  3104  0697                     	;# 
  3105  0698                     	;# 
  3106  0699                     	;# 
  3107  0711                     	;# 
  3108  0712                     	;# 
  3109  0713                     	;# 
  3110  0714                     	;# 
  3111  0715                     	;# 
  3112  0716                     	;# 
  3113  0717                     	;# 
  3114  0718                     	;# 
  3115  0719                     	;# 
  3116  0891                     	;# 
  3117  0891                     	;# 
  3118  0891                     	;# 
  3119  0891                     	;# 
  3120  0891                     	;# 
  3121  0891                     	;# 
  3122  0892                     	;# 
  3123  0892                     	;# 
  3124  0892                     	;# 
  3125  0893                     	;# 
  3126  0893                     	;# 
  3127  0893                     	;# 
  3128  0893                     	;# 
  3129  0893                     	;# 
  3130  0893                     	;# 
  3131  0894                     	;# 
  3132  0894                     	;# 
  3133  0894                     	;# 
  3134  0895                     	;# 
  3135  0895                     	;# 
  3136  0895                     	;# 
  3137  0896                     	;# 
  3138  0896                     	;# 
  3139  0896                     	;# 
  3140  089B                     	;# 
  3141  0911                     	;# 
  3142  0912                     	;# 
  3143  0913                     	;# 
  3144  0914                     	;# 
  3145  0915                     	;# 
  3146  0916                     	;# 
  3147  0918                     	;# 
  3148  0919                     	;# 
  3149  091A                     	;# 
  3150  091B                     	;# 
  3151  091C                     	;# 
  3152  091D                     	;# 
  3153  091E                     	;# 
  3154  091F                     	;# 
  3155  0E0F                     	;# 
  3156  0E10                     	;# 
  3157  0E11                     	;# 
  3158  0E12                     	;# 
  3159  0E13                     	;# 
  3160  0E14                     	;# 
  3161  0E15                     	;# 
  3162  0E16                     	;# 
  3163  0E17                     	;# 
  3164  0E18                     	;# 
  3165  0E19                     	;# 
  3166  0E1A                     	;# 
  3167  0E1B                     	;# 
  3168  0E1C                     	;# 
  3169  0E1D                     	;# 
  3170  0E1E                     	;# 
  3171  0E1F                     	;# 
  3172  0E20                     	;# 
  3173  0E21                     	;# 
  3174  0E22                     	;# 
  3175  0E24                     	;# 
  3176  0E25                     	;# 
  3177  0E28                     	;# 
  3178  0E29                     	;# 
  3179  0E2A                     	;# 
  3180  0E2B                     	;# 
  3181  0E2C                     	;# 
  3182  0E2D                     	;# 
  3183  0E2E                     	;# 
  3184  0E2F                     	;# 
  3185  0E90                     	;# 
  3186  0E91                     	;# 
  3187  0E92                     	;# 
  3188  0E94                     	;# 
  3189  0E95                     	;# 
  3190  0E9C                     	;# 
  3191  0E9D                     	;# 
  3192  0E9E                     	;# 
  3193  0E9F                     	;# 
  3194  0EA0                     	;# 
  3195  0EA1                     	;# 
  3196  0EA2                     	;# 
  3197  0EA3                     	;# 
  3198  0EA4                     	;# 
  3199  0EA5                     	;# 
  3200  0EA6                     	;# 
  3201  0EA7                     	;# 
  3202  0F0F                     	;# 
  3203  0F10                     	;# 
  3204  0F11                     	;# 
  3205  0F12                     	;# 
  3206  0F13                     	;# 
  3207  0F14                     	;# 
  3208  0F15                     	;# 
  3209  0F16                     	;# 
  3210  0F17                     	;# 
  3211  0F18                     	;# 
  3212  0F19                     	;# 
  3213  0F1A                     	;# 
  3214  0F1B                     	;# 
  3215  0F1C                     	;# 
  3216  0F1D                     	;# 
  3217  0F1E                     	;# 
  3218  0F1F                     	;# 
  3219  0F20                     	;# 
  3220  0F21                     	;# 
  3221  0F22                     	;# 
  3222  0F23                     	;# 
  3223  0F24                     	;# 
  3224  0F25                     	;# 
  3225  0F26                     	;# 
  3226  0F27                     	;# 
  3227  0F28                     	;# 
  3228  0F29                     	;# 
  3229  0F2A                     	;# 
  3230  0F2B                     	;# 
  3231  0F2C                     	;# 
  3232  0F2D                     	;# 
  3233  0F2E                     	;# 
  3234  0F2F                     	;# 
  3235  0F30                     	;# 
  3236  0F31                     	;# 
  3237  0F32                     	;# 
  3238  0F33                     	;# 
  3239  0F34                     	;# 
  3240  0F35                     	;# 
  3241  0F36                     	;# 
  3242  0F37                     	;# 
  3243  0FE4                     	;# 
  3244  0FE5                     	;# 
  3245  0FE6                     	;# 
  3246  0FE7                     	;# 
  3247  0FE8                     	;# 
  3248  0FE9                     	;# 
  3249  0FEA                     	;# 
  3250  0FEB                     	;# 
  3251  0FED                     	;# 
  3252  0FEE                     	;# 
  3253  0FEF                     	;# 
  3254  0000                     	;# 
  3255  0001                     	;# 
  3256  0002                     	;# 
  3257  0003                     	;# 
  3258  0004                     	;# 
  3259  0005                     	;# 
  3260  0006                     	;# 
  3261  0007                     	;# 
  3262  0008                     	;# 
  3263  0009                     	;# 
  3264  000A                     	;# 
  3265  000B                     	;# 
  3266  000C                     	;# 
  3267  000D                     	;# 
  3268  000E                     	;# 
  3269  0010                     	;# 
  3270  0011                     	;# 
  3271  0012                     	;# 
  3272  0013                     	;# 
  3273  0014                     	;# 
  3274  0015                     	;# 
  3275  0015                     	;# 
  3276  0016                     	;# 
  3277  0016                     	;# 
  3278  0017                     	;# 
  3279  0018                     	;# 
  3280  0019                     	;# 
  3281  0019                     	;# 
  3282  001A                     	;# 
  3283  001B                     	;# 
  3284  001C                     	;# 
  3285  001D                     	;# 
  3286  001E                     	;# 
  3287  001F                     	;# 
  3288  008C                     	;# 
  3289  008D                     	;# 
  3290  008E                     	;# 
  3291  0090                     	;# 
  3292  0091                     	;# 
  3293  0092                     	;# 
  3294  0093                     	;# 
  3295  0094                     	;# 
  3296  0097                     	;# 
  3297  009B                     	;# 
  3298  009B                     	;# 
  3299  009C                     	;# 
  3300  009D                     	;# 
  3301  009E                     	;# 
  3302  009F                     	;# 
  3303  010C                     	;# 
  3304  010D                     	;# 
  3305  010E                     	;# 
  3306  0111                     	;# 
  3307  0112                     	;# 
  3308  0113                     	;# 
  3309  0114                     	;# 
  3310  0115                     	;# 
  3311  0116                     	;# 
  3312  0117                     	;# 
  3313  0118                     	;# 
  3314  0119                     	;# 
  3315  018C                     	;# 
  3316  018D                     	;# 
  3317  018E                     	;# 
  3318  0197                     	;# 
  3319  0199                     	;# 
  3320  0199                     	;# 
  3321  0199                     	;# 
  3322  019A                     	;# 
  3323  019A                     	;# 
  3324  019A                     	;# 
  3325  019B                     	;# 
  3326  019B                     	;# 
  3327  019B                     	;# 
  3328  019B                     	;# 
  3329  019B                     	;# 
  3330  019C                     	;# 
  3331  019C                     	;# 
  3332  019C                     	;# 
  3333  019D                     	;# 
  3334  019D                     	;# 
  3335  019D                     	;# 
  3336  019E                     	;# 
  3337  019E                     	;# 
  3338  019E                     	;# 
  3339  019F                     	;# 
  3340  019F                     	;# 
  3341  019F                     	;# 
  3342  019F                     	;# 
  3343  019F                     	;# 
  3344  020C                     	;# 
  3345  020D                     	;# 
  3346  020E                     	;# 
  3347  0211                     	;# 
  3348  0211                     	;# 
  3349  0212                     	;# 
  3350  0212                     	;# 
  3351  0213                     	;# 
  3352  0213                     	;# 
  3353  0214                     	;# 
  3354  0214                     	;# 
  3355  0215                     	;# 
  3356  0215                     	;# 
  3357  0215                     	;# 
  3358  0215                     	;# 
  3359  0216                     	;# 
  3360  0216                     	;# 
  3361  0217                     	;# 
  3362  0217                     	;# 
  3363  0219                     	;# 
  3364  021A                     	;# 
  3365  021B                     	;# 
  3366  021C                     	;# 
  3367  021D                     	;# 
  3368  021D                     	;# 
  3369  021E                     	;# 
  3370  021F                     	;# 
  3371  028C                     	;# 
  3372  028D                     	;# 
  3373  028E                     	;# 
  3374  0291                     	;# 
  3375  0291                     	;# 
  3376  0292                     	;# 
  3377  0293                     	;# 
  3378  0294                     	;# 
  3379  0295                     	;# 
  3380  0295                     	;# 
  3381  0296                     	;# 
  3382  0297                     	;# 
  3383  0298                     	;# 
  3384  029F                     	;# 
  3385  030C                     	;# 
  3386  030D                     	;# 
  3387  030E                     	;# 
  3388  0311                     	;# 
  3389  0311                     	;# 
  3390  0312                     	;# 
  3391  0313                     	;# 
  3392  0314                     	;# 
  3393  0315                     	;# 
  3394  0315                     	;# 
  3395  0316                     	;# 
  3396  0317                     	;# 
  3397  0318                     	;# 
  3398  038C                     	;# 
  3399  038D                     	;# 
  3400  038E                     	;# 
  3401  0391                     	;# 
  3402  0392                     	;# 
  3403  0393                     	;# 
  3404  0394                     	;# 
  3405  0395                     	;# 
  3406  0396                     	;# 
  3407  0397                     	;# 
  3408  0398                     	;# 
  3409  0399                     	;# 
  3410  039A                     	;# 
  3411  039C                     	;# 
  3412  039D                     	;# 
  3413  039E                     	;# 
  3414  039F                     	;# 
  3415  0411                     	;# 
  3416  0411                     	;# 
  3417  0412                     	;# 
  3418  0413                     	;# 
  3419  0414                     	;# 
  3420  0415                     	;# 
  3421  0416                     	;# 
  3422  0417                     	;# 
  3423  0418                     	;# 
  3424  0418                     	;# 
  3425  0419                     	;# 
  3426  041A                     	;# 
  3427  041B                     	;# 
  3428  041C                     	;# 
  3429  041D                     	;# 
  3430  041E                     	;# 
  3431  041F                     	;# 
  3432  0498                     	;# 
  3433  0498                     	;# 
  3434  0499                     	;# 
  3435  049A                     	;# 
  3436  049B                     	;# 
  3437  049B                     	;# 
  3438  049C                     	;# 
  3439  049D                     	;# 
  3440  049E                     	;# 
  3441  049F                     	;# 
  3442  0617                     	;# 
  3443  0618                     	;# 
  3444  0619                     	;# 
  3445  0619                     	;# 
  3446  061A                     	;# 
  3447  061B                     	;# 
  3448  061C                     	;# 
  3449  061C                     	;# 
  3450  061F                     	;# 
  3451  0691                     	;# 
  3452  0692                     	;# 
  3453  0693                     	;# 
  3454  0694                     	;# 
  3455  0695                     	;# 
  3456  0696                     	;# 
  3457  0697                     	;# 
  3458  0698                     	;# 
  3459  0699                     	;# 
  3460  0711                     	;# 
  3461  0712                     	;# 
  3462  0713                     	;# 
  3463  0714                     	;# 
  3464  0715                     	;# 
  3465  0716                     	;# 
  3466  0717                     	;# 
  3467  0718                     	;# 
  3468  0719                     	;# 
  3469  0891                     	;# 
  3470  0891                     	;# 
  3471  0891                     	;# 
  3472  0891                     	;# 
  3473  0891                     	;# 
  3474  0891                     	;# 
  3475  0892                     	;# 
  3476  0892                     	;# 
  3477  0892                     	;# 
  3478  0893                     	;# 
  3479  0893                     	;# 
  3480  0893                     	;# 
  3481  0893                     	;# 
  3482  0893                     	;# 
  3483  0893                     	;# 
  3484  0894                     	;# 
  3485  0894                     	;# 
  3486  0894                     	;# 
  3487  0895                     	;# 
  3488  0895                     	;# 
  3489  0895                     	;# 
  3490  0896                     	;# 
  3491  0896                     	;# 
  3492  0896                     	;# 
  3493  089B                     	;# 
  3494  0911                     	;# 
  3495  0912                     	;# 
  3496  0913                     	;# 
  3497  0914                     	;# 
  3498  0915                     	;# 
  3499  0916                     	;# 
  3500  0918                     	;# 
  3501  0919                     	;# 
  3502  091A                     	;# 
  3503  091B                     	;# 
  3504  091C                     	;# 
  3505  091D                     	;# 
  3506  091E                     	;# 
  3507  091F                     	;# 
  3508  0E0F                     	;# 
  3509  0E10                     	;# 
  3510  0E11                     	;# 
  3511  0E12                     	;# 
  3512  0E13                     	;# 
  3513  0E14                     	;# 
  3514  0E15                     	;# 
  3515  0E16                     	;# 
  3516  0E17                     	;# 
  3517  0E18                     	;# 
  3518  0E19                     	;# 
  3519  0E1A                     	;# 
  3520  0E1B                     	;# 
  3521  0E1C                     	;# 
  3522  0E1D                     	;# 
  3523  0E1E                     	;# 
  3524  0E1F                     	;# 
  3525  0E20                     	;# 
  3526  0E21                     	;# 
  3527  0E22                     	;# 
  3528  0E24                     	;# 
  3529  0E25                     	;# 
  3530  0E28                     	;# 
  3531  0E29                     	;# 
  3532  0E2A                     	;# 
  3533  0E2B                     	;# 
  3534  0E2C                     	;# 
  3535  0E2D                     	;# 
  3536  0E2E                     	;# 
  3537  0E2F                     	;# 
  3538  0E90                     	;# 
  3539  0E91                     	;# 
  3540  0E92                     	;# 
  3541  0E94                     	;# 
  3542  0E95                     	;# 
  3543  0E9C                     	;# 
  3544  0E9D                     	;# 
  3545  0E9E                     	;# 
  3546  0E9F                     	;# 
  3547  0EA0                     	;# 
  3548  0EA1                     	;# 
  3549  0EA2                     	;# 
  3550  0EA3                     	;# 
  3551  0EA4                     	;# 
  3552  0EA5                     	;# 
  3553  0EA6                     	;# 
  3554  0EA7                     	;# 
  3555  0F0F                     	;# 
  3556  0F10                     	;# 
  3557  0F11                     	;# 
  3558  0F12                     	;# 
  3559  0F13                     	;# 
  3560  0F14                     	;# 
  3561  0F15                     	;# 
  3562  0F16                     	;# 
  3563  0F17                     	;# 
  3564  0F18                     	;# 
  3565  0F19                     	;# 
  3566  0F1A                     	;# 
  3567  0F1B                     	;# 
  3568  0F1C                     	;# 
  3569  0F1D                     	;# 
  3570  0F1E                     	;# 
  3571  0F1F                     	;# 
  3572  0F20                     	;# 
  3573  0F21                     	;# 
  3574  0F22                     	;# 
  3575  0F23                     	;# 
  3576  0F24                     	;# 
  3577  0F25                     	;# 
  3578  0F26                     	;# 
  3579  0F27                     	;# 
  3580  0F28                     	;# 
  3581  0F29                     	;# 
  3582  0F2A                     	;# 
  3583  0F2B                     	;# 
  3584  0F2C                     	;# 
  3585  0F2D                     	;# 
  3586  0F2E                     	;# 
  3587  0F2F                     	;# 
  3588  0F30                     	;# 
  3589  0F31                     	;# 
  3590  0F32                     	;# 
  3591  0F33                     	;# 
  3592  0F34                     	;# 
  3593  0F35                     	;# 
  3594  0F36                     	;# 
  3595  0F37                     	;# 
  3596  0FE4                     	;# 
  3597  0FE5                     	;# 
  3598  0FE6                     	;# 
  3599  0FE7                     	;# 
  3600  0FE8                     	;# 
  3601  0FE9                     	;# 
  3602  0FEA                     	;# 
  3603  0FEB                     	;# 
  3604  0FED                     	;# 
  3605  0FEE                     	;# 
  3606  0FEF                     	;# 
  3607  0000                     	;# 
  3608  0001                     	;# 
  3609  0002                     	;# 
  3610  0003                     	;# 
  3611  0004                     	;# 
  3612  0005                     	;# 
  3613  0006                     	;# 
  3614  0007                     	;# 
  3615  0008                     	;# 
  3616  0009                     	;# 
  3617  000A                     	;# 
  3618  000B                     	;# 
  3619  000C                     	;# 
  3620  000D                     	;# 
  3621  000E                     	;# 
  3622  0010                     	;# 
  3623  0011                     	;# 
  3624  0012                     	;# 
  3625  0013                     	;# 
  3626  0014                     	;# 
  3627  0015                     	;# 
  3628  0015                     	;# 
  3629  0016                     	;# 
  3630  0016                     	;# 
  3631  0017                     	;# 
  3632  0018                     	;# 
  3633  0019                     	;# 
  3634  0019                     	;# 
  3635  001A                     	;# 
  3636  001B                     	;# 
  3637  001C                     	;# 
  3638  001D                     	;# 
  3639  001E                     	;# 
  3640  001F                     	;# 
  3641  008C                     	;# 
  3642  008D                     	;# 
  3643  008E                     	;# 
  3644  0090                     	;# 
  3645  0091                     	;# 
  3646  0092                     	;# 
  3647  0093                     	;# 
  3648  0094                     	;# 
  3649  0097                     	;# 
  3650  009B                     	;# 
  3651  009B                     	;# 
  3652  009C                     	;# 
  3653  009D                     	;# 
  3654  009E                     	;# 
  3655  009F                     	;# 
  3656  010C                     	;# 
  3657  010D                     	;# 
  3658  010E                     	;# 
  3659  0111                     	;# 
  3660  0112                     	;# 
  3661  0113                     	;# 
  3662  0114                     	;# 
  3663  0115                     	;# 
  3664  0116                     	;# 
  3665  0117                     	;# 
  3666  0118                     	;# 
  3667  0119                     	;# 
  3668  018C                     	;# 
  3669  018D                     	;# 
  3670  018E                     	;# 
  3671  0197                     	;# 
  3672  0199                     	;# 
  3673  0199                     	;# 
  3674  0199                     	;# 
  3675  019A                     	;# 
  3676  019A                     	;# 
  3677  019A                     	;# 
  3678  019B                     	;# 
  3679  019B                     	;# 
  3680  019B                     	;# 
  3681  019B                     	;# 
  3682  019B                     	;# 
  3683  019C                     	;# 
  3684  019C                     	;# 
  3685  019C                     	;# 
  3686  019D                     	;# 
  3687  019D                     	;# 
  3688  019D                     	;# 
  3689  019E                     	;# 
  3690  019E                     	;# 
  3691  019E                     	;# 
  3692  019F                     	;# 
  3693  019F                     	;# 
  3694  019F                     	;# 
  3695  019F                     	;# 
  3696  019F                     	;# 
  3697  020C                     	;# 
  3698  020D                     	;# 
  3699  020E                     	;# 
  3700  0211                     	;# 
  3701  0211                     	;# 
  3702  0212                     	;# 
  3703  0212                     	;# 
  3704  0213                     	;# 
  3705  0213                     	;# 
  3706  0214                     	;# 
  3707  0214                     	;# 
  3708  0215                     	;# 
  3709  0215                     	;# 
  3710  0215                     	;# 
  3711  0215                     	;# 
  3712  0216                     	;# 
  3713  0216                     	;# 
  3714  0217                     	;# 
  3715  0217                     	;# 
  3716  0219                     	;# 
  3717  021A                     	;# 
  3718  021B                     	;# 
  3719  021C                     	;# 
  3720  021D                     	;# 
  3721  021D                     	;# 
  3722  021E                     	;# 
  3723  021F                     	;# 
  3724  028C                     	;# 
  3725  028D                     	;# 
  3726  028E                     	;# 
  3727  0291                     	;# 
  3728  0291                     	;# 
  3729  0292                     	;# 
  3730  0293                     	;# 
  3731  0294                     	;# 
  3732  0295                     	;# 
  3733  0295                     	;# 
  3734  0296                     	;# 
  3735  0297                     	;# 
  3736  0298                     	;# 
  3737  029F                     	;# 
  3738  030C                     	;# 
  3739  030D                     	;# 
  3740  030E                     	;# 
  3741  0311                     	;# 
  3742  0311                     	;# 
  3743  0312                     	;# 
  3744  0313                     	;# 
  3745  0314                     	;# 
  3746  0315                     	;# 
  3747  0315                     	;# 
  3748  0316                     	;# 
  3749  0317                     	;# 
  3750  0318                     	;# 
  3751  038C                     	;# 
  3752  038D                     	;# 
  3753  038E                     	;# 
  3754  0391                     	;# 
  3755  0392                     	;# 
  3756  0393                     	;# 
  3757  0394                     	;# 
  3758  0395                     	;# 
  3759  0396                     	;# 
  3760  0397                     	;# 
  3761  0398                     	;# 
  3762  0399                     	;# 
  3763  039A                     	;# 
  3764  039C                     	;# 
  3765  039D                     	;# 
  3766  039E                     	;# 
  3767  039F                     	;# 
  3768  0411                     	;# 
  3769  0411                     	;# 
  3770  0412                     	;# 
  3771  0413                     	;# 
  3772  0414                     	;# 
  3773  0415                     	;# 
  3774  0416                     	;# 
  3775  0417                     	;# 
  3776  0418                     	;# 
  3777  0418                     	;# 
  3778  0419                     	;# 
  3779  041A                     	;# 
  3780  041B                     	;# 
  3781  041C                     	;# 
  3782  041D                     	;# 
  3783  041E                     	;# 
  3784  041F                     	;# 
  3785  0498                     	;# 
  3786  0498                     	;# 
  3787  0499                     	;# 
  3788  049A                     	;# 
  3789  049B                     	;# 
  3790  049B                     	;# 
  3791  049C                     	;# 
  3792  049D                     	;# 
  3793  049E                     	;# 
  3794  049F                     	;# 
  3795  0617                     	;# 
  3796  0618                     	;# 
  3797  0619                     	;# 
  3798  0619                     	;# 
  3799  061A                     	;# 
  3800  061B                     	;# 
  3801  061C                     	;# 
  3802  061C                     	;# 
  3803  061F                     	;# 
  3804  0691                     	;# 
  3805  0692                     	;# 
  3806  0693                     	;# 
  3807  0694                     	;# 
  3808  0695                     	;# 
  3809  0696                     	;# 
  3810  0697                     	;# 
  3811  0698                     	;# 
  3812  0699                     	;# 
  3813  0711                     	;# 
  3814  0712                     	;# 
  3815  0713                     	;# 
  3816  0714                     	;# 
  3817  0715                     	;# 
  3818  0716                     	;# 
  3819  0717                     	;# 
  3820  0718                     	;# 
  3821  0719                     	;# 
  3822  0891                     	;# 
  3823  0891                     	;# 
  3824  0891                     	;# 
  3825  0891                     	;# 
  3826  0891                     	;# 
  3827  0891                     	;# 
  3828  0892                     	;# 
  3829  0892                     	;# 
  3830  0892                     	;# 
  3831  0893                     	;# 
  3832  0893                     	;# 
  3833  0893                     	;# 
  3834  0893                     	;# 
  3835  0893                     	;# 
  3836  0893                     	;# 
  3837  0894                     	;# 
  3838  0894                     	;# 
  3839  0894                     	;# 
  3840  0895                     	;# 
  3841  0895                     	;# 
  3842  0895                     	;# 
  3843  0896                     	;# 
  3844  0896                     	;# 
  3845  0896                     	;# 
  3846  089B                     	;# 
  3847  0911                     	;# 
  3848  0912                     	;# 
  3849  0913                     	;# 
  3850  0914                     	;# 
  3851  0915                     	;# 
  3852  0916                     	;# 
  3853  0918                     	;# 
  3854  0919                     	;# 
  3855  091A                     	;# 
  3856  091B                     	;# 
  3857  091C                     	;# 
  3858  091D                     	;# 
  3859  091E                     	;# 
  3860  091F                     	;# 
  3861  0E0F                     	;# 
  3862  0E10                     	;# 
  3863  0E11                     	;# 
  3864  0E12                     	;# 
  3865  0E13                     	;# 
  3866  0E14                     	;# 
  3867  0E15                     	;# 
  3868  0E16                     	;# 
  3869  0E17                     	;# 
  3870  0E18                     	;# 
  3871  0E19                     	;# 
  3872  0E1A                     	;# 
  3873  0E1B                     	;# 
  3874  0E1C                     	;# 
  3875  0E1D                     	;# 
  3876  0E1E                     	;# 
  3877  0E1F                     	;# 
  3878  0E20                     	;# 
  3879  0E21                     	;# 
  3880  0E22                     	;# 
  3881  0E24                     	;# 
  3882  0E25                     	;# 
  3883  0E28                     	;# 
  3884  0E29                     	;# 
  3885  0E2A                     	;# 
  3886  0E2B                     	;# 
  3887  0E2C                     	;# 
  3888  0E2D                     	;# 
  3889  0E2E                     	;# 
  3890  0E2F                     	;# 
  3891  0E90                     	;# 
  3892  0E91                     	;# 
  3893  0E92                     	;# 
  3894  0E94                     	;# 
  3895  0E95                     	;# 
  3896  0E9C                     	;# 
  3897  0E9D                     	;# 
  3898  0E9E                     	;# 
  3899  0E9F                     	;# 
  3900  0EA0                     	;# 
  3901  0EA1                     	;# 
  3902  0EA2                     	;# 
  3903  0EA3                     	;# 
  3904  0EA4                     	;# 
  3905  0EA5                     	;# 
  3906  0EA6                     	;# 
  3907  0EA7                     	;# 
  3908  0F0F                     	;# 
  3909  0F10                     	;# 
  3910  0F11                     	;# 
  3911  0F12                     	;# 
  3912  0F13                     	;# 
  3913  0F14                     	;# 
  3914  0F15                     	;# 
  3915  0F16                     	;# 
  3916  0F17                     	;# 
  3917  0F18                     	;# 
  3918  0F19                     	;# 
  3919  0F1A                     	;# 
  3920  0F1B                     	;# 
  3921  0F1C                     	;# 
  3922  0F1D                     	;# 
  3923  0F1E                     	;# 
  3924  0F1F                     	;# 
  3925  0F20                     	;# 
  3926  0F21                     	;# 
  3927  0F22                     	;# 
  3928  0F23                     	;# 
  3929  0F24                     	;# 
  3930  0F25                     	;# 
  3931  0F26                     	;# 
  3932  0F27                     	;# 
  3933  0F28                     	;# 
  3934  0F29                     	;# 
  3935  0F2A                     	;# 
  3936  0F2B                     	;# 
  3937  0F2C                     	;# 
  3938  0F2D                     	;# 
  3939  0F2E                     	;# 
  3940  0F2F                     	;# 
  3941  0F30                     	;# 
  3942  0F31                     	;# 
  3943  0F32                     	;# 
  3944  0F33                     	;# 
  3945  0F34                     	;# 
  3946  0F35                     	;# 
  3947  0F36                     	;# 
  3948  0F37                     	;# 
  3949  0FE4                     	;# 
  3950  0FE5                     	;# 
  3951  0FE6                     	;# 
  3952  0FE7                     	;# 
  3953  0FE8                     	;# 
  3954  0FE9                     	;# 
  3955  0FEA                     	;# 
  3956  0FEB                     	;# 
  3957  0FED                     	;# 
  3958  0FEE                     	;# 
  3959  0FEF                     	;# 
  3960  0000                     	;# 
  3961  0001                     	;# 
  3962  0002                     	;# 
  3963  0003                     	;# 
  3964  0004                     	;# 
  3965  0005                     	;# 
  3966  0006                     	;# 
  3967  0007                     	;# 
  3968  0008                     	;# 
  3969  0009                     	;# 
  3970  000A                     	;# 
  3971  000B                     	;# 
  3972  000C                     	;# 
  3973  000D                     	;# 
  3974  000E                     	;# 
  3975  0010                     	;# 
  3976  0011                     	;# 
  3977  0012                     	;# 
  3978  0013                     	;# 
  3979  0014                     	;# 
  3980  0015                     	;# 
  3981  0015                     	;# 
  3982  0016                     	;# 
  3983  0016                     	;# 
  3984  0017                     	;# 
  3985  0018                     	;# 
  3986  0019                     	;# 
  3987  0019                     	;# 
  3988  001A                     	;# 
  3989  001B                     	;# 
  3990  001C                     	;# 
  3991  001D                     	;# 
  3992  001E                     	;# 
  3993  001F                     	;# 
  3994  008C                     	;# 
  3995  008D                     	;# 
  3996  008E                     	;# 
  3997  0090                     	;# 
  3998  0091                     	;# 
  3999  0092                     	;# 
  4000  0093                     	;# 
  4001  0094                     	;# 
  4002  0097                     	;# 
  4003  009B                     	;# 
  4004  009B                     	;# 
  4005  009C                     	;# 
  4006  009D                     	;# 
  4007  009E                     	;# 
  4008  009F                     	;# 
  4009  010C                     	;# 
  4010  010D                     	;# 
  4011  010E                     	;# 
  4012  0111                     	;# 
  4013  0112                     	;# 
  4014  0113                     	;# 
  4015  0114                     	;# 
  4016  0115                     	;# 
  4017  0116                     	;# 
  4018  0117                     	;# 
  4019  0118                     	;# 
  4020  0119                     	;# 
  4021  018C                     	;# 
  4022  018D                     	;# 
  4023  018E                     	;# 
  4024  0197                     	;# 
  4025  0199                     	;# 
  4026  0199                     	;# 
  4027  0199                     	;# 
  4028  019A                     	;# 
  4029  019A                     	;# 
  4030  019A                     	;# 
  4031  019B                     	;# 
  4032  019B                     	;# 
  4033  019B                     	;# 
  4034  019B                     	;# 
  4035  019B                     	;# 
  4036  019C                     	;# 
  4037  019C                     	;# 
  4038  019C                     	;# 
  4039  019D                     	;# 
  4040  019D                     	;# 
  4041  019D                     	;# 
  4042  019E                     	;# 
  4043  019E                     	;# 
  4044  019E                     	;# 
  4045  019F                     	;# 
  4046  019F                     	;# 
  4047  019F                     	;# 
  4048  019F                     	;# 
  4049  019F                     	;# 
  4050  020C                     	;# 
  4051  020D                     	;# 
  4052  020E                     	;# 
  4053  0211                     	;# 
  4054  0211                     	;# 
  4055  0212                     	;# 
  4056  0212                     	;# 
  4057  0213                     	;# 
  4058  0213                     	;# 
  4059  0214                     	;# 
  4060  0214                     	;# 
  4061  0215                     	;# 
  4062  0215                     	;# 
  4063  0215                     	;# 
  4064  0215                     	;# 
  4065  0216                     	;# 
  4066  0216                     	;# 
  4067  0217                     	;# 
  4068  0217                     	;# 
  4069  0219                     	;# 
  4070  021A                     	;# 
  4071  021B                     	;# 
  4072  021C                     	;# 
  4073  021D                     	;# 
  4074  021D                     	;# 
  4075  021E                     	;# 
  4076  021F                     	;# 
  4077  028C                     	;# 
  4078  028D                     	;# 
  4079  028E                     	;# 
  4080  0291                     	;# 
  4081  0291                     	;# 
  4082  0292                     	;# 
  4083  0293                     	;# 
  4084  0294                     	;# 
  4085  0295                     	;# 
  4086  0295                     	;# 
  4087  0296                     	;# 
  4088  0297                     	;# 
  4089  0298                     	;# 
  4090  029F                     	;# 
  4091  030C                     	;# 
  4092  030D                     	;# 
  4093  030E                     	;# 
  4094  0311                     	;# 
  4095  0311                     	;# 
  4096  0312                     	;# 
  4097  0313                     	;# 
  4098  0314                     	;# 
  4099  0315                     	;# 
  4100  0315                     	;# 
  4101  0316                     	;# 
  4102  0317                     	;# 
  4103  0318                     	;# 
  4104  038C                     	;# 
  4105  038D                     	;# 
  4106  038E                     	;# 
  4107  0391                     	;# 
  4108  0392                     	;# 
  4109  0393                     	;# 
  4110  0394                     	;# 
  4111  0395                     	;# 
  4112  0396                     	;# 
  4113  0397                     	;# 
  4114  0398                     	;# 
  4115  0399                     	;# 
  4116  039A                     	;# 
  4117  039C                     	;# 
  4118  039D                     	;# 
  4119  039E                     	;# 
  4120  039F                     	;# 
  4121  0411                     	;# 
  4122  0411                     	;# 
  4123  0412                     	;# 
  4124  0413                     	;# 
  4125  0414                     	;# 
  4126  0415                     	;# 
  4127  0416                     	;# 
  4128  0417                     	;# 
  4129  0418                     	;# 
  4130  0418                     	;# 
  4131  0419                     	;# 
  4132  041A                     	;# 
  4133  041B                     	;# 
  4134  041C                     	;# 
  4135  041D                     	;# 
  4136  041E                     	;# 
  4137  041F                     	;# 
  4138  0498                     	;# 
  4139  0498                     	;# 
  4140  0499                     	;# 
  4141  049A                     	;# 
  4142  049B                     	;# 
  4143  049B                     	;# 
  4144  049C                     	;# 
  4145  049D                     	;# 
  4146  049E                     	;# 
  4147  049F                     	;# 
  4148  0617                     	;# 
  4149  0618                     	;# 
  4150  0619                     	;# 
  4151  0619                     	;# 
  4152  061A                     	;# 
  4153  061B                     	;# 
  4154  061C                     	;# 
  4155  061C                     	;# 
  4156  061F                     	;# 
  4157  0691                     	;# 
  4158  0692                     	;# 
  4159  0693                     	;# 
  4160  0694                     	;# 
  4161  0695                     	;# 
  4162  0696                     	;# 
  4163  0697                     	;# 
  4164  0698                     	;# 
  4165  0699                     	;# 
  4166  0711                     	;# 
  4167  0712                     	;# 
  4168  0713                     	;# 
  4169  0714                     	;# 
  4170  0715                     	;# 
  4171  0716                     	;# 
  4172  0717                     	;# 
  4173  0718                     	;# 
  4174  0719                     	;# 
  4175  0891                     	;# 
  4176  0891                     	;# 
  4177  0891                     	;# 
  4178  0891                     	;# 
  4179  0891                     	;# 
  4180  0891                     	;# 
  4181  0892                     	;# 
  4182  0892                     	;# 
  4183  0892                     	;# 
  4184  0893                     	;# 
  4185  0893                     	;# 
  4186  0893                     	;# 
  4187  0893                     	;# 
  4188  0893                     	;# 
  4189  0893                     	;# 
  4190  0894                     	;# 
  4191  0894                     	;# 
  4192  0894                     	;# 
  4193  0895                     	;# 
  4194  0895                     	;# 
  4195  0895                     	;# 
  4196  0896                     	;# 
  4197  0896                     	;# 
  4198  0896                     	;# 
  4199  089B                     	;# 
  4200  0911                     	;# 
  4201  0912                     	;# 
  4202  0913                     	;# 
  4203  0914                     	;# 
  4204  0915                     	;# 
  4205  0916                     	;# 
  4206  0918                     	;# 
  4207  0919                     	;# 
  4208  091A                     	;# 
  4209  091B                     	;# 
  4210  091C                     	;# 
  4211  091D                     	;# 
  4212  091E                     	;# 
  4213  091F                     	;# 
  4214  0E0F                     	;# 
  4215  0E10                     	;# 
  4216  0E11                     	;# 
  4217  0E12                     	;# 
  4218  0E13                     	;# 
  4219  0E14                     	;# 
  4220  0E15                     	;# 
  4221  0E16                     	;# 
  4222  0E17                     	;# 
  4223  0E18                     	;# 
  4224  0E19                     	;# 
  4225  0E1A                     	;# 
  4226  0E1B                     	;# 
  4227  0E1C                     	;# 
  4228  0E1D                     	;# 
  4229  0E1E                     	;# 
  4230  0E1F                     	;# 
  4231  0E20                     	;# 
  4232  0E21                     	;# 
  4233  0E22                     	;# 
  4234  0E24                     	;# 
  4235  0E25                     	;# 
  4236  0E28                     	;# 
  4237  0E29                     	;# 
  4238  0E2A                     	;# 
  4239  0E2B                     	;# 
  4240  0E2C                     	;# 
  4241  0E2D                     	;# 
  4242  0E2E                     	;# 
  4243  0E2F                     	;# 
  4244  0E90                     	;# 
  4245  0E91                     	;# 
  4246  0E92                     	;# 
  4247  0E94                     	;# 
  4248  0E95                     	;# 
  4249  0E9C                     	;# 
  4250  0E9D                     	;# 
  4251  0E9E                     	;# 
  4252  0E9F                     	;# 
  4253  0EA0                     	;# 
  4254  0EA1                     	;# 
  4255  0EA2                     	;# 
  4256  0EA3                     	;# 
  4257  0EA4                     	;# 
  4258  0EA5                     	;# 
  4259  0EA6                     	;# 
  4260  0EA7                     	;# 
  4261  0F0F                     	;# 
  4262  0F10                     	;# 
  4263  0F11                     	;# 
  4264  0F12                     	;# 
  4265  0F13                     	;# 
  4266  0F14                     	;# 
  4267  0F15                     	;# 
  4268  0F16                     	;# 
  4269  0F17                     	;# 
  4270  0F18                     	;# 
  4271  0F19                     	;# 
  4272  0F1A                     	;# 
  4273  0F1B                     	;# 
  4274  0F1C                     	;# 
  4275  0F1D                     	;# 
  4276  0F1E                     	;# 
  4277  0F1F                     	;# 
  4278  0F20                     	;# 
  4279  0F21                     	;# 
  4280  0F22                     	;# 
  4281  0F23                     	;# 
  4282  0F24                     	;# 
  4283  0F25                     	;# 
  4284  0F26                     	;# 
  4285  0F27                     	;# 
  4286  0F28                     	;# 
  4287  0F29                     	;# 
  4288  0F2A                     	;# 
  4289  0F2B                     	;# 
  4290  0F2C                     	;# 
  4291  0F2D                     	;# 
  4292  0F2E                     	;# 
  4293  0F2F                     	;# 
  4294  0F30                     	;# 
  4295  0F31                     	;# 
  4296  0F32                     	;# 
  4297  0F33                     	;# 
  4298  0F34                     	;# 
  4299  0F35                     	;# 
  4300  0F36                     	;# 
  4301  0F37                     	;# 
  4302  0FE4                     	;# 
  4303  0FE5                     	;# 
  4304  0FE6                     	;# 
  4305  0FE7                     	;# 
  4306  0FE8                     	;# 
  4307  0FE9                     	;# 
  4308  0FEA                     	;# 
  4309  0FEB                     	;# 
  4310  0FED                     	;# 
  4311  0FEE                     	;# 
  4312  0FEF                     	;# 
  4313  0000                     	;# 
  4314  0001                     	;# 
  4315  0002                     	;# 
  4316  0003                     	;# 
  4317  0004                     	;# 
  4318  0005                     	;# 
  4319  0006                     	;# 
  4320  0007                     	;# 
  4321  0008                     	;# 
  4322  0009                     	;# 
  4323  000A                     	;# 
  4324  000B                     	;# 
  4325  000C                     	;# 
  4326  000D                     	;# 
  4327  000E                     	;# 
  4328  0010                     	;# 
  4329  0011                     	;# 
  4330  0012                     	;# 
  4331  0013                     	;# 
  4332  0014                     	;# 
  4333  0015                     	;# 
  4334  0015                     	;# 
  4335  0016                     	;# 
  4336  0016                     	;# 
  4337  0017                     	;# 
  4338  0018                     	;# 
  4339  0019                     	;# 
  4340  0019                     	;# 
  4341  001A                     	;# 
  4342  001B                     	;# 
  4343  001C                     	;# 
  4344  001D                     	;# 
  4345  001E                     	;# 
  4346  001F                     	;# 
  4347  008C                     	;# 
  4348  008D                     	;# 
  4349  008E                     	;# 
  4350  0090                     	;# 
  4351  0091                     	;# 
  4352  0092                     	;# 
  4353  0093                     	;# 
  4354  0094                     	;# 
  4355  0097                     	;# 
  4356  009B                     	;# 
  4357  009B                     	;# 
  4358  009C                     	;# 
  4359  009D                     	;# 
  4360  009E                     	;# 
  4361  009F                     	;# 
  4362  010C                     	;# 
  4363  010D                     	;# 
  4364  010E                     	;# 
  4365  0111                     	;# 
  4366  0112                     	;# 
  4367  0113                     	;# 
  4368  0114                     	;# 
  4369  0115                     	;# 
  4370  0116                     	;# 
  4371  0117                     	;# 
  4372  0118                     	;# 
  4373  0119                     	;# 
  4374  018C                     	;# 
  4375  018D                     	;# 
  4376  018E                     	;# 
  4377  0197                     	;# 
  4378  0199                     	;# 
  4379  0199                     	;# 
  4380  0199                     	;# 
  4381  019A                     	;# 
  4382  019A                     	;# 
  4383  019A                     	;# 
  4384  019B                     	;# 
  4385  019B                     	;# 
  4386  019B                     	;# 
  4387  019B                     	;# 
  4388  019B                     	;# 
  4389  019C                     	;# 
  4390  019C                     	;# 
  4391  019C                     	;# 
  4392  019D                     	;# 
  4393  019D                     	;# 
  4394  019D                     	;# 
  4395  019E                     	;# 
  4396  019E                     	;# 
  4397  019E                     	;# 
  4398  019F                     	;# 
  4399  019F                     	;# 
  4400  019F                     	;# 
  4401  019F                     	;# 
  4402  019F                     	;# 
  4403  020C                     	;# 
  4404  020D                     	;# 
  4405  020E                     	;# 
  4406  0211                     	;# 
  4407  0211                     	;# 
  4408  0212                     	;# 
  4409  0212                     	;# 
  4410  0213                     	;# 
  4411  0213                     	;# 
  4412  0214                     	;# 
  4413  0214                     	;# 
  4414  0215                     	;# 
  4415  0215                     	;# 
  4416  0215                     	;# 
  4417  0215                     	;# 
  4418  0216                     	;# 
  4419  0216                     	;# 
  4420  0217                     	;# 
  4421  0217                     	;# 
  4422  0219                     	;# 
  4423  021A                     	;# 
  4424  021B                     	;# 
  4425  021C                     	;# 
  4426  021D                     	;# 
  4427  021D                     	;# 
  4428  021E                     	;# 
  4429  021F                     	;# 
  4430  028C                     	;# 
  4431  028D                     	;# 
  4432  028E                     	;# 
  4433  0291                     	;# 
  4434  0291                     	;# 
  4435  0292                     	;# 
  4436  0293                     	;# 
  4437  0294                     	;# 
  4438  0295                     	;# 
  4439  0295                     	;# 
  4440  0296                     	;# 
  4441  0297                     	;# 
  4442  0298                     	;# 
  4443  029F                     	;# 
  4444  030C                     	;# 
  4445  030D                     	;# 
  4446  030E                     	;# 
  4447  0311                     	;# 
  4448  0311                     	;# 
  4449  0312                     	;# 
  4450  0313                     	;# 
  4451  0314                     	;# 
  4452  0315                     	;# 
  4453  0315                     	;# 
  4454  0316                     	;# 
  4455  0317                     	;# 
  4456  0318                     	;# 
  4457  038C                     	;# 
  4458  038D                     	;# 
  4459  038E                     	;# 
  4460  0391                     	;# 
  4461  0392                     	;# 
  4462  0393                     	;# 
  4463  0394                     	;# 
  4464  0395                     	;# 
  4465  0396                     	;# 
  4466  0397                     	;# 
  4467  0398                     	;# 
  4468  0399                     	;# 
  4469  039A                     	;# 
  4470  039C                     	;# 
  4471  039D                     	;# 
  4472  039E                     	;# 
  4473  039F                     	;# 
  4474  0411                     	;# 
  4475  0411                     	;# 
  4476  0412                     	;# 
  4477  0413                     	;# 
  4478  0414                     	;# 
  4479  0415                     	;# 
  4480  0416                     	;# 
  4481  0417                     	;# 
  4482  0418                     	;# 
  4483  0418                     	;# 
  4484  0419                     	;# 
  4485  041A                     	;# 
  4486  041B                     	;# 
  4487  041C                     	;# 
  4488  041D                     	;# 
  4489  041E                     	;# 
  4490  041F                     	;# 
  4491  0498                     	;# 
  4492  0498                     	;# 
  4493  0499                     	;# 
  4494  049A                     	;# 
  4495  049B                     	;# 
  4496  049B                     	;# 
  4497  049C                     	;# 
  4498  049D                     	;# 
  4499  049E                     	;# 
  4500  049F                     	;# 
  4501  0617                     	;# 
  4502  0618                     	;# 
  4503  0619                     	;# 
  4504  0619                     	;# 
  4505  061A                     	;# 
  4506  061B                     	;# 
  4507  061C                     	;# 
  4508  061C                     	;# 
  4509  061F                     	;# 
  4510  0691                     	;# 
  4511  0692                     	;# 
  4512  0693                     	;# 
  4513  0694                     	;# 
  4514  0695                     	;# 
  4515  0696                     	;# 
  4516  0697                     	;# 
  4517  0698                     	;# 
  4518  0699                     	;# 
  4519  0711                     	;# 
  4520  0712                     	;# 
  4521  0713                     	;# 
  4522  0714                     	;# 
  4523  0715                     	;# 
  4524  0716                     	;# 
  4525  0717                     	;# 
  4526  0718                     	;# 
  4527  0719                     	;# 
  4528  0891                     	;# 
  4529  0891                     	;# 
  4530  0891                     	;# 
  4531  0891                     	;# 
  4532  0891                     	;# 
  4533  0891                     	;# 
  4534  0892                     	;# 
  4535  0892                     	;# 
  4536  0892                     	;# 
  4537  0893                     	;# 
  4538  0893                     	;# 
  4539  0893                     	;# 
  4540  0893                     	;# 
  4541  0893                     	;# 
  4542  0893                     	;# 
  4543  0894                     	;# 
  4544  0894                     	;# 
  4545  0894                     	;# 
  4546  0895                     	;# 
  4547  0895                     	;# 
  4548  0895                     	;# 
  4549  0896                     	;# 
  4550  0896                     	;# 
  4551  0896                     	;# 
  4552  089B                     	;# 
  4553  0911                     	;# 
  4554  0912                     	;# 
  4555  0913                     	;# 
  4556  0914                     	;# 
  4557  0915                     	;# 
  4558  0916                     	;# 
  4559  0918                     	;# 
  4560  0919                     	;# 
  4561  091A                     	;# 
  4562  091B                     	;# 
  4563  091C                     	;# 
  4564  091D                     	;# 
  4565  091E                     	;# 
  4566  091F                     	;# 
  4567  0E0F                     	;# 
  4568  0E10                     	;# 
  4569  0E11                     	;# 
  4570  0E12                     	;# 
  4571  0E13                     	;# 
  4572  0E14                     	;# 
  4573  0E15                     	;# 
  4574  0E16                     	;# 
  4575  0E17                     	;# 
  4576  0E18                     	;# 
  4577  0E19                     	;# 
  4578  0E1A                     	;# 
  4579  0E1B                     	;# 
  4580  0E1C                     	;# 
  4581  0E1D                     	;# 
  4582  0E1E                     	;# 
  4583  0E1F                     	;# 
  4584  0E20                     	;# 
  4585  0E21                     	;# 
  4586  0E22                     	;# 
  4587  0E24                     	;# 
  4588  0E25                     	;# 
  4589  0E28                     	;# 
  4590  0E29                     	;# 
  4591  0E2A                     	;# 
  4592  0E2B                     	;# 
  4593  0E2C                     	;# 
  4594  0E2D                     	;# 
  4595  0E2E                     	;# 
  4596  0E2F                     	;# 
  4597  0E90                     	;# 
  4598  0E91                     	;# 
  4599  0E92                     	;# 
  4600  0E94                     	;# 
  4601  0E95                     	;# 
  4602  0E9C                     	;# 
  4603  0E9D                     	;# 
  4604  0E9E                     	;# 
  4605  0E9F                     	;# 
  4606  0EA0                     	;# 
  4607  0EA1                     	;# 
  4608  0EA2                     	;# 
  4609  0EA3                     	;# 
  4610  0EA4                     	;# 
  4611  0EA5                     	;# 
  4612  0EA6                     	;# 
  4613  0EA7                     	;# 
  4614  0F0F                     	;# 
  4615  0F10                     	;# 
  4616  0F11                     	;# 
  4617  0F12                     	;# 
  4618  0F13                     	;# 
  4619  0F14                     	;# 
  4620  0F15                     	;# 
  4621  0F16                     	;# 
  4622  0F17                     	;# 
  4623  0F18                     	;# 
  4624  0F19                     	;# 
  4625  0F1A                     	;# 
  4626  0F1B                     	;# 
  4627  0F1C                     	;# 
  4628  0F1D                     	;# 
  4629  0F1E                     	;# 
  4630  0F1F                     	;# 
  4631  0F20                     	;# 
  4632  0F21                     	;# 
  4633  0F22                     	;# 
  4634  0F23                     	;# 
  4635  0F24                     	;# 
  4636  0F25                     	;# 
  4637  0F26                     	;# 
  4638  0F27                     	;# 
  4639  0F28                     	;# 
  4640  0F29                     	;# 
  4641  0F2A                     	;# 
  4642  0F2B                     	;# 
  4643  0F2C                     	;# 
  4644  0F2D                     	;# 
  4645  0F2E                     	;# 
  4646  0F2F                     	;# 
  4647  0F30                     	;# 
  4648  0F31                     	;# 
  4649  0F32                     	;# 
  4650  0F33                     	;# 
  4651  0F34                     	;# 
  4652  0F35                     	;# 
  4653  0F36                     	;# 
  4654  0F37                     	;# 
  4655  0FE4                     	;# 
  4656  0FE5                     	;# 
  4657  0FE6                     	;# 
  4658  0FE7                     	;# 
  4659  0FE8                     	;# 
  4660  0FE9                     	;# 
  4661  0FEA                     	;# 
  4662  0FEB                     	;# 
  4663  0FED                     	;# 
  4664  0FEE                     	;# 
  4665  0FEF                     	;# 
  4666  0000                     	;# 
  4667  0001                     	;# 
  4668  0002                     	;# 
  4669  0003                     	;# 
  4670  0004                     	;# 
  4671  0005                     	;# 
  4672  0006                     	;# 
  4673  0007                     	;# 
  4674  0008                     	;# 
  4675  0009                     	;# 
  4676  000A                     	;# 
  4677  000B                     	;# 
  4678  000C                     	;# 
  4679  000D                     	;# 
  4680  000E                     	;# 
  4681  0010                     	;# 
  4682  0011                     	;# 
  4683  0012                     	;# 
  4684  0013                     	;# 
  4685  0014                     	;# 
  4686  0015                     	;# 
  4687  0015                     	;# 
  4688  0016                     	;# 
  4689  0016                     	;# 
  4690  0017                     	;# 
  4691  0018                     	;# 
  4692  0019                     	;# 
  4693  0019                     	;# 
  4694  001A                     	;# 
  4695  001B                     	;# 
  4696  001C                     	;# 
  4697  001D                     	;# 
  4698  001E                     	;# 
  4699  001F                     	;# 
  4700  008C                     	;# 
  4701  008D                     	;# 
  4702  008E                     	;# 
  4703  0090                     	;# 
  4704  0091                     	;# 
  4705  0092                     	;# 
  4706  0093                     	;# 
  4707  0094                     	;# 
  4708  0097                     	;# 
  4709  009B                     	;# 
  4710  009B                     	;# 
  4711  009C                     	;# 
  4712  009D                     	;# 
  4713  009E                     	;# 
  4714  009F                     	;# 
  4715  010C                     	;# 
  4716  010D                     	;# 
  4717  010E                     	;# 
  4718  0111                     	;# 
  4719  0112                     	;# 
  4720  0113                     	;# 
  4721  0114                     	;# 
  4722  0115                     	;# 
  4723  0116                     	;# 
  4724  0117                     	;# 
  4725  0118                     	;# 
  4726  0119                     	;# 
  4727  018C                     	;# 
  4728  018D                     	;# 
  4729  018E                     	;# 
  4730  0197                     	;# 
  4731  0199                     	;# 
  4732  0199                     	;# 
  4733  0199                     	;# 
  4734  019A                     	;# 
  4735  019A                     	;# 
  4736  019A                     	;# 
  4737  019B                     	;# 
  4738  019B                     	;# 
  4739  019B                     	;# 
  4740  019B                     	;# 
  4741  019B                     	;# 
  4742  019C                     	;# 
  4743  019C                     	;# 
  4744  019C                     	;# 
  4745  019D                     	;# 
  4746  019D                     	;# 
  4747  019D                     	;# 
  4748  019E                     	;# 
  4749  019E                     	;# 
  4750  019E                     	;# 
  4751  019F                     	;# 
  4752  019F                     	;# 
  4753  019F                     	;# 
  4754  019F                     	;# 
  4755  019F                     	;# 
  4756  020C                     	;# 
  4757  020D                     	;# 
  4758  020E                     	;# 
  4759  0211                     	;# 
  4760  0211                     	;# 
  4761  0212                     	;# 
  4762  0212                     	;# 
  4763  0213                     	;# 
  4764  0213                     	;# 
  4765  0214                     	;# 
  4766  0214                     	;# 
  4767  0215                     	;# 
  4768  0215                     	;# 
  4769  0215                     	;# 
  4770  0215                     	;# 
  4771  0216                     	;# 
  4772  0216                     	;# 
  4773  0217                     	;# 
  4774  0217                     	;# 
  4775  0219                     	;# 
  4776  021A                     	;# 
  4777  021B                     	;# 
  4778  021C                     	;# 
  4779  021D                     	;# 
  4780  021D                     	;# 
  4781  021E                     	;# 
  4782  021F                     	;# 
  4783  028C                     	;# 
  4784  028D                     	;# 
  4785  028E                     	;# 
  4786  0291                     	;# 
  4787  0291                     	;# 
  4788  0292                     	;# 
  4789  0293                     	;# 
  4790  0294                     	;# 
  4791  0295                     	;# 
  4792  0295                     	;# 
  4793  0296                     	;# 
  4794  0297                     	;# 
  4795  0298                     	;# 
  4796  029F                     	;# 
  4797  030C                     	;# 
  4798  030D                     	;# 
  4799  030E                     	;# 
  4800  0311                     	;# 
  4801  0311                     	;# 
  4802  0312                     	;# 
  4803  0313                     	;# 
  4804  0314                     	;# 
  4805  0315                     	;# 
  4806  0315                     	;# 
  4807  0316                     	;# 
  4808  0317                     	;# 
  4809  0318                     	;# 
  4810  038C                     	;# 
  4811  038D                     	;# 
  4812  038E                     	;# 
  4813  0391                     	;# 
  4814  0392                     	;# 
  4815  0393                     	;# 
  4816  0394                     	;# 
  4817  0395                     	;# 
  4818  0396                     	;# 
  4819  0397                     	;# 
  4820  0398                     	;# 
  4821  0399                     	;# 
  4822  039A                     	;# 
  4823  039C                     	;# 
  4824  039D                     	;# 
  4825  039E                     	;# 
  4826  039F                     	;# 
  4827  0411                     	;# 
  4828  0411                     	;# 
  4829  0412                     	;# 
  4830  0413                     	;# 
  4831  0414                     	;# 
  4832  0415                     	;# 
  4833  0416                     	;# 
  4834  0417                     	;# 
  4835  0418                     	;# 
  4836  0418                     	;# 
  4837  0419                     	;# 
  4838  041A                     	;# 
  4839  041B                     	;# 
  4840  041C                     	;# 
  4841  041D                     	;# 
  4842  041E                     	;# 
  4843  041F                     	;# 
  4844  0498                     	;# 
  4845  0498                     	;# 
  4846  0499                     	;# 
  4847  049A                     	;# 
  4848  049B                     	;# 
  4849  049B                     	;# 
  4850  049C                     	;# 
  4851  049D                     	;# 
  4852  049E                     	;# 
  4853  049F                     	;# 
  4854  0617                     	;# 
  4855  0618                     	;# 
  4856  0619                     	;# 
  4857  0619                     	;# 
  4858  061A                     	;# 
  4859  061B                     	;# 
  4860  061C                     	;# 
  4861  061C                     	;# 
  4862  061F                     	;# 
  4863  0691                     	;# 
  4864  0692                     	;# 
  4865  0693                     	;# 
  4866  0694                     	;# 
  4867  0695                     	;# 
  4868  0696                     	;# 
  4869  0697                     	;# 
  4870  0698                     	;# 
  4871  0699                     	;# 
  4872  0711                     	;# 
  4873  0712                     	;# 
  4874  0713                     	;# 
  4875  0714                     	;# 
  4876  0715                     	;# 
  4877  0716                     	;# 
  4878  0717                     	;# 
  4879  0718                     	;# 
  4880  0719                     	;# 
  4881  0891                     	;# 
  4882  0891                     	;# 
  4883  0891                     	;# 
  4884  0891                     	;# 
  4885  0891                     	;# 
  4886  0891                     	;# 
  4887  0892                     	;# 
  4888  0892                     	;# 
  4889  0892                     	;# 
  4890  0893                     	;# 
  4891  0893                     	;# 
  4892  0893                     	;# 
  4893  0893                     	;# 
  4894  0893                     	;# 
  4895  0893                     	;# 
  4896  0894                     	;# 
  4897  0894                     	;# 
  4898  0894                     	;# 
  4899  0895                     	;# 
  4900  0895                     	;# 
  4901  0895                     	;# 
  4902  0896                     	;# 
  4903  0896                     	;# 
  4904  0896                     	;# 
  4905  089B                     	;# 
  4906  0911                     	;# 
  4907  0912                     	;# 
  4908  0913                     	;# 
  4909  0914                     	;# 
  4910  0915                     	;# 
  4911  0916                     	;# 
  4912  0918                     	;# 
  4913  0919                     	;# 
  4914  091A                     	;# 
  4915  091B                     	;# 
  4916  091C                     	;# 
  4917  091D                     	;# 
  4918  091E                     	;# 
  4919  091F                     	;# 
  4920  0E0F                     	;# 
  4921  0E10                     	;# 
  4922  0E11                     	;# 
  4923  0E12                     	;# 
  4924  0E13                     	;# 
  4925  0E14                     	;# 
  4926  0E15                     	;# 
  4927  0E16                     	;# 
  4928  0E17                     	;# 
  4929  0E18                     	;# 
  4930  0E19                     	;# 
  4931  0E1A                     	;# 
  4932  0E1B                     	;# 
  4933  0E1C                     	;# 
  4934  0E1D                     	;# 
  4935  0E1E                     	;# 
  4936  0E1F                     	;# 
  4937  0E20                     	;# 
  4938  0E21                     	;# 
  4939  0E22                     	;# 
  4940  0E24                     	;# 
  4941  0E25                     	;# 
  4942  0E28                     	;# 
  4943  0E29                     	;# 
  4944  0E2A                     	;# 
  4945  0E2B                     	;# 
  4946  0E2C                     	;# 
  4947  0E2D                     	;# 
  4948  0E2E                     	;# 
  4949  0E2F                     	;# 
  4950  0E90                     	;# 
  4951  0E91                     	;# 
  4952  0E92                     	;# 
  4953  0E94                     	;# 
  4954  0E95                     	;# 
  4955  0E9C                     	;# 
  4956  0E9D                     	;# 
  4957  0E9E                     	;# 
  4958  0E9F                     	;# 
  4959  0EA0                     	;# 
  4960  0EA1                     	;# 
  4961  0EA2                     	;# 
  4962  0EA3                     	;# 
  4963  0EA4                     	;# 
  4964  0EA5                     	;# 
  4965  0EA6                     	;# 
  4966  0EA7                     	;# 
  4967  0F0F                     	;# 
  4968  0F10                     	;# 
  4969  0F11                     	;# 
  4970  0F12                     	;# 
  4971  0F13                     	;# 
  4972  0F14                     	;# 
  4973  0F15                     	;# 
  4974  0F16                     	;# 
  4975  0F17                     	;# 
  4976  0F18                     	;# 
  4977  0F19                     	;# 
  4978  0F1A                     	;# 
  4979  0F1B                     	;# 
  4980  0F1C                     	;# 
  4981  0F1D                     	;# 
  4982  0F1E                     	;# 
  4983  0F1F                     	;# 
  4984  0F20                     	;# 
  4985  0F21                     	;# 
  4986  0F22                     	;# 
  4987  0F23                     	;# 
  4988  0F24                     	;# 
  4989  0F25                     	;# 
  4990  0F26                     	;# 
  4991  0F27                     	;# 
  4992  0F28                     	;# 
  4993  0F29                     	;# 
  4994  0F2A                     	;# 
  4995  0F2B                     	;# 
  4996  0F2C                     	;# 
  4997  0F2D                     	;# 
  4998  0F2E                     	;# 
  4999  0F2F                     	;# 
  5000  0F30                     	;# 
  5001  0F31                     	;# 
  5002  0F32                     	;# 
  5003  0F33                     	;# 
  5004  0F34                     	;# 
  5005  0F35                     	;# 
  5006  0F36                     	;# 
  5007  0F37                     	;# 
  5008  0FE4                     	;# 
  5009  0FE5                     	;# 
  5010  0FE6                     	;# 
  5011  0FE7                     	;# 
  5012  0FE8                     	;# 
  5013  0FE9                     	;# 
  5014  0FEA                     	;# 
  5015  0FEB                     	;# 
  5016  0FED                     	;# 
  5017  0FEE                     	;# 
  5018  0FEF                     	;# 
  5019  0000                     	;# 
  5020  0001                     	;# 
  5021  0002                     	;# 
  5022  0003                     	;# 
  5023  0004                     	;# 
  5024  0005                     	;# 
  5025  0006                     	;# 
  5026  0007                     	;# 
  5027  0008                     	;# 
  5028  0009                     	;# 
  5029  000A                     	;# 
  5030  000B                     	;# 
  5031  000C                     	;# 
  5032  000D                     	;# 
  5033  000E                     	;# 
  5034  0010                     	;# 
  5035  0011                     	;# 
  5036  0012                     	;# 
  5037  0013                     	;# 
  5038  0014                     	;# 
  5039  0015                     	;# 
  5040  0015                     	;# 
  5041  0016                     	;# 
  5042  0016                     	;# 
  5043  0017                     	;# 
  5044  0018                     	;# 
  5045  0019                     	;# 
  5046  0019                     	;# 
  5047  001A                     	;# 
  5048  001B                     	;# 
  5049  001C                     	;# 
  5050  001D                     	;# 
  5051  001E                     	;# 
  5052  001F                     	;# 
  5053  008C                     	;# 
  5054  008D                     	;# 
  5055  008E                     	;# 
  5056  0090                     	;# 
  5057  0091                     	;# 
  5058  0092                     	;# 
  5059  0093                     	;# 
  5060  0094                     	;# 
  5061  0097                     	;# 
  5062  009B                     	;# 
  5063  009B                     	;# 
  5064  009C                     	;# 
  5065  009D                     	;# 
  5066  009E                     	;# 
  5067  009F                     	;# 
  5068  010C                     	;# 
  5069  010D                     	;# 
  5070  010E                     	;# 
  5071  0111                     	;# 
  5072  0112                     	;# 
  5073  0113                     	;# 
  5074  0114                     	;# 
  5075  0115                     	;# 
  5076  0116                     	;# 
  5077  0117                     	;# 
  5078  0118                     	;# 
  5079  0119                     	;# 
  5080  018C                     	;# 
  5081  018D                     	;# 
  5082  018E                     	;# 
  5083  0197                     	;# 
  5084  0199                     	;# 
  5085  0199                     	;# 
  5086  0199                     	;# 
  5087  019A                     	;# 
  5088  019A                     	;# 
  5089  019A                     	;# 
  5090  019B                     	;# 
  5091  019B                     	;# 
  5092  019B                     	;# 
  5093  019B                     	;# 
  5094  019B                     	;# 
  5095  019C                     	;# 
  5096  019C                     	;# 
  5097  019C                     	;# 
  5098  019D                     	;# 
  5099  019D                     	;# 
  5100  019D                     	;# 
  5101  019E                     	;# 
  5102  019E                     	;# 
  5103  019E                     	;# 
  5104  019F                     	;# 
  5105  019F                     	;# 
  5106  019F                     	;# 
  5107  019F                     	;# 
  5108  019F                     	;# 
  5109  020C                     	;# 
  5110  020D                     	;# 
  5111  020E                     	;# 
  5112  0211                     	;# 
  5113  0211                     	;# 
  5114  0212                     	;# 
  5115  0212                     	;# 
  5116  0213                     	;# 
  5117  0213                     	;# 
  5118  0214                     	;# 
  5119  0214                     	;# 
  5120  0215                     	;# 
  5121  0215                     	;# 
  5122  0215                     	;# 
  5123  0215                     	;# 
  5124  0216                     	;# 
  5125  0216                     	;# 
  5126  0217                     	;# 
  5127  0217                     	;# 
  5128  0219                     	;# 
  5129  021A                     	;# 
  5130  021B                     	;# 
  5131  021C                     	;# 
  5132  021D                     	;# 
  5133  021D                     	;# 
  5134  021E                     	;# 
  5135  021F                     	;# 
  5136  028C                     	;# 
  5137  028D                     	;# 
  5138  028E                     	;# 
  5139  0291                     	;# 
  5140  0291                     	;# 
  5141  0292                     	;# 
  5142  0293                     	;# 
  5143  0294                     	;# 
  5144  0295                     	;# 
  5145  0295                     	;# 
  5146  0296                     	;# 
  5147  0297                     	;# 
  5148  0298                     	;# 
  5149  029F                     	;# 
  5150  030C                     	;# 
  5151  030D                     	;# 
  5152  030E                     	;# 
  5153  0311                     	;# 
  5154  0311                     	;# 
  5155  0312                     	;# 
  5156  0313                     	;# 
  5157  0314                     	;# 
  5158  0315                     	;# 
  5159  0315                     	;# 
  5160  0316                     	;# 
  5161  0317                     	;# 
  5162  0318                     	;# 
  5163  038C                     	;# 
  5164  038D                     	;# 
  5165  038E                     	;# 
  5166  0391                     	;# 
  5167  0392                     	;# 
  5168  0393                     	;# 
  5169  0394                     	;# 
  5170  0395                     	;# 
  5171  0396                     	;# 
  5172  0397                     	;# 
  5173  0398                     	;# 
  5174  0399                     	;# 
  5175  039A                     	;# 
  5176  039C                     	;# 
  5177  039D                     	;# 
  5178  039E                     	;# 
  5179  039F                     	;# 
  5180  0411                     	;# 
  5181  0411                     	;# 
  5182  0412                     	;# 
  5183  0413                     	;# 
  5184  0414                     	;# 
  5185  0415                     	;# 
  5186  0416                     	;# 
  5187  0417                     	;# 
  5188  0418                     	;# 
  5189  0418                     	;# 
  5190  0419                     	;# 
  5191  041A                     	;# 
  5192  041B                     	;# 
  5193  041C                     	;# 
  5194  041D                     	;# 
  5195  041E                     	;# 
  5196  041F                     	;# 
  5197  0498                     	;# 
  5198  0498                     	;# 
  5199  0499                     	;# 
  5200  049A                     	;# 
  5201  049B                     	;# 
  5202  049B                     	;# 
  5203  049C                     	;# 
  5204  049D                     	;# 
  5205  049E                     	;# 
  5206  049F                     	;# 
  5207  0617                     	;# 
  5208  0618                     	;# 
  5209  0619                     	;# 
  5210  0619                     	;# 
  5211  061A                     	;# 
  5212  061B                     	;# 
  5213  061C                     	;# 
  5214  061C                     	;# 
  5215  061F                     	;# 
  5216  0691                     	;# 
  5217  0692                     	;# 
  5218  0693                     	;# 
  5219  0694                     	;# 
  5220  0695                     	;# 
  5221  0696                     	;# 
  5222  0697                     	;# 
  5223  0698                     	;# 
  5224  0699                     	;# 
  5225  0711                     	;# 
  5226  0712                     	;# 
  5227  0713                     	;# 
  5228  0714                     	;# 
  5229  0715                     	;# 
  5230  0716                     	;# 
  5231  0717                     	;# 
  5232  0718                     	;# 
  5233  0719                     	;# 
  5234  0891                     	;# 
  5235  0891                     	;# 
  5236  0891                     	;# 
  5237  0891                     	;# 
  5238  0891                     	;# 
  5239  0891                     	;# 
  5240  0892                     	;# 
  5241  0892                     	;# 
  5242  0892                     	;# 
  5243  0893                     	;# 
  5244  0893                     	;# 
  5245  0893                     	;# 
  5246  0893                     	;# 
  5247  0893                     	;# 
  5248  0893                     	;# 
  5249  0894                     	;# 
  5250  0894                     	;# 
  5251  0894                     	;# 
  5252  0895                     	;# 
  5253  0895                     	;# 
  5254  0895                     	;# 
  5255  0896                     	;# 
  5256  0896                     	;# 
  5257  0896                     	;# 
  5258  089B                     	;# 
  5259  0911                     	;# 
  5260  0912                     	;# 
  5261  0913                     	;# 
  5262  0914                     	;# 
  5263  0915                     	;# 
  5264  0916                     	;# 
  5265  0918                     	;# 
  5266  0919                     	;# 
  5267  091A                     	;# 
  5268  091B                     	;# 
  5269  091C                     	;# 
  5270  091D                     	;# 
  5271  091E                     	;# 
  5272  091F                     	;# 
  5273  0E0F                     	;# 
  5274  0E10                     	;# 
  5275  0E11                     	;# 
  5276  0E12                     	;# 
  5277  0E13                     	;# 
  5278  0E14                     	;# 
  5279  0E15                     	;# 
  5280  0E16                     	;# 
  5281  0E17                     	;# 
  5282  0E18                     	;# 
  5283  0E19                     	;# 
  5284  0E1A                     	;# 
  5285  0E1B                     	;# 
  5286  0E1C                     	;# 
  5287  0E1D                     	;# 
  5288  0E1E                     	;# 
  5289  0E1F                     	;# 
  5290  0E20                     	;# 
  5291  0E21                     	;# 
  5292  0E22                     	;# 
  5293  0E24                     	;# 
  5294  0E25                     	;# 
  5295  0E28                     	;# 
  5296  0E29                     	;# 
  5297  0E2A                     	;# 
  5298  0E2B                     	;# 
  5299  0E2C                     	;# 
  5300  0E2D                     	;# 
  5301  0E2E                     	;# 
  5302  0E2F                     	;# 
  5303  0E90                     	;# 
  5304  0E91                     	;# 
  5305  0E92                     	;# 
  5306  0E94                     	;# 
  5307  0E95                     	;# 
  5308  0E9C                     	;# 
  5309  0E9D                     	;# 
  5310  0E9E                     	;# 
  5311  0E9F                     	;# 
  5312  0EA0                     	;# 
  5313  0EA1                     	;# 
  5314  0EA2                     	;# 
  5315  0EA3                     	;# 
  5316  0EA4                     	;# 
  5317  0EA5                     	;# 
  5318  0EA6                     	;# 
  5319  0EA7                     	;# 
  5320  0F0F                     	;# 
  5321  0F10                     	;# 
  5322  0F11                     	;# 
  5323  0F12                     	;# 
  5324  0F13                     	;# 
  5325  0F14                     	;# 
  5326  0F15                     	;# 
  5327  0F16                     	;# 
  5328  0F17                     	;# 
  5329  0F18                     	;# 
  5330  0F19                     	;# 
  5331  0F1A                     	;# 
  5332  0F1B                     	;# 
  5333  0F1C                     	;# 
  5334  0F1D                     	;# 
  5335  0F1E                     	;# 
  5336  0F1F                     	;# 
  5337  0F20                     	;# 
  5338  0F21                     	;# 
  5339  0F22                     	;# 
  5340  0F23                     	;# 
  5341  0F24                     	;# 
  5342  0F25                     	;# 
  5343  0F26                     	;# 
  5344  0F27                     	;# 
  5345  0F28                     	;# 
  5346  0F29                     	;# 
  5347  0F2A                     	;# 
  5348  0F2B                     	;# 
  5349  0F2C                     	;# 
  5350  0F2D                     	;# 
  5351  0F2E                     	;# 
  5352  0F2F                     	;# 
  5353  0F30                     	;# 
  5354  0F31                     	;# 
  5355  0F32                     	;# 
  5356  0F33                     	;# 
  5357  0F34                     	;# 
  5358  0F35                     	;# 
  5359  0F36                     	;# 
  5360  0F37                     	;# 
  5361  0FE4                     	;# 
  5362  0FE5                     	;# 
  5363  0FE6                     	;# 
  5364  0FE7                     	;# 
  5365  0FE8                     	;# 
  5366  0FE9                     	;# 
  5367  0FEA                     	;# 
  5368  0FEB                     	;# 
  5369  0FED                     	;# 
  5370  0FEE                     	;# 
  5371  0FEF                     	;# 
  5372  0000                     	;# 
  5373  0001                     	;# 
  5374  0002                     	;# 
  5375  0003                     	;# 
  5376  0004                     	;# 
  5377  0005                     	;# 
  5378  0006                     	;# 
  5379  0007                     	;# 
  5380  0008                     	;# 
  5381  0009                     	;# 
  5382  000A                     	;# 
  5383  000B                     	;# 
  5384  000C                     	;# 
  5385  000D                     	;# 
  5386  000E                     	;# 
  5387  0010                     	;# 
  5388  0011                     	;# 
  5389  0012                     	;# 
  5390  0013                     	;# 
  5391  0014                     	;# 
  5392  0015                     	;# 
  5393  0015                     	;# 
  5394  0016                     	;# 
  5395  0016                     	;# 
  5396  0017                     	;# 
  5397  0018                     	;# 
  5398  0019                     	;# 
  5399  0019                     	;# 
  5400  001A                     	;# 
  5401  001B                     	;# 
  5402  001C                     	;# 
  5403  001D                     	;# 
  5404  001E                     	;# 
  5405  001F                     	;# 
  5406  008C                     	;# 
  5407  008D                     	;# 
  5408  008E                     	;# 
  5409  0090                     	;# 
  5410  0091                     	;# 
  5411  0092                     	;# 
  5412  0093                     	;# 
  5413  0094                     	;# 
  5414  0097                     	;# 
  5415  009B                     	;# 
  5416  009B                     	;# 
  5417  009C                     	;# 
  5418  009D                     	;# 
  5419  009E                     	;# 
  5420  009F                     	;# 
  5421  010C                     	;# 
  5422  010D                     	;# 
  5423  010E                     	;# 
  5424  0111                     	;# 
  5425  0112                     	;# 
  5426  0113                     	;# 
  5427  0114                     	;# 
  5428  0115                     	;# 
  5429  0116                     	;# 
  5430  0117                     	;# 
  5431  0118                     	;# 
  5432  0119                     	;# 
  5433  018C                     	;# 
  5434  018D                     	;# 
  5435  018E                     	;# 
  5436  0197                     	;# 
  5437  0199                     	;# 
  5438  0199                     	;# 
  5439  0199                     	;# 
  5440  019A                     	;# 
  5441  019A                     	;# 
  5442  019A                     	;# 
  5443  019B                     	;# 
  5444  019B                     	;# 
  5445  019B                     	;# 
  5446  019B                     	;# 
  5447  019B                     	;# 
  5448  019C                     	;# 
  5449  019C                     	;# 
  5450  019C                     	;# 
  5451  019D                     	;# 
  5452  019D                     	;# 
  5453  019D                     	;# 
  5454  019E                     	;# 
  5455  019E                     	;# 
  5456  019E                     	;# 
  5457  019F                     	;# 
  5458  019F                     	;# 
  5459  019F                     	;# 
  5460  019F                     	;# 
  5461  019F                     	;# 
  5462  020C                     	;# 
  5463  020D                     	;# 
  5464  020E                     	;# 
  5465  0211                     	;# 
  5466  0211                     	;# 
  5467  0212                     	;# 
  5468  0212                     	;# 
  5469  0213                     	;# 
  5470  0213                     	;# 
  5471  0214                     	;# 
  5472  0214                     	;# 
  5473  0215                     	;# 
  5474  0215                     	;# 
  5475  0215                     	;# 
  5476  0215                     	;# 
  5477  0216                     	;# 
  5478  0216                     	;# 
  5479  0217                     	;# 
  5480  0217                     	;# 
  5481  0219                     	;# 
  5482  021A                     	;# 
  5483  021B                     	;# 
  5484  021C                     	;# 
  5485  021D                     	;# 
  5486  021D                     	;# 
  5487  021E                     	;# 
  5488  021F                     	;# 
  5489  028C                     	;# 
  5490  028D                     	;# 
  5491  028E                     	;# 
  5492  0291                     	;# 
  5493  0291                     	;# 
  5494  0292                     	;# 
  5495  0293                     	;# 
  5496  0294                     	;# 
  5497  0295                     	;# 
  5498  0295                     	;# 
  5499  0296                     	;# 
  5500  0297                     	;# 
  5501  0298                     	;# 
  5502  029F                     	;# 
  5503  030C                     	;# 
  5504  030D                     	;# 
  5505  030E                     	;# 
  5506  0311                     	;# 
  5507  0311                     	;# 
  5508  0312                     	;# 
  5509  0313                     	;# 
  5510  0314                     	;# 
  5511  0315                     	;# 
  5512  0315                     	;# 
  5513  0316                     	;# 
  5514  0317                     	;# 
  5515  0318                     	;# 
  5516  038C                     	;# 
  5517  038D                     	;# 
  5518  038E                     	;# 
  5519  0391                     	;# 
  5520  0392                     	;# 
  5521  0393                     	;# 
  5522  0394                     	;# 
  5523  0395                     	;# 
  5524  0396                     	;# 
  5525  0397                     	;# 
  5526  0398                     	;# 
  5527  0399                     	;# 
  5528  039A                     	;# 
  5529  039C                     	;# 
  5530  039D                     	;# 
  5531  039E                     	;# 
  5532  039F                     	;# 
  5533  0411                     	;# 
  5534  0411                     	;# 
  5535  0412                     	;# 
  5536  0413                     	;# 
  5537  0414                     	;# 
  5538  0415                     	;# 
  5539  0416                     	;# 
  5540  0417                     	;# 
  5541  0418                     	;# 
  5542  0418                     	;# 
  5543  0419                     	;# 
  5544  041A                     	;# 
  5545  041B                     	;# 
  5546  041C                     	;# 
  5547  041D                     	;# 
  5548  041E                     	;# 
  5549  041F                     	;# 
  5550  0498                     	;# 
  5551  0498                     	;# 
  5552  0499                     	;# 
  5553  049A                     	;# 
  5554  049B                     	;# 
  5555  049B                     	;# 
  5556  049C                     	;# 
  5557  049D                     	;# 
  5558  049E                     	;# 
  5559  049F                     	;# 
  5560  0617                     	;# 
  5561  0618                     	;# 
  5562  0619                     	;# 
  5563  0619                     	;# 
  5564  061A                     	;# 
  5565  061B                     	;# 
  5566  061C                     	;# 
  5567  061C                     	;# 
  5568  061F                     	;# 
  5569  0691                     	;# 
  5570  0692                     	;# 
  5571  0693                     	;# 
  5572  0694                     	;# 
  5573  0695                     	;# 
  5574  0696                     	;# 
  5575  0697                     	;# 
  5576  0698                     	;# 
  5577  0699                     	;# 
  5578  0711                     	;# 
  5579  0712                     	;# 
  5580  0713                     	;# 
  5581  0714                     	;# 
  5582  0715                     	;# 
  5583  0716                     	;# 
  5584  0717                     	;# 
  5585  0718                     	;# 
  5586  0719                     	;# 
  5587  0891                     	;# 
  5588  0891                     	;# 
  5589  0891                     	;# 
  5590  0891                     	;# 
  5591  0891                     	;# 
  5592  0891                     	;# 
  5593  0892                     	;# 
  5594  0892                     	;# 
  5595  0892                     	;# 
  5596  0893                     	;# 
  5597  0893                     	;# 
  5598  0893                     	;# 
  5599  0893                     	;# 
  5600  0893                     	;# 
  5601  0893                     	;# 
  5602  0894                     	;# 
  5603  0894                     	;# 
  5604  0894                     	;# 
  5605  0895                     	;# 
  5606  0895                     	;# 
  5607  0895                     	;# 
  5608  0896                     	;# 
  5609  0896                     	;# 
  5610  0896                     	;# 
  5611  089B                     	;# 
  5612  0911                     	;# 
  5613  0912                     	;# 
  5614  0913                     	;# 
  5615  0914                     	;# 
  5616  0915                     	;# 
  5617  0916                     	;# 
  5618  0918                     	;# 
  5619  0919                     	;# 
  5620  091A                     	;# 
  5621  091B                     	;# 
  5622  091C                     	;# 
  5623  091D                     	;# 
  5624  091E                     	;# 
  5625  091F                     	;# 
  5626  0E0F                     	;# 
  5627  0E10                     	;# 
  5628  0E11                     	;# 
  5629  0E12                     	;# 
  5630  0E13                     	;# 
  5631  0E14                     	;# 
  5632  0E15                     	;# 
  5633  0E16                     	;# 
  5634  0E17                     	;# 
  5635  0E18                     	;# 
  5636  0E19                     	;# 
  5637  0E1A                     	;# 
  5638  0E1B                     	;# 
  5639  0E1C                     	;# 
  5640  0E1D                     	;# 
  5641  0E1E                     	;# 
  5642  0E1F                     	;# 
  5643  0E20                     	;# 
  5644  0E21                     	;# 
  5645  0E22                     	;# 
  5646  0E24                     	;# 
  5647  0E25                     	;# 
  5648  0E28                     	;# 
  5649  0E29                     	;# 
  5650  0E2A                     	;# 
  5651  0E2B                     	;# 
  5652  0E2C                     	;# 
  5653  0E2D                     	;# 
  5654  0E2E                     	;# 
  5655  0E2F                     	;# 
  5656  0E90                     	;# 
  5657  0E91                     	;# 
  5658  0E92                     	;# 
  5659  0E94                     	;# 
  5660  0E95                     	;# 
  5661  0E9C                     	;# 
  5662  0E9D                     	;# 
  5663  0E9E                     	;# 
  5664  0E9F                     	;# 
  5665  0EA0                     	;# 
  5666  0EA1                     	;# 
  5667  0EA2                     	;# 
  5668  0EA3                     	;# 
  5669  0EA4                     	;# 
  5670  0EA5                     	;# 
  5671  0EA6                     	;# 
  5672  0EA7                     	;# 
  5673  0F0F                     	;# 
  5674  0F10                     	;# 
  5675  0F11                     	;# 
  5676  0F12                     	;# 
  5677  0F13                     	;# 
  5678  0F14                     	;# 
  5679  0F15                     	;# 
  5680  0F16                     	;# 
  5681  0F17                     	;# 
  5682  0F18                     	;# 
  5683  0F19                     	;# 
  5684  0F1A                     	;# 
  5685  0F1B                     	;# 
  5686  0F1C                     	;# 
  5687  0F1D                     	;# 
  5688  0F1E                     	;# 
  5689  0F1F                     	;# 
  5690  0F20                     	;# 
  5691  0F21                     	;# 
  5692  0F22                     	;# 
  5693  0F23                     	;# 
  5694  0F24                     	;# 
  5695  0F25                     	;# 
  5696  0F26                     	;# 
  5697  0F27                     	;# 
  5698  0F28                     	;# 
  5699  0F29                     	;# 
  5700  0F2A                     	;# 
  5701  0F2B                     	;# 
  5702  0F2C                     	;# 
  5703  0F2D                     	;# 
  5704  0F2E                     	;# 
  5705  0F2F                     	;# 
  5706  0F30                     	;# 
  5707  0F31                     	;# 
  5708  0F32                     	;# 
  5709  0F33                     	;# 
  5710  0F34                     	;# 
  5711  0F35                     	;# 
  5712  0F36                     	;# 
  5713  0F37                     	;# 
  5714  0FE4                     	;# 
  5715  0FE5                     	;# 
  5716  0FE6                     	;# 
  5717  0FE7                     	;# 
  5718  0FE8                     	;# 
  5719  0FE9                     	;# 
  5720  0FEA                     	;# 
  5721  0FEB                     	;# 
  5722  0FED                     	;# 
  5723  0FEE                     	;# 
  5724  0FEF                     	;# 
  5725  0000                     	;# 
  5726  0001                     	;# 
  5727  0002                     	;# 
  5728  0003                     	;# 
  5729  0004                     	;# 
  5730  0005                     	;# 
  5731  0006                     	;# 
  5732  0007                     	;# 
  5733  0008                     	;# 
  5734  0009                     	;# 
  5735  000A                     	;# 
  5736  000B                     	;# 
  5737  000C                     	;# 
  5738  000D                     	;# 
  5739  000E                     	;# 
  5740  0010                     	;# 
  5741  0011                     	;# 
  5742  0012                     	;# 
  5743  0013                     	;# 
  5744  0014                     	;# 
  5745  0015                     	;# 
  5746  0015                     	;# 
  5747  0016                     	;# 
  5748  0016                     	;# 
  5749  0017                     	;# 
  5750  0018                     	;# 
  5751  0019                     	;# 
  5752  0019                     	;# 
  5753  001A                     	;# 
  5754  001B                     	;# 
  5755  001C                     	;# 
  5756  001D                     	;# 
  5757  001E                     	;# 
  5758  001F                     	;# 
  5759  008C                     	;# 
  5760  008D                     	;# 
  5761  008E                     	;# 
  5762  0090                     	;# 
  5763  0091                     	;# 
  5764  0092                     	;# 
  5765  0093                     	;# 
  5766  0094                     	;# 
  5767  0097                     	;# 
  5768  009B                     	;# 
  5769  009B                     	;# 
  5770  009C                     	;# 
  5771  009D                     	;# 
  5772  009E                     	;# 
  5773  009F                     	;# 
  5774  010C                     	;# 
  5775  010D                     	;# 
  5776  010E                     	;# 
  5777  0111                     	;# 
  5778  0112                     	;# 
  5779  0113                     	;# 
  5780  0114                     	;# 
  5781  0115                     	;# 
  5782  0116                     	;# 
  5783  0117                     	;# 
  5784  0118                     	;# 
  5785  0119                     	;# 
  5786  018C                     	;# 
  5787  018D                     	;# 
  5788  018E                     	;# 
  5789  0197                     	;# 
  5790  0199                     	;# 
  5791  0199                     	;# 
  5792  0199                     	;# 
  5793  019A                     	;# 
  5794  019A                     	;# 
  5795  019A                     	;# 
  5796  019B                     	;# 
  5797  019B                     	;# 
  5798  019B                     	;# 
  5799  019B                     	;# 
  5800  019B                     	;# 
  5801  019C                     	;# 
  5802  019C                     	;# 
  5803  019C                     	;# 
  5804  019D                     	;# 
  5805  019D                     	;# 
  5806  019D                     	;# 
  5807  019E                     	;# 
  5808  019E                     	;# 
  5809  019E                     	;# 
  5810  019F                     	;# 
  5811  019F                     	;# 
  5812  019F                     	;# 
  5813  019F                     	;# 
  5814  019F                     	;# 
  5815  020C                     	;# 
  5816  020D                     	;# 
  5817  020E                     	;# 
  5818  0211                     	;# 
  5819  0211                     	;# 
  5820  0212                     	;# 
  5821  0212                     	;# 
  5822  0213                     	;# 
  5823  0213                     	;# 
  5824  0214                     	;# 
  5825  0214                     	;# 
  5826  0215                     	;# 
  5827  0215                     	;# 
  5828  0215                     	;# 
  5829  0215                     	;# 
  5830  0216                     	;# 
  5831  0216                     	;# 
  5832  0217                     	;# 
  5833  0217                     	;# 
  5834  0219                     	;# 
  5835  021A                     	;# 
  5836  021B                     	;# 
  5837  021C                     	;# 
  5838  021D                     	;# 
  5839  021D                     	;# 
  5840  021E                     	;# 
  5841  021F                     	;# 
  5842  028C                     	;# 
  5843  028D                     	;# 
  5844  028E                     	;# 
  5845  0291                     	;# 
  5846  0291                     	;# 
  5847  0292                     	;# 
  5848  0293                     	;# 
  5849  0294                     	;# 
  5850  0295                     	;# 
  5851  0295                     	;# 
  5852  0296                     	;# 
  5853  0297                     	;# 
  5854  0298                     	;# 
  5855  029F                     	;# 
  5856  030C                     	;# 
  5857  030D                     	;# 
  5858  030E                     	;# 
  5859  0311                     	;# 
  5860  0311                     	;# 
  5861  0312                     	;# 
  5862  0313                     	;# 
  5863  0314                     	;# 
  5864  0315                     	;# 
  5865  0315                     	;# 
  5866  0316                     	;# 
  5867  0317                     	;# 
  5868  0318                     	;# 
  5869  038C                     	;# 
  5870  038D                     	;# 
  5871  038E                     	;# 
  5872  0391                     	;# 
  5873  0392                     	;# 
  5874  0393                     	;# 
  5875  0394                     	;# 
  5876  0395                     	;# 
  5877  0396                     	;# 
  5878  0397                     	;# 
  5879  0398                     	;# 
  5880  0399                     	;# 
  5881  039A                     	;# 
  5882  039C                     	;# 
  5883  039D                     	;# 
  5884  039E                     	;# 
  5885  039F                     	;# 
  5886  0411                     	;# 
  5887  0411                     	;# 
  5888  0412                     	;# 
  5889  0413                     	;# 
  5890  0414                     	;# 
  5891  0415                     	;# 
  5892  0416                     	;# 
  5893  0417                     	;# 
  5894  0418                     	;# 
  5895  0418                     	;# 
  5896  0419                     	;# 
  5897  041A                     	;# 
  5898  041B                     	;# 
  5899  041C                     	;# 
  5900  041D                     	;# 
  5901  041E                     	;# 
  5902  041F                     	;# 
  5903  0498                     	;# 
  5904  0498                     	;# 
  5905  0499                     	;# 
  5906  049A                     	;# 
  5907  049B                     	;# 
  5908  049B                     	;# 
  5909  049C                     	;# 
  5910  049D                     	;# 
  5911  049E                     	;# 
  5912  049F                     	;# 
  5913  0617                     	;# 
  5914  0618                     	;# 
  5915  0619                     	;# 
  5916  0619                     	;# 
  5917  061A                     	;# 
  5918  061B                     	;# 
  5919  061C                     	;# 
  5920  061C                     	;# 
  5921  061F                     	;# 
  5922  0691                     	;# 
  5923  0692                     	;# 
  5924  0693                     	;# 
  5925  0694                     	;# 
  5926  0695                     	;# 
  5927  0696                     	;# 
  5928  0697                     	;# 
  5929  0698                     	;# 
  5930  0699                     	;# 
  5931  0711                     	;# 
  5932  0712                     	;# 
  5933  0713                     	;# 
  5934  0714                     	;# 
  5935  0715                     	;# 
  5936  0716                     	;# 
  5937  0717                     	;# 
  5938  0718                     	;# 
  5939  0719                     	;# 
  5940  0891                     	;# 
  5941  0891                     	;# 
  5942  0891                     	;# 
  5943  0891                     	;# 
  5944  0891                     	;# 
  5945  0891                     	;# 
  5946  0892                     	;# 
  5947  0892                     	;# 
  5948  0892                     	;# 
  5949  0893                     	;# 
  5950  0893                     	;# 
  5951  0893                     	;# 
  5952  0893                     	;# 
  5953  0893                     	;# 
  5954  0893                     	;# 
  5955  0894                     	;# 
  5956  0894                     	;# 
  5957  0894                     	;# 
  5958  0895                     	;# 
  5959  0895                     	;# 
  5960  0895                     	;# 
  5961  0896                     	;# 
  5962  0896                     	;# 
  5963  0896                     	;# 
  5964  089B                     	;# 
  5965  0911                     	;# 
  5966  0912                     	;# 
  5967  0913                     	;# 
  5968  0914                     	;# 
  5969  0915                     	;# 
  5970  0916                     	;# 
  5971  0918                     	;# 
  5972  0919                     	;# 
  5973  091A                     	;# 
  5974  091B                     	;# 
  5975  091C                     	;# 
  5976  091D                     	;# 
  5977  091E                     	;# 
  5978  091F                     	;# 
  5979  0E0F                     	;# 
  5980  0E10                     	;# 
  5981  0E11                     	;# 
  5982  0E12                     	;# 
  5983  0E13                     	;# 
  5984  0E14                     	;# 
  5985  0E15                     	;# 
  5986  0E16                     	;# 
  5987  0E17                     	;# 
  5988  0E18                     	;# 
  5989  0E19                     	;# 
  5990  0E1A                     	;# 
  5991  0E1B                     	;# 
  5992  0E1C                     	;# 
  5993  0E1D                     	;# 
  5994  0E1E                     	;# 
  5995  0E1F                     	;# 
  5996  0E20                     	;# 
  5997  0E21                     	;# 
  5998  0E22                     	;# 
  5999  0E24                     	;# 
  6000  0E25                     	;# 
  6001  0E28                     	;# 
  6002  0E29                     	;# 
  6003  0E2A                     	;# 
  6004  0E2B                     	;# 
  6005  0E2C                     	;# 
  6006  0E2D                     	;# 
  6007  0E2E                     	;# 
  6008  0E2F                     	;# 
  6009  0E90                     	;# 
  6010  0E91                     	;# 
  6011  0E92                     	;# 
  6012  0E94                     	;# 
  6013  0E95                     	;# 
  6014  0E9C                     	;# 
  6015  0E9D                     	;# 
  6016  0E9E                     	;# 
  6017  0E9F                     	;# 
  6018  0EA0                     	;# 
  6019  0EA1                     	;# 
  6020  0EA2                     	;# 
  6021  0EA3                     	;# 
  6022  0EA4                     	;# 
  6023  0EA5                     	;# 
  6024  0EA6                     	;# 
  6025  0EA7                     	;# 
  6026  0F0F                     	;# 
  6027  0F10                     	;# 
  6028  0F11                     	;# 
  6029  0F12                     	;# 
  6030  0F13                     	;# 
  6031  0F14                     	;# 
  6032  0F15                     	;# 
  6033  0F16                     	;# 
  6034  0F17                     	;# 
  6035  0F18                     	;# 
  6036  0F19                     	;# 
  6037  0F1A                     	;# 
  6038  0F1B                     	;# 
  6039  0F1C                     	;# 
  6040  0F1D                     	;# 
  6041  0F1E                     	;# 
  6042  0F1F                     	;# 
  6043  0F20                     	;# 
  6044  0F21                     	;# 
  6045  0F22                     	;# 
  6046  0F23                     	;# 
  6047  0F24                     	;# 
  6048  0F25                     	;# 
  6049  0F26                     	;# 
  6050  0F27                     	;# 
  6051  0F28                     	;# 
  6052  0F29                     	;# 
  6053  0F2A                     	;# 
  6054  0F2B                     	;# 
  6055  0F2C                     	;# 
  6056  0F2D                     	;# 
  6057  0F2E                     	;# 
  6058  0F2F                     	;# 
  6059  0F30                     	;# 
  6060  0F31                     	;# 
  6061  0F32                     	;# 
  6062  0F33                     	;# 
  6063  0F34                     	;# 
  6064  0F35                     	;# 
  6065  0F36                     	;# 
  6066  0F37                     	;# 
  6067  0FE4                     	;# 
  6068  0FE5                     	;# 
  6069  0FE6                     	;# 
  6070  0FE7                     	;# 
  6071  0FE8                     	;# 
  6072  0FE9                     	;# 
  6073  0FEA                     	;# 
  6074  0FEB                     	;# 
  6075  0FED                     	;# 
  6076  0FEE                     	;# 
  6077  0FEF                     	;# 
  6078  0000                     	;# 
  6079  0001                     	;# 
  6080  0002                     	;# 
  6081  0003                     	;# 
  6082  0004                     	;# 
  6083  0005                     	;# 
  6084  0006                     	;# 
  6085  0007                     	;# 
  6086  0008                     	;# 
  6087  0009                     	;# 
  6088  000A                     	;# 
  6089  000B                     	;# 
  6090  000C                     	;# 
  6091  000D                     	;# 
  6092  000E                     	;# 
  6093  0010                     	;# 
  6094  0011                     	;# 
  6095  0012                     	;# 
  6096  0013                     	;# 
  6097  0014                     	;# 
  6098  0015                     	;# 
  6099  0015                     	;# 
  6100  0016                     	;# 
  6101  0016                     	;# 
  6102  0017                     	;# 
  6103  0018                     	;# 
  6104  0019                     	;# 
  6105  0019                     	;# 
  6106  001A                     	;# 
  6107  001B                     	;# 
  6108  001C                     	;# 
  6109  001D                     	;# 
  6110  001E                     	;# 
  6111  001F                     	;# 
  6112  008C                     	;# 
  6113  008D                     	;# 
  6114  008E                     	;# 
  6115  0090                     	;# 
  6116  0091                     	;# 
  6117  0092                     	;# 
  6118  0093                     	;# 
  6119  0094                     	;# 
  6120  0097                     	;# 
  6121  009B                     	;# 
  6122  009B                     	;# 
  6123  009C                     	;# 
  6124  009D                     	;# 
  6125  009E                     	;# 
  6126  009F                     	;# 
  6127  010C                     	;# 
  6128  010D                     	;# 
  6129  010E                     	;# 
  6130  0111                     	;# 
  6131  0112                     	;# 
  6132  0113                     	;# 
  6133  0114                     	;# 
  6134  0115                     	;# 
  6135  0116                     	;# 
  6136  0117                     	;# 
  6137  0118                     	;# 
  6138  0119                     	;# 
  6139  018C                     	;# 
  6140  018D                     	;# 
  6141  018E                     	;# 
  6142  0197                     	;# 
  6143  0199                     	;# 
  6144  0199                     	;# 
  6145  0199                     	;# 
  6146  019A                     	;# 
  6147  019A                     	;# 
  6148  019A                     	;# 
  6149  019B                     	;# 
  6150  019B                     	;# 
  6151  019B                     	;# 
  6152  019B                     	;# 
  6153  019B                     	;# 
  6154  019C                     	;# 
  6155  019C                     	;# 
  6156  019C                     	;# 
  6157  019D                     	;# 
  6158  019D                     	;# 
  6159  019D                     	;# 
  6160  019E                     	;# 
  6161  019E                     	;# 
  6162  019E                     	;# 
  6163  019F                     	;# 
  6164  019F                     	;# 
  6165  019F                     	;# 
  6166  019F                     	;# 
  6167  019F                     	;# 
  6168  020C                     	;# 
  6169  020D                     	;# 
  6170  020E                     	;# 
  6171  0211                     	;# 
  6172  0211                     	;# 
  6173  0212                     	;# 
  6174  0212                     	;# 
  6175  0213                     	;# 
  6176  0213                     	;# 
  6177  0214                     	;# 
  6178  0214                     	;# 
  6179  0215                     	;# 
  6180  0215                     	;# 
  6181  0215                     	;# 
  6182  0215                     	;# 
  6183  0216                     	;# 
  6184  0216                     	;# 
  6185  0217                     	;# 
  6186  0217                     	;# 
  6187  0219                     	;# 
  6188  021A                     	;# 
  6189  021B                     	;# 
  6190  021C                     	;# 
  6191  021D                     	;# 
  6192  021D                     	;# 
  6193  021E                     	;# 
  6194  021F                     	;# 
  6195  028C                     	;# 
  6196  028D                     	;# 
  6197  028E                     	;# 
  6198  0291                     	;# 
  6199  0291                     	;# 
  6200  0292                     	;# 
  6201  0293                     	;# 
  6202  0294                     	;# 
  6203  0295                     	;# 
  6204  0295                     	;# 
  6205  0296                     	;# 
  6206  0297                     	;# 
  6207  0298                     	;# 
  6208  029F                     	;# 
  6209  030C                     	;# 
  6210  030D                     	;# 
  6211  030E                     	;# 
  6212  0311                     	;# 
  6213  0311                     	;# 
  6214  0312                     	;# 
  6215  0313                     	;# 
  6216  0314                     	;# 
  6217  0315                     	;# 
  6218  0315                     	;# 
  6219  0316                     	;# 
  6220  0317                     	;# 
  6221  0318                     	;# 
  6222  038C                     	;# 
  6223  038D                     	;# 
  6224  038E                     	;# 
  6225  0391                     	;# 
  6226  0392                     	;# 
  6227  0393                     	;# 
  6228  0394                     	;# 
  6229  0395                     	;# 
  6230  0396                     	;# 
  6231  0397                     	;# 
  6232  0398                     	;# 
  6233  0399                     	;# 
  6234  039A                     	;# 
  6235  039C                     	;# 
  6236  039D                     	;# 
  6237  039E                     	;# 
  6238  039F                     	;# 
  6239  0411                     	;# 
  6240  0411                     	;# 
  6241  0412                     	;# 
  6242  0413                     	;# 
  6243  0414                     	;# 
  6244  0415                     	;# 
  6245  0416                     	;# 
  6246  0417                     	;# 
  6247  0418                     	;# 
  6248  0418                     	;# 
  6249  0419                     	;# 
  6250  041A                     	;# 
  6251  041B                     	;# 
  6252  041C                     	;# 
  6253  041D                     	;# 
  6254  041E                     	;# 
  6255  041F                     	;# 
  6256  0498                     	;# 
  6257  0498                     	;# 
  6258  0499                     	;# 
  6259  049A                     	;# 
  6260  049B                     	;# 
  6261  049B                     	;# 
  6262  049C                     	;# 
  6263  049D                     	;# 
  6264  049E                     	;# 
  6265  049F                     	;# 
  6266  0617                     	;# 
  6267  0618                     	;# 
  6268  0619                     	;# 
  6269  0619                     	;# 
  6270  061A                     	;# 
  6271  061B                     	;# 
  6272  061C                     	;# 
  6273  061C                     	;# 
  6274  061F                     	;# 
  6275  0691                     	;# 
  6276  0692                     	;# 
  6277  0693                     	;# 
  6278  0694                     	;# 
  6279  0695                     	;# 
  6280  0696                     	;# 
  6281  0697                     	;# 
  6282  0698                     	;# 
  6283  0699                     	;# 
  6284  0711                     	;# 
  6285  0712                     	;# 
  6286  0713                     	;# 
  6287  0714                     	;# 
  6288  0715                     	;# 
  6289  0716                     	;# 
  6290  0717                     	;# 
  6291  0718                     	;# 
  6292  0719                     	;# 
  6293  0891                     	;# 
  6294  0891                     	;# 
  6295  0891                     	;# 
  6296  0891                     	;# 
  6297  0891                     	;# 
  6298  0891                     	;# 
  6299  0892                     	;# 
  6300  0892                     	;# 
  6301  0892                     	;# 
  6302  0893                     	;# 
  6303  0893                     	;# 
  6304  0893                     	;# 
  6305  0893                     	;# 
  6306  0893                     	;# 
  6307  0893                     	;# 
  6308  0894                     	;# 
  6309  0894                     	;# 
  6310  0894                     	;# 
  6311  0895                     	;# 
  6312  0895                     	;# 
  6313  0895                     	;# 
  6314  0896                     	;# 
  6315  0896                     	;# 
  6316  0896                     	;# 
  6317  089B                     	;# 
  6318  0911                     	;# 
  6319  0912                     	;# 
  6320  0913                     	;# 
  6321  0914                     	;# 
  6322  0915                     	;# 
  6323  0916                     	;# 
  6324  0918                     	;# 
  6325  0919                     	;# 
  6326  091A                     	;# 
  6327  091B                     	;# 
  6328  091C                     	;# 
  6329  091D                     	;# 
  6330  091E                     	;# 
  6331  091F                     	;# 
  6332  0E0F                     	;# 
  6333  0E10                     	;# 
  6334  0E11                     	;# 
  6335  0E12                     	;# 
  6336  0E13                     	;# 
  6337  0E14                     	;# 
  6338  0E15                     	;# 
  6339  0E16                     	;# 
  6340  0E17                     	;# 
  6341  0E18                     	;# 
  6342  0E19                     	;# 
  6343  0E1A                     	;# 
  6344  0E1B                     	;# 
  6345  0E1C                     	;# 
  6346  0E1D                     	;# 
  6347  0E1E                     	;# 
  6348  0E1F                     	;# 
  6349  0E20                     	;# 
  6350  0E21                     	;# 
  6351  0E22                     	;# 
  6352  0E24                     	;# 
  6353  0E25                     	;# 
  6354  0E28                     	;# 
  6355  0E29                     	;# 
  6356  0E2A                     	;# 
  6357  0E2B                     	;# 
  6358  0E2C                     	;# 
  6359  0E2D                     	;# 
  6360  0E2E                     	;# 
  6361  0E2F                     	;# 
  6362  0E90                     	;# 
  6363  0E91                     	;# 
  6364  0E92                     	;# 
  6365  0E94                     	;# 
  6366  0E95                     	;# 
  6367  0E9C                     	;# 
  6368  0E9D                     	;# 
  6369  0E9E                     	;# 
  6370  0E9F                     	;# 
  6371  0EA0                     	;# 
  6372  0EA1                     	;# 
  6373  0EA2                     	;# 
  6374  0EA3                     	;# 
  6375  0EA4                     	;# 
  6376  0EA5                     	;# 
  6377  0EA6                     	;# 
  6378  0EA7                     	;# 
  6379  0F0F                     	;# 
  6380  0F10                     	;# 
  6381  0F11                     	;# 
  6382  0F12                     	;# 
  6383  0F13                     	;# 
  6384  0F14                     	;# 
  6385  0F15                     	;# 
  6386  0F16                     	;# 
  6387  0F17                     	;# 
  6388  0F18                     	;# 
  6389  0F19                     	;# 
  6390  0F1A                     	;# 
  6391  0F1B                     	;# 
  6392  0F1C                     	;# 
  6393  0F1D                     	;# 
  6394  0F1E                     	;# 
  6395  0F1F                     	;# 
  6396  0F20                     	;# 
  6397  0F21                     	;# 
  6398  0F22                     	;# 
  6399  0F23                     	;# 
  6400  0F24                     	;# 
  6401  0F25                     	;# 
  6402  0F26                     	;# 
  6403  0F27                     	;# 
  6404  0F28                     	;# 
  6405  0F29                     	;# 
  6406  0F2A                     	;# 
  6407  0F2B                     	;# 
  6408  0F2C                     	;# 
  6409  0F2D                     	;# 
  6410  0F2E                     	;# 
  6411  0F2F                     	;# 
  6412  0F30                     	;# 
  6413  0F31                     	;# 
  6414  0F32                     	;# 
  6415  0F33                     	;# 
  6416  0F34                     	;# 
  6417  0F35                     	;# 
  6418  0F36                     	;# 
  6419  0F37                     	;# 
  6420  0FE4                     	;# 
  6421  0FE5                     	;# 
  6422  0FE6                     	;# 
  6423  0FE7                     	;# 
  6424  0FE8                     	;# 
  6425  0FE9                     	;# 
  6426  0FEA                     	;# 
  6427  0FEB                     	;# 
  6428  0FED                     	;# 
  6429  0FEE                     	;# 
  6430  0FEF                     	;# 
  6431  0000                     	;# 
  6432  0001                     	;# 
  6433  0002                     	;# 
  6434  0003                     	;# 
  6435  0004                     	;# 
  6436  0005                     	;# 
  6437  0006                     	;# 
  6438  0007                     	;# 
  6439  0008                     	;# 
  6440  0009                     	;# 
  6441  000A                     	;# 
  6442  000B                     	;# 
  6443  000C                     	;# 
  6444  000D                     	;# 
  6445  000E                     	;# 
  6446  0010                     	;# 
  6447  0011                     	;# 
  6448  0012                     	;# 
  6449  0013                     	;# 
  6450  0014                     	;# 
  6451  0015                     	;# 
  6452  0015                     	;# 
  6453  0016                     	;# 
  6454  0016                     	;# 
  6455  0017                     	;# 
  6456  0018                     	;# 
  6457  0019                     	;# 
  6458  0019                     	;# 
  6459  001A                     	;# 
  6460  001B                     	;# 
  6461  001C                     	;# 
  6462  001D                     	;# 
  6463  001E                     	;# 
  6464  001F                     	;# 
  6465  008C                     	;# 
  6466  008D                     	;# 
  6467  008E                     	;# 
  6468  0090                     	;# 
  6469  0091                     	;# 
  6470  0092                     	;# 
  6471  0093                     	;# 
  6472  0094                     	;# 
  6473  0097                     	;# 
  6474  009B                     	;# 
  6475  009B                     	;# 
  6476  009C                     	;# 
  6477  009D                     	;# 
  6478  009E                     	;# 
  6479  009F                     	;# 
  6480  010C                     	;# 
  6481  010D                     	;# 
  6482  010E                     	;# 
  6483  0111                     	;# 
  6484  0112                     	;# 
  6485  0113                     	;# 
  6486  0114                     	;# 
  6487  0115                     	;# 
  6488  0116                     	;# 
  6489  0117                     	;# 
  6490  0118                     	;# 
  6491  0119                     	;# 
  6492  018C                     	;# 
  6493  018D                     	;# 
  6494  018E                     	;# 
  6495  0197                     	;# 
  6496  0199                     	;# 
  6497  0199                     	;# 
  6498  0199                     	;# 
  6499  019A                     	;# 
  6500  019A                     	;# 
  6501  019A                     	;# 
  6502  019B                     	;# 
  6503  019B                     	;# 
  6504  019B                     	;# 
  6505  019B                     	;# 
  6506  019B                     	;# 
  6507  019C                     	;# 
  6508  019C                     	;# 
  6509  019C                     	;# 
  6510  019D                     	;# 
  6511  019D                     	;# 
  6512  019D                     	;# 
  6513  019E                     	;# 
  6514  019E                     	;# 
  6515  019E                     	;# 
  6516  019F                     	;# 
  6517  019F                     	;# 
  6518  019F                     	;# 
  6519  019F                     	;# 
  6520  019F                     	;# 
  6521  020C                     	;# 
  6522  020D                     	;# 
  6523  020E                     	;# 
  6524  0211                     	;# 
  6525  0211                     	;# 
  6526  0212                     	;# 
  6527  0212                     	;# 
  6528  0213                     	;# 
  6529  0213                     	;# 
  6530  0214                     	;# 
  6531  0214                     	;# 
  6532  0215                     	;# 
  6533  0215                     	;# 
  6534  0215                     	;# 
  6535  0215                     	;# 
  6536  0216                     	;# 
  6537  0216                     	;# 
  6538  0217                     	;# 
  6539  0217                     	;# 
  6540  0219                     	;# 
  6541  021A                     	;# 
  6542  021B                     	;# 
  6543  021C                     	;# 
  6544  021D                     	;# 
  6545  021D                     	;# 
  6546  021E                     	;# 
  6547  021F                     	;# 
  6548  028C                     	;# 
  6549  028D                     	;# 
  6550  028E                     	;# 
  6551  0291                     	;# 
  6552  0291                     	;# 
  6553  0292                     	;# 
  6554  0293                     	;# 
  6555  0294                     	;# 
  6556  0295                     	;# 
  6557  0295                     	;# 
  6558  0296                     	;# 
  6559  0297                     	;# 
  6560  0298                     	;# 
  6561  029F                     	;# 
  6562  030C                     	;# 
  6563  030D                     	;# 
  6564  030E                     	;# 
  6565  0311                     	;# 
  6566  0311                     	;# 
  6567  0312                     	;# 
  6568  0313                     	;# 
  6569  0314                     	;# 
  6570  0315                     	;# 
  6571  0315                     	;# 
  6572  0316                     	;# 
  6573  0317                     	;# 
  6574  0318                     	;# 
  6575  038C                     	;# 
  6576  038D                     	;# 
  6577  038E                     	;# 
  6578  0391                     	;# 
  6579  0392                     	;# 
  6580  0393                     	;# 
  6581  0394                     	;# 
  6582  0395                     	;# 
  6583  0396                     	;# 
  6584  0397                     	;# 
  6585  0398                     	;# 
  6586  0399                     	;# 
  6587  039A                     	;# 
  6588  039C                     	;# 
  6589  039D                     	;# 
  6590  039E                     	;# 
  6591  039F                     	;# 
  6592  0411                     	;# 
  6593  0411                     	;# 
  6594  0412                     	;# 
  6595  0413                     	;# 
  6596  0414                     	;# 
  6597  0415                     	;# 
  6598  0416                     	;# 
  6599  0417                     	;# 
  6600  0418                     	;# 
  6601  0418                     	;# 
  6602  0419                     	;# 
  6603  041A                     	;# 
  6604  041B                     	;# 
  6605  041C                     	;# 
  6606  041D                     	;# 
  6607  041E                     	;# 
  6608  041F                     	;# 
  6609  0498                     	;# 
  6610  0498                     	;# 
  6611  0499                     	;# 
  6612  049A                     	;# 
  6613  049B                     	;# 
  6614  049B                     	;# 
  6615  049C                     	;# 
  6616  049D                     	;# 
  6617  049E                     	;# 
  6618  049F                     	;# 
  6619  0617                     	;# 
  6620  0618                     	;# 
  6621  0619                     	;# 
  6622  0619                     	;# 
  6623  061A                     	;# 
  6624  061B                     	;# 
  6625  061C                     	;# 
  6626  061C                     	;# 
  6627  061F                     	;# 
  6628  0691                     	;# 
  6629  0692                     	;# 
  6630  0693                     	;# 
  6631  0694                     	;# 
  6632  0695                     	;# 
  6633  0696                     	;# 
  6634  0697                     	;# 
  6635  0698                     	;# 
  6636  0699                     	;# 
  6637  0711                     	;# 
  6638  0712                     	;# 
  6639  0713                     	;# 
  6640  0714                     	;# 
  6641  0715                     	;# 
  6642  0716                     	;# 
  6643  0717                     	;# 
  6644  0718                     	;# 
  6645  0719                     	;# 
  6646  0891                     	;# 
  6647  0891                     	;# 
  6648  0891                     	;# 
  6649  0891                     	;# 
  6650  0891                     	;# 
  6651  0891                     	;# 
  6652  0892                     	;# 
  6653  0892                     	;# 
  6654  0892                     	;# 
  6655  0893                     	;# 
  6656  0893                     	;# 
  6657  0893                     	;# 
  6658  0893                     	;# 
  6659  0893                     	;# 
  6660  0893                     	;# 
  6661  0894                     	;# 
  6662  0894                     	;# 
  6663  0894                     	;# 
  6664  0895                     	;# 
  6665  0895                     	;# 
  6666  0895                     	;# 
  6667  0896                     	;# 
  6668  0896                     	;# 
  6669  0896                     	;# 
  6670  089B                     	;# 
  6671  0911                     	;# 
  6672  0912                     	;# 
  6673  0913                     	;# 
  6674  0914                     	;# 
  6675  0915                     	;# 
  6676  0916                     	;# 
  6677  0918                     	;# 
  6678  0919                     	;# 
  6679  091A                     	;# 
  6680  091B                     	;# 
  6681  091C                     	;# 
  6682  091D                     	;# 
  6683  091E                     	;# 
  6684  091F                     	;# 
  6685  0E0F                     	;# 
  6686  0E10                     	;# 
  6687  0E11                     	;# 
  6688  0E12                     	;# 
  6689  0E13                     	;# 
  6690  0E14                     	;# 
  6691  0E15                     	;# 
  6692  0E16                     	;# 
  6693  0E17                     	;# 
  6694  0E18                     	;# 
  6695  0E19                     	;# 
  6696  0E1A                     	;# 
  6697  0E1B                     	;# 
  6698  0E1C                     	;# 
  6699  0E1D                     	;# 
  6700  0E1E                     	;# 
  6701  0E1F                     	;# 
  6702  0E20                     	;# 
  6703  0E21                     	;# 
  6704  0E22                     	;# 
  6705  0E24                     	;# 
  6706  0E25                     	;# 
  6707  0E28                     	;# 
  6708  0E29                     	;# 
  6709  0E2A                     	;# 
  6710  0E2B                     	;# 
  6711  0E2C                     	;# 
  6712  0E2D                     	;# 
  6713  0E2E                     	;# 
  6714  0E2F                     	;# 
  6715  0E90                     	;# 
  6716  0E91                     	;# 
  6717  0E92                     	;# 
  6718  0E94                     	;# 
  6719  0E95                     	;# 
  6720  0E9C                     	;# 
  6721  0E9D                     	;# 
  6722  0E9E                     	;# 
  6723  0E9F                     	;# 
  6724  0EA0                     	;# 
  6725  0EA1                     	;# 
  6726  0EA2                     	;# 
  6727  0EA3                     	;# 
  6728  0EA4                     	;# 
  6729  0EA5                     	;# 
  6730  0EA6                     	;# 
  6731  0EA7                     	;# 
  6732  0F0F                     	;# 
  6733  0F10                     	;# 
  6734  0F11                     	;# 
  6735  0F12                     	;# 
  6736  0F13                     	;# 
  6737  0F14                     	;# 
  6738  0F15                     	;# 
  6739  0F16                     	;# 
  6740  0F17                     	;# 
  6741  0F18                     	;# 
  6742  0F19                     	;# 
  6743  0F1A                     	;# 
  6744  0F1B                     	;# 
  6745  0F1C                     	;# 
  6746  0F1D                     	;# 
  6747  0F1E                     	;# 
  6748  0F1F                     	;# 
  6749  0F20                     	;# 
  6750  0F21                     	;# 
  6751  0F22                     	;# 
  6752  0F23                     	;# 
  6753  0F24                     	;# 
  6754  0F25                     	;# 
  6755  0F26                     	;# 
  6756  0F27                     	;# 
  6757  0F28                     	;# 
  6758  0F29                     	;# 
  6759  0F2A                     	;# 
  6760  0F2B                     	;# 
  6761  0F2C                     	;# 
  6762  0F2D                     	;# 
  6763  0F2E                     	;# 
  6764  0F2F                     	;# 
  6765  0F30                     	;# 
  6766  0F31                     	;# 
  6767  0F32                     	;# 
  6768  0F33                     	;# 
  6769  0F34                     	;# 
  6770  0F35                     	;# 
  6771  0F36                     	;# 
  6772  0F37                     	;# 
  6773  0FE4                     	;# 
  6774  0FE5                     	;# 
  6775  0FE6                     	;# 
  6776  0FE7                     	;# 
  6777  0FE8                     	;# 
  6778  0FE9                     	;# 
  6779  0FEA                     	;# 
  6780  0FEB                     	;# 
  6781  0FED                     	;# 
  6782  0FEE                     	;# 
  6783  0FEF                     	;# 
  6784  0000                     	;# 
  6785  0001                     	;# 
  6786  0002                     	;# 
  6787  0003                     	;# 
  6788  0004                     	;# 
  6789  0005                     	;# 
  6790  0006                     	;# 
  6791  0007                     	;# 
  6792  0008                     	;# 
  6793  0009                     	;# 
  6794  000A                     	;# 
  6795  000B                     	;# 
  6796  000C                     	;# 
  6797  000D                     	;# 
  6798  000E                     	;# 
  6799  0010                     	;# 
  6800  0011                     	;# 
  6801  0012                     	;# 
  6802  0013                     	;# 
  6803  0014                     	;# 
  6804  0015                     	;# 
  6805  0015                     	;# 
  6806  0016                     	;# 
  6807  0016                     	;# 
  6808  0017                     	;# 
  6809  0018                     	;# 
  6810  0019                     	;# 
  6811  0019                     	;# 
  6812  001A                     	;# 
  6813  001B                     	;# 
  6814  001C                     	;# 
  6815  001D                     	;# 
  6816  001E                     	;# 
  6817  001F                     	;# 
  6818  008C                     	;# 
  6819  008D                     	;# 
  6820  008E                     	;# 
  6821  0090                     	;# 
  6822  0091                     	;# 
  6823  0092                     	;# 
  6824  0093                     	;# 
  6825  0094                     	;# 
  6826  0097                     	;# 
  6827  009B                     	;# 
  6828  009B                     	;# 
  6829  009C                     	;# 
  6830  009D                     	;# 
  6831  009E                     	;# 
  6832  009F                     	;# 
  6833  010C                     	;# 
  6834  010D                     	;# 
  6835  010E                     	;# 
  6836  0111                     	;# 
  6837  0112                     	;# 
  6838  0113                     	;# 
  6839  0114                     	;# 
  6840  0115                     	;# 
  6841  0116                     	;# 
  6842  0117                     	;# 
  6843  0118                     	;# 
  6844  0119                     	;# 
  6845  018C                     	;# 
  6846  018D                     	;# 
  6847  018E                     	;# 
  6848  0197                     	;# 
  6849  0199                     	;# 
  6850  0199                     	;# 
  6851  0199                     	;# 
  6852  019A                     	;# 
  6853  019A                     	;# 
  6854  019A                     	;# 
  6855  019B                     	;# 
  6856  019B                     	;# 
  6857  019B                     	;# 
  6858  019B                     	;# 
  6859  019B                     	;# 
  6860  019C                     	;# 
  6861  019C                     	;# 
  6862  019C                     	;# 
  6863  019D                     	;# 
  6864  019D                     	;# 
  6865  019D                     	;# 
  6866  019E                     	;# 
  6867  019E                     	;# 
  6868  019E                     	;# 
  6869  019F                     	;# 
  6870  019F                     	;# 
  6871  019F                     	;# 
  6872  019F                     	;# 
  6873  019F                     	;# 
  6874  020C                     	;# 
  6875  020D                     	;# 
  6876  020E                     	;# 
  6877  0211                     	;# 
  6878  0211                     	;# 
  6879  0212                     	;# 
  6880  0212                     	;# 
  6881  0213                     	;# 
  6882  0213                     	;# 
  6883  0214                     	;# 
  6884  0214                     	;# 
  6885  0215                     	;# 
  6886  0215                     	;# 
  6887  0215                     	;# 
  6888  0215                     	;# 
  6889  0216                     	;# 
  6890  0216                     	;# 
  6891  0217                     	;# 
  6892  0217                     	;# 
  6893  0219                     	;# 
  6894  021A                     	;# 
  6895  021B                     	;# 
  6896  021C                     	;# 
  6897  021D                     	;# 
  6898  021D                     	;# 
  6899  021E                     	;# 
  6900  021F                     	;# 
  6901  028C                     	;# 
  6902  028D                     	;# 
  6903  028E                     	;# 
  6904  0291                     	;# 
  6905  0291                     	;# 
  6906  0292                     	;# 
  6907  0293                     	;# 
  6908  0294                     	;# 
  6909  0295                     	;# 
  6910  0295                     	;# 
  6911  0296                     	;# 
  6912  0297                     	;# 
  6913  0298                     	;# 
  6914  029F                     	;# 
  6915  030C                     	;# 
  6916  030D                     	;# 
  6917  030E                     	;# 
  6918  0311                     	;# 
  6919  0311                     	;# 
  6920  0312                     	;# 
  6921  0313                     	;# 
  6922  0314                     	;# 
  6923  0315                     	;# 
  6924  0315                     	;# 
  6925  0316                     	;# 
  6926  0317                     	;# 
  6927  0318                     	;# 
  6928  038C                     	;# 
  6929  038D                     	;# 
  6930  038E                     	;# 
  6931  0391                     	;# 
  6932  0392                     	;# 
  6933  0393                     	;# 
  6934  0394                     	;# 
  6935  0395                     	;# 
  6936  0396                     	;# 
  6937  0397                     	;# 
  6938  0398                     	;# 
  6939  0399                     	;# 
  6940  039A                     	;# 
  6941  039C                     	;# 
  6942  039D                     	;# 
  6943  039E                     	;# 
  6944  039F                     	;# 
  6945  0411                     	;# 
  6946  0411                     	;# 
  6947  0412                     	;# 
  6948  0413                     	;# 
  6949  0414                     	;# 
  6950  0415                     	;# 
  6951  0416                     	;# 
  6952  0417                     	;# 
  6953  0418                     	;# 
  6954  0418                     	;# 
  6955  0419                     	;# 
  6956  041A                     	;# 
  6957  041B                     	;# 
  6958  041C                     	;# 
  6959  041D                     	;# 
  6960  041E                     	;# 
  6961  041F                     	;# 
  6962  0498                     	;# 
  6963  0498                     	;# 
  6964  0499                     	;# 
  6965  049A                     	;# 
  6966  049B                     	;# 
  6967  049B                     	;# 
  6968  049C                     	;# 
  6969  049D                     	;# 
  6970  049E                     	;# 
  6971  049F                     	;# 
  6972  0617                     	;# 
  6973  0618                     	;# 
  6974  0619                     	;# 
  6975  0619                     	;# 
  6976  061A                     	;# 
  6977  061B                     	;# 
  6978  061C                     	;# 
  6979  061C                     	;# 
  6980  061F                     	;# 
  6981  0691                     	;# 
  6982  0692                     	;# 
  6983  0693                     	;# 
  6984  0694                     	;# 
  6985  0695                     	;# 
  6986  0696                     	;# 
  6987  0697                     	;# 
  6988  0698                     	;# 
  6989  0699                     	;# 
  6990  0711                     	;# 
  6991  0712                     	;# 
  6992  0713                     	;# 
  6993  0714                     	;# 
  6994  0715                     	;# 
  6995  0716                     	;# 
  6996  0717                     	;# 
  6997  0718                     	;# 
  6998  0719                     	;# 
  6999  0891                     	;# 
  7000  0891                     	;# 
  7001  0891                     	;# 
  7002  0891                     	;# 
  7003  0891                     	;# 
  7004  0891                     	;# 
  7005  0892                     	;# 
  7006  0892                     	;# 
  7007  0892                     	;# 
  7008  0893                     	;# 
  7009  0893                     	;# 
  7010  0893                     	;# 
  7011  0893                     	;# 
  7012  0893                     	;# 
  7013  0893                     	;# 
  7014  0894                     	;# 
  7015  0894                     	;# 
  7016  0894                     	;# 
  7017  0895                     	;# 
  7018  0895                     	;# 
  7019  0895                     	;# 
  7020  0896                     	;# 
  7021  0896                     	;# 
  7022  0896                     	;# 
  7023  089B                     	;# 
  7024  0911                     	;# 
  7025  0912                     	;# 
  7026  0913                     	;# 
  7027  0914                     	;# 
  7028  0915                     	;# 
  7029  0916                     	;# 
  7030  0918                     	;# 
  7031  0919                     	;# 
  7032  091A                     	;# 
  7033  091B                     	;# 
  7034  091C                     	;# 
  7035  091D                     	;# 
  7036  091E                     	;# 
  7037  091F                     	;# 
  7038  0E0F                     	;# 
  7039  0E10                     	;# 
  7040  0E11                     	;# 
  7041  0E12                     	;# 
  7042  0E13                     	;# 
  7043  0E14                     	;# 
  7044  0E15                     	;# 
  7045  0E16                     	;# 
  7046  0E17                     	;# 
  7047  0E18                     	;# 
  7048  0E19                     	;# 
  7049  0E1A                     	;# 
  7050  0E1B                     	;# 
  7051  0E1C                     	;# 
  7052  0E1D                     	;# 
  7053  0E1E                     	;# 
  7054  0E1F                     	;# 
  7055  0E20                     	;# 
  7056  0E21                     	;# 
  7057  0E22                     	;# 
  7058  0E24                     	;# 
  7059  0E25                     	;# 
  7060  0E28                     	;# 
  7061  0E29                     	;# 
  7062  0E2A                     	;# 
  7063  0E2B                     	;# 
  7064  0E2C                     	;# 
  7065  0E2D                     	;# 
  7066  0E2E                     	;# 
  7067  0E2F                     	;# 
  7068  0E90                     	;# 
  7069  0E91                     	;# 
  7070  0E92                     	;# 
  7071  0E94                     	;# 
  7072  0E95                     	;# 
  7073  0E9C                     	;# 
  7074  0E9D                     	;# 
  7075  0E9E                     	;# 
  7076  0E9F                     	;# 
  7077  0EA0                     	;# 
  7078  0EA1                     	;# 
  7079  0EA2                     	;# 
  7080  0EA3                     	;# 
  7081  0EA4                     	;# 
  7082  0EA5                     	;# 
  7083  0EA6                     	;# 
  7084  0EA7                     	;# 
  7085  0F0F                     	;# 
  7086  0F10                     	;# 
  7087  0F11                     	;# 
  7088  0F12                     	;# 
  7089  0F13                     	;# 
  7090  0F14                     	;# 
  7091  0F15                     	;# 
  7092  0F16                     	;# 
  7093  0F17                     	;# 
  7094  0F18                     	;# 
  7095  0F19                     	;# 
  7096  0F1A                     	;# 
  7097  0F1B                     	;# 
  7098  0F1C                     	;# 
  7099  0F1D                     	;# 
  7100  0F1E                     	;# 
  7101  0F1F                     	;# 
  7102  0F20                     	;# 
  7103  0F21                     	;# 
  7104  0F22                     	;# 
  7105  0F23                     	;# 
  7106  0F24                     	;# 
  7107  0F25                     	;# 
  7108  0F26                     	;# 
  7109  0F27                     	;# 
  7110  0F28                     	;# 
  7111  0F29                     	;# 
  7112  0F2A                     	;# 
  7113  0F2B                     	;# 
  7114  0F2C                     	;# 
  7115  0F2D                     	;# 
  7116  0F2E                     	;# 
  7117  0F2F                     	;# 
  7118  0F30                     	;# 
  7119  0F31                     	;# 
  7120  0F32                     	;# 
  7121  0F33                     	;# 
  7122  0F34                     	;# 
  7123  0F35                     	;# 
  7124  0F36                     	;# 
  7125  0F37                     	;# 
  7126  0FE4                     	;# 
  7127  0FE5                     	;# 
  7128  0FE6                     	;# 
  7129  0FE7                     	;# 
  7130  0FE8                     	;# 
  7131  0FE9                     	;# 
  7132  0FEA                     	;# 
  7133  0FEB                     	;# 
  7134  0FED                     	;# 
  7135  0FEE                     	;# 
  7136  0FEF                     	;# 
  7137  0000                     	;# 
  7138  0001                     	;# 
  7139  0002                     	;# 
  7140  0003                     	;# 
  7141  0004                     	;# 
  7142  0005                     	;# 
  7143  0006                     	;# 
  7144  0007                     	;# 
  7145  0008                     	;# 
  7146  0009                     	;# 
  7147  000A                     	;# 
  7148  000B                     	;# 
  7149  000C                     	;# 
  7150  000D                     	;# 
  7151  000E                     	;# 
  7152  0010                     	;# 
  7153  0011                     	;# 
  7154  0012                     	;# 
  7155  0013                     	;# 
  7156  0014                     	;# 
  7157  0015                     	;# 
  7158  0015                     	;# 
  7159  0016                     	;# 
  7160  0016                     	;# 
  7161  0017                     	;# 
  7162  0018                     	;# 
  7163  0019                     	;# 
  7164  0019                     	;# 
  7165  001A                     	;# 
  7166  001B                     	;# 
  7167  001C                     	;# 
  7168  001D                     	;# 
  7169  001E                     	;# 
  7170  001F                     	;# 
  7171  008C                     	;# 
  7172  008D                     	;# 
  7173  008E                     	;# 
  7174  0090                     	;# 
  7175  0091                     	;# 
  7176  0092                     	;# 
  7177  0093                     	;# 
  7178  0094                     	;# 
  7179  0097                     	;# 
  7180  009B                     	;# 
  7181  009B                     	;# 
  7182  009C                     	;# 
  7183  009D                     	;# 
  7184  009E                     	;# 
  7185  009F                     	;# 
  7186  010C                     	;# 
  7187  010D                     	;# 
  7188  010E                     	;# 
  7189  0111                     	;# 
  7190  0112                     	;# 
  7191  0113                     	;# 
  7192  0114                     	;# 
  7193  0115                     	;# 
  7194  0116                     	;# 
  7195  0117                     	;# 
  7196  0118                     	;# 
  7197  0119                     	;# 
  7198  018C                     	;# 
  7199  018D                     	;# 
  7200  018E                     	;# 
  7201  0197                     	;# 
  7202  0199                     	;# 
  7203  0199                     	;# 
  7204  0199                     	;# 
  7205  019A                     	;# 
  7206  019A                     	;# 
  7207  019A                     	;# 
  7208  019B                     	;# 
  7209  019B                     	;# 
  7210  019B                     	;# 
  7211  019B                     	;# 
  7212  019B                     	;# 
  7213  019C                     	;# 
  7214  019C                     	;# 
  7215  019C                     	;# 
  7216  019D                     	;# 
  7217  019D                     	;# 
  7218  019D                     	;# 
  7219  019E                     	;# 
  7220  019E                     	;# 
  7221  019E                     	;# 
  7222  019F                     	;# 
  7223  019F                     	;# 
  7224  019F                     	;# 
  7225  019F                     	;# 
  7226  019F                     	;# 
  7227  020C                     	;# 
  7228  020D                     	;# 
  7229  020E                     	;# 
  7230  0211                     	;# 
  7231  0211                     	;# 
  7232  0212                     	;# 
  7233  0212                     	;# 
  7234  0213                     	;# 
  7235  0213                     	;# 
  7236  0214                     	;# 
  7237  0214                     	;# 
  7238  0215                     	;# 
  7239  0215                     	;# 
  7240  0215                     	;# 
  7241  0215                     	;# 
  7242  0216                     	;# 
  7243  0216                     	;# 
  7244  0217                     	;# 
  7245  0217                     	;# 
  7246  0219                     	;# 
  7247  021A                     	;# 
  7248  021B                     	;# 
  7249  021C                     	;# 
  7250  021D                     	;# 
  7251  021D                     	;# 
  7252  021E                     	;# 
  7253  021F                     	;# 
  7254  028C                     	;# 
  7255  028D                     	;# 
  7256  028E                     	;# 
  7257  0291                     	;# 
  7258  0291                     	;# 
  7259  0292                     	;# 
  7260  0293                     	;# 
  7261  0294                     	;# 
  7262  0295                     	;# 
  7263  0295                     	;# 
  7264  0296                     	;# 
  7265  0297                     	;# 
  7266  0298                     	;# 
  7267  029F                     	;# 
  7268  030C                     	;# 
  7269  030D                     	;# 
  7270  030E                     	;# 
  7271  0311                     	;# 
  7272  0311                     	;# 
  7273  0312                     	;# 
  7274  0313                     	;# 
  7275  0314                     	;# 
  7276  0315                     	;# 
  7277  0315                     	;# 
  7278  0316                     	;# 
  7279  0317                     	;# 
  7280  0318                     	;# 
  7281  038C                     	;# 
  7282  038D                     	;# 
  7283  038E                     	;# 
  7284  0391                     	;# 
  7285  0392                     	;# 
  7286  0393                     	;# 
  7287  0394                     	;# 
  7288  0395                     	;# 
  7289  0396                     	;# 
  7290  0397                     	;# 
  7291  0398                     	;# 
  7292  0399                     	;# 
  7293  039A                     	;# 
  7294  039C                     	;# 
  7295  039D                     	;# 
  7296  039E                     	;# 
  7297  039F                     	;# 
  7298  0411                     	;# 
  7299  0411                     	;# 
  7300  0412                     	;# 
  7301  0413                     	;# 
  7302  0414                     	;# 
  7303  0415                     	;# 
  7304  0416                     	;# 
  7305  0417                     	;# 
  7306  0418                     	;# 
  7307  0418                     	;# 
  7308  0419                     	;# 
  7309  041A                     	;# 
  7310  041B                     	;# 
  7311  041C                     	;# 
  7312  041D                     	;# 
  7313  041E                     	;# 
  7314  041F                     	;# 
  7315  0498                     	;# 
  7316  0498                     	;# 
  7317  0499                     	;# 
  7318  049A                     	;# 
  7319  049B                     	;# 
  7320  049B                     	;# 
  7321  049C                     	;# 
  7322  049D                     	;# 
  7323  049E                     	;# 
  7324  049F                     	;# 
  7325  0617                     	;# 
  7326  0618                     	;# 
  7327  0619                     	;# 
  7328  0619                     	;# 
  7329  061A                     	;# 
  7330  061B                     	;# 
  7331  061C                     	;# 
  7332  061C                     	;# 
  7333  061F                     	;# 
  7334  0691                     	;# 
  7335  0692                     	;# 
  7336  0693                     	;# 
  7337  0694                     	;# 
  7338  0695                     	;# 
  7339  0696                     	;# 
  7340  0697                     	;# 
  7341  0698                     	;# 
  7342  0699                     	;# 
  7343  0711                     	;# 
  7344  0712                     	;# 
  7345  0713                     	;# 
  7346  0714                     	;# 
  7347  0715                     	;# 
  7348  0716                     	;# 
  7349  0717                     	;# 
  7350  0718                     	;# 
  7351  0719                     	;# 
  7352  0891                     	;# 
  7353  0891                     	;# 
  7354  0891                     	;# 
  7355  0891                     	;# 
  7356  0891                     	;# 
  7357  0891                     	;# 
  7358  0892                     	;# 
  7359  0892                     	;# 
  7360  0892                     	;# 
  7361  0893                     	;# 
  7362  0893                     	;# 
  7363  0893                     	;# 
  7364  0893                     	;# 
  7365  0893                     	;# 
  7366  0893                     	;# 
  7367  0894                     	;# 
  7368  0894                     	;# 
  7369  0894                     	;# 
  7370  0895                     	;# 
  7371  0895                     	;# 
  7372  0895                     	;# 
  7373  0896                     	;# 
  7374  0896                     	;# 
  7375  0896                     	;# 
  7376  089B                     	;# 
  7377  0911                     	;# 
  7378  0912                     	;# 
  7379  0913                     	;# 
  7380  0914                     	;# 
  7381  0915                     	;# 
  7382  0916                     	;# 
  7383  0918                     	;# 
  7384  0919                     	;# 
  7385  091A                     	;# 
  7386  091B                     	;# 
  7387  091C                     	;# 
  7388  091D                     	;# 
  7389  091E                     	;# 
  7390  091F                     	;# 
  7391  0E0F                     	;# 
  7392  0E10                     	;# 
  7393  0E11                     	;# 
  7394  0E12                     	;# 
  7395  0E13                     	;# 
  7396  0E14                     	;# 
  7397  0E15                     	;# 
  7398  0E16                     	;# 
  7399  0E17                     	;# 
  7400  0E18                     	;# 
  7401  0E19                     	;# 
  7402  0E1A                     	;# 
  7403  0E1B                     	;# 
  7404  0E1C                     	;# 
  7405  0E1D                     	;# 
  7406  0E1E                     	;# 
  7407  0E1F                     	;# 
  7408  0E20                     	;# 
  7409  0E21                     	;# 
  7410  0E22                     	;# 
  7411  0E24                     	;# 
  7412  0E25                     	;# 
  7413  0E28                     	;# 
  7414  0E29                     	;# 
  7415  0E2A                     	;# 
  7416  0E2B                     	;# 
  7417  0E2C                     	;# 
  7418  0E2D                     	;# 
  7419  0E2E                     	;# 
  7420  0E2F                     	;# 
  7421  0E90                     	;# 
  7422  0E91                     	;# 
  7423  0E92                     	;# 
  7424  0E94                     	;# 
  7425  0E95                     	;# 
  7426  0E9C                     	;# 
  7427  0E9D                     	;# 
  7428  0E9E                     	;# 
  7429  0E9F                     	;# 
  7430  0EA0                     	;# 
  7431  0EA1                     	;# 
  7432  0EA2                     	;# 
  7433  0EA3                     	;# 
  7434  0EA4                     	;# 
  7435  0EA5                     	;# 
  7436  0EA6                     	;# 
  7437  0EA7                     	;# 
  7438  0F0F                     	;# 
  7439  0F10                     	;# 
  7440  0F11                     	;# 
  7441  0F12                     	;# 
  7442  0F13                     	;# 
  7443  0F14                     	;# 
  7444  0F15                     	;# 
  7445  0F16                     	;# 
  7446  0F17                     	;# 
  7447  0F18                     	;# 
  7448  0F19                     	;# 
  7449  0F1A                     	;# 
  7450  0F1B                     	;# 
  7451  0F1C                     	;# 
  7452  0F1D                     	;# 
  7453  0F1E                     	;# 
  7454  0F1F                     	;# 
  7455  0F20                     	;# 
  7456  0F21                     	;# 
  7457  0F22                     	;# 
  7458  0F23                     	;# 
  7459  0F24                     	;# 
  7460  0F25                     	;# 
  7461  0F26                     	;# 
  7462  0F27                     	;# 
  7463  0F28                     	;# 
  7464  0F29                     	;# 
  7465  0F2A                     	;# 
  7466  0F2B                     	;# 
  7467  0F2C                     	;# 
  7468  0F2D                     	;# 
  7469  0F2E                     	;# 
  7470  0F2F                     	;# 
  7471  0F30                     	;# 
  7472  0F31                     	;# 
  7473  0F32                     	;# 
  7474  0F33                     	;# 
  7475  0F34                     	;# 
  7476  0F35                     	;# 
  7477  0F36                     	;# 
  7478  0F37                     	;# 
  7479  0FE4                     	;# 
  7480  0FE5                     	;# 
  7481  0FE6                     	;# 
  7482  0FE7                     	;# 
  7483  0FE8                     	;# 
  7484  0FE9                     	;# 
  7485  0FEA                     	;# 
  7486  0FEB                     	;# 
  7487  0FED                     	;# 
  7488  0FEE                     	;# 
  7489  0FEF                     	;# 
  7490  0000                     	;# 
  7491  0001                     	;# 
  7492  0002                     	;# 
  7493  0003                     	;# 
  7494  0004                     	;# 
  7495  0005                     	;# 
  7496  0006                     	;# 
  7497  0007                     	;# 
  7498  0008                     	;# 
  7499  0009                     	;# 
  7500  000A                     	;# 
  7501  000B                     	;# 
  7502  000C                     	;# 
  7503  000D                     	;# 
  7504  000E                     	;# 
  7505  0010                     	;# 
  7506  0011                     	;# 
  7507  0012                     	;# 
  7508  0013                     	;# 
  7509  0014                     	;# 
  7510  0015                     	;# 
  7511  0015                     	;# 
  7512  0016                     	;# 
  7513  0016                     	;# 
  7514  0017                     	;# 
  7515  0018                     	;# 
  7516  0019                     	;# 
  7517  0019                     	;# 
  7518  001A                     	;# 
  7519  001B                     	;# 
  7520  001C                     	;# 
  7521  001D                     	;# 
  7522  001E                     	;# 
  7523  001F                     	;# 
  7524  008C                     	;# 
  7525  008D                     	;# 
  7526  008E                     	;# 
  7527  0090                     	;# 
  7528  0091                     	;# 
  7529  0092                     	;# 
  7530  0093                     	;# 
  7531  0094                     	;# 
  7532  0097                     	;# 
  7533  009B                     	;# 
  7534  009B                     	;# 
  7535  009C                     	;# 
  7536  009D                     	;# 
  7537  009E                     	;# 
  7538  009F                     	;# 
  7539  010C                     	;# 
  7540  010D                     	;# 
  7541  010E                     	;# 
  7542  0111                     	;# 
  7543  0112                     	;# 
  7544  0113                     	;# 
  7545  0114                     	;# 
  7546  0115                     	;# 
  7547  0116                     	;# 
  7548  0117                     	;# 
  7549  0118                     	;# 
  7550  0119                     	;# 
  7551  018C                     	;# 
  7552  018D                     	;# 
  7553  018E                     	;# 
  7554  0197                     	;# 
  7555  0199                     	;# 
  7556  0199                     	;# 
  7557  0199                     	;# 
  7558  019A                     	;# 
  7559  019A                     	;# 
  7560  019A                     	;# 
  7561  019B                     	;# 
  7562  019B                     	;# 
  7563  019B                     	;# 
  7564  019B                     	;# 
  7565  019B                     	;# 
  7566  019C                     	;# 
  7567  019C                     	;# 
  7568  019C                     	;# 
  7569  019D                     	;# 
  7570  019D                     	;# 
  7571  019D                     	;# 
  7572  019E                     	;# 
  7573  019E                     	;# 
  7574  019E                     	;# 
  7575  019F                     	;# 
  7576  019F                     	;# 
  7577  019F                     	;# 
  7578  019F                     	;# 
  7579  019F                     	;# 
  7580  020C                     	;# 
  7581  020D                     	;# 
  7582  020E                     	;# 
  7583  0211                     	;# 
  7584  0211                     	;# 
  7585  0212                     	;# 
  7586  0212                     	;# 
  7587  0213                     	;# 
  7588  0213                     	;# 
  7589  0214                     	;# 
  7590  0214                     	;# 
  7591  0215                     	;# 
  7592  0215                     	;# 
  7593  0215                     	;# 
  7594  0215                     	;# 
  7595  0216                     	;# 
  7596  0216                     	;# 
  7597  0217                     	;# 
  7598  0217                     	;# 
  7599  0219                     	;# 
  7600  021A                     	;# 
  7601  021B                     	;# 
  7602  021C                     	;# 
  7603  021D                     	;# 
  7604  021D                     	;# 
  7605  021E                     	;# 
  7606  021F                     	;# 
  7607  028C                     	;# 
  7608  028D                     	;# 
  7609  028E                     	;# 
  7610  0291                     	;# 
  7611  0291                     	;# 
  7612  0292                     	;# 
  7613  0293                     	;# 
  7614  0294                     	;# 
  7615  0295                     	;# 
  7616  0295                     	;# 
  7617  0296                     	;# 
  7618  0297                     	;# 
  7619  0298                     	;# 
  7620  029F                     	;# 
  7621  030C                     	;# 
  7622  030D                     	;# 
  7623  030E                     	;# 
  7624  0311                     	;# 
  7625  0311                     	;# 
  7626  0312                     	;# 
  7627  0313                     	;# 
  7628  0314                     	;# 
  7629  0315                     	;# 
  7630  0315                     	;# 
  7631  0316                     	;# 
  7632  0317                     	;# 
  7633  0318                     	;# 
  7634  038C                     	;# 
  7635  038D                     	;# 
  7636  038E                     	;# 
  7637  0391                     	;# 
  7638  0392                     	;# 
  7639  0393                     	;# 
  7640  0394                     	;# 
  7641  0395                     	;# 
  7642  0396                     	;# 
  7643  0397                     	;# 
  7644  0398                     	;# 
  7645  0399                     	;# 
  7646  039A                     	;# 
  7647  039C                     	;# 
  7648  039D                     	;# 
  7649  039E                     	;# 
  7650  039F                     	;# 
  7651  0411                     	;# 
  7652  0411                     	;# 
  7653  0412                     	;# 
  7654  0413                     	;# 
  7655  0414                     	;# 
  7656  0415                     	;# 
  7657  0416                     	;# 
  7658  0417                     	;# 
  7659  0418                     	;# 
  7660  0418                     	;# 
  7661  0419                     	;# 
  7662  041A                     	;# 
  7663  041B                     	;# 
  7664  041C                     	;# 
  7665  041D                     	;# 
  7666  041E                     	;# 
  7667  041F                     	;# 
  7668  0498                     	;# 
  7669  0498                     	;# 
  7670  0499                     	;# 
  7671  049A                     	;# 
  7672  049B                     	;# 
  7673  049B                     	;# 
  7674  049C                     	;# 
  7675  049D                     	;# 
  7676  049E                     	;# 
  7677  049F                     	;# 
  7678  0617                     	;# 
  7679  0618                     	;# 
  7680  0619                     	;# 
  7681  0619                     	;# 
  7682  061A                     	;# 
  7683  061B                     	;# 
  7684  061C                     	;# 
  7685  061C                     	;# 
  7686  061F                     	;# 
  7687  0691                     	;# 
  7688  0692                     	;# 
  7689  0693                     	;# 
  7690  0694                     	;# 
  7691  0695                     	;# 
  7692  0696                     	;# 
  7693  0697                     	;# 
  7694  0698                     	;# 
  7695  0699                     	;# 
  7696  0711                     	;# 
  7697  0712                     	;# 
  7698  0713                     	;# 
  7699  0714                     	;# 
  7700  0715                     	;# 
  7701  0716                     	;# 
  7702  0717                     	;# 
  7703  0718                     	;# 
  7704  0719                     	;# 
  7705  0891                     	;# 
  7706  0891                     	;# 
  7707  0891                     	;# 
  7708  0891                     	;# 
  7709  0891                     	;# 
  7710  0891                     	;# 
  7711  0892                     	;# 
  7712  0892                     	;# 
  7713  0892                     	;# 
  7714  0893                     	;# 
  7715  0893                     	;# 
  7716  0893                     	;# 
  7717  0893                     	;# 
  7718  0893                     	;# 
  7719  0893                     	;# 
  7720  0894                     	;# 
  7721  0894                     	;# 
  7722  0894                     	;# 
  7723  0895                     	;# 
  7724  0895                     	;# 
  7725  0895                     	;# 
  7726  0896                     	;# 
  7727  0896                     	;# 
  7728  0896                     	;# 
  7729  089B                     	;# 
  7730  0911                     	;# 
  7731  0912                     	;# 
  7732  0913                     	;# 
  7733  0914                     	;# 
  7734  0915                     	;# 
  7735  0916                     	;# 
  7736  0918                     	;# 
  7737  0919                     	;# 
  7738  091A                     	;# 
  7739  091B                     	;# 
  7740  091C                     	;# 
  7741  091D                     	;# 
  7742  091E                     	;# 
  7743  091F                     	;# 
  7744  0E0F                     	;# 
  7745  0E10                     	;# 
  7746  0E11                     	;# 
  7747  0E12                     	;# 
  7748  0E13                     	;# 
  7749  0E14                     	;# 
  7750  0E15                     	;# 
  7751  0E16                     	;# 
  7752  0E17                     	;# 
  7753  0E18                     	;# 
  7754  0E19                     	;# 
  7755  0E1A                     	;# 
  7756  0E1B                     	;# 
  7757  0E1C                     	;# 
  7758  0E1D                     	;# 
  7759  0E1E                     	;# 
  7760  0E1F                     	;# 
  7761  0E20                     	;# 
  7762  0E21                     	;# 
  7763  0E22                     	;# 
  7764  0E24                     	;# 
  7765  0E25                     	;# 
  7766  0E28                     	;# 
  7767  0E29                     	;# 
  7768  0E2A                     	;# 
  7769  0E2B                     	;# 
  7770  0E2C                     	;# 
  7771  0E2D                     	;# 
  7772  0E2E                     	;# 
  7773  0E2F                     	;# 
  7774  0E90                     	;# 
  7775  0E91                     	;# 
  7776  0E92                     	;# 
  7777  0E94                     	;# 
  7778  0E95                     	;# 
  7779  0E9C                     	;# 
  7780  0E9D                     	;# 
  7781  0E9E                     	;# 
  7782  0E9F                     	;# 
  7783  0EA0                     	;# 
  7784  0EA1                     	;# 
  7785  0EA2                     	;# 
  7786  0EA3                     	;# 
  7787  0EA4                     	;# 
  7788  0EA5                     	;# 
  7789  0EA6                     	;# 
  7790  0EA7                     	;# 
  7791  0F0F                     	;# 
  7792  0F10                     	;# 
  7793  0F11                     	;# 
  7794  0F12                     	;# 
  7795  0F13                     	;# 
  7796  0F14                     	;# 
  7797  0F15                     	;# 
  7798  0F16                     	;# 
  7799  0F17                     	;# 
  7800  0F18                     	;# 
  7801  0F19                     	;# 
  7802  0F1A                     	;# 
  7803  0F1B                     	;# 
  7804  0F1C                     	;# 
  7805  0F1D                     	;# 
  7806  0F1E                     	;# 
  7807  0F1F                     	;# 
  7808  0F20                     	;# 
  7809  0F21                     	;# 
  7810  0F22                     	;# 
  7811  0F23                     	;# 
  7812  0F24                     	;# 
  7813  0F25                     	;# 
  7814  0F26                     	;# 
  7815  0F27                     	;# 
  7816  0F28                     	;# 
  7817  0F29                     	;# 
  7818  0F2A                     	;# 
  7819  0F2B                     	;# 
  7820  0F2C                     	;# 
  7821  0F2D                     	;# 
  7822  0F2E                     	;# 
  7823  0F2F                     	;# 
  7824  0F30                     	;# 
  7825  0F31                     	;# 
  7826  0F32                     	;# 
  7827  0F33                     	;# 
  7828  0F34                     	;# 
  7829  0F35                     	;# 
  7830  0F36                     	;# 
  7831  0F37                     	;# 
  7832  0FE4                     	;# 
  7833  0FE5                     	;# 
  7834  0FE6                     	;# 
  7835  0FE7                     	;# 
  7836  0FE8                     	;# 
  7837  0FE9                     	;# 
  7838  0FEA                     	;# 
  7839  0FEB                     	;# 
  7840  0FED                     	;# 
  7841  0FEE                     	;# 
  7842  0FEF                     	;# 
  7843                           
  7844                           	psect	idataBANK0
  7845  0000                     __pidataBANK0:	
  7846  0003                     _STATUSbits	set	3
  7847  000E                     _PORTCbits	set	14
  7848  000D                     _PORTBbits	set	13
  7849  000C                     _PORTAbits	set	12
  7850  001F                     _T2CON	set	31
  7851  001D                     _TMR2	set	29
  7852  001E                     _PR2	set	30
  7853  0011                     _PIR1bits	set	17
  7854  0013                     _PIR3bits	set	19
  7855  000B                     _INTCONbits	set	11
  7856  008E                     _TRISCbits	set	142
  7857  009D                     _ADCON0bits	set	157
  7858  009C                     _ADRESH	set	156
  7859  009B                     _ADRESL	set	155
  7860  009F                     _ADACT	set	159
  7861  009E                     _ADCON1	set	158
  7862  009D                     _ADCON0	set	157
  7863  008E                     _TRISC	set	142
  7864  008D                     _TRISB	set	141
  7865  008C                     _TRISA	set	140
  7866  0091                     _PIE1bits	set	145
  7867  0093                     _PIE3bits	set	147
  7868  0097                     _WDTCON	set	151
  7869  010E                     _LATCbits	set	270
  7870  010D                     _LATBbits	set	269
  7871  010E                     _LATC	set	270
  7872  010D                     _LATB	set	269
  7873  010C                     _LATA	set	268
  7874  018E                     _ANSELCbits	set	398
  7875  018C                     _ANSELA	set	396
  7876  018D                     _ANSELB	set	397
  7877  018E                     _ANSELC	set	398
  7878  020E                     _WPUCbits	set	526
  7879  020D                     _WPUBbits	set	525
  7880  020E                     _WPUC	set	526
  7881  020C                     _WPUA	set	524
  7882  020D                     _WPUB	set	525
  7883  0215                     _SSP1CON1bits	set	533
  7884  0216                     _SSP1CON2bits	set	534
  7885  0214                     _SSP1STATbits	set	532
  7886  0211                     _SSP1BUF	set	529
  7887  0212                     _SSP1ADD	set	530
  7888  0213                     _SSP1MSK	set	531
  7889  0217                     _SSP1CON3	set	535
  7890  0216                     _SSP1CON2	set	534
  7891  0215                     _SSP1CON1	set	533
  7892  0214                     _SSP1STAT	set	532
  7893  028E                     _ODCONCbits	set	654
  7894  0295                     _CCPR2L	set	661
  7895  0296                     _CCPR2H	set	662
  7896  0297                     _CCP2CON	set	663
  7897  0291                     _CCPR1L	set	657
  7898  0292                     _CCPR1H	set	658
  7899  0293                     _CCP1CON	set	659
  7900  029F                     _CCPTMRSbits	set	671
  7901  028E                     _ODCONC	set	654
  7902  028D                     _ODCONB	set	653
  7903  028C                     _ODCONA	set	652
  7904  0315                     _CCPR4L	set	789
  7905  0316                     _CCPR4H	set	790
  7906  0317                     _CCP4CON	set	791
  7907  0311                     _CCPR3L	set	785
  7908  0312                     _CCPR3H	set	786
  7909  0313                     _CCP3CON	set	787
  7910  0413                     _T3CONbits	set	1043
  7911  0413                     _T3CON	set	1043
  7912  0411                     _TMR3L	set	1041
  7913  0412                     _TMR3H	set	1042
  7914  0414                     _T3GCON	set	1044
  7915  061F                     _PWMTMRSbits	set	1567
  7916  0617                     _PWM5DCL	set	1559
  7917  0618                     _PWM5DCH	set	1560
  7918  0619                     _PWM5CON	set	1561
  7919  0896                     _NVMCON2	set	2198
  7920  0894                     _NVMDATH	set	2196
  7921  0893                     _NVMDATL	set	2195
  7922  0892                     _NVMADRH	set	2194
  7923  0891                     _NVMADRL	set	2193
  7924  0895                     _NVMCON1bits	set	2197
  7925  0916                     _PMD5	set	2326
  7926  0915                     _PMD4	set	2325
  7927  0914                     _PMD3	set	2324
  7928  0913                     _PMD2	set	2323
  7929  0912                     _PMD1	set	2322
  7930  0911                     _PMD0	set	2321
  7931  091E                     _OSCTUNE	set	2334
  7932  091F                     _OSCFRQ	set	2335
  7933  091D                     _OSCEN	set	2333
  7934  091B                     _OSCCON3	set	2331
  7935  0919                     _OSCCON1	set	2329
  7936  0E0F                     _PPSLOCKbits	set	3599
  7937  0E0F                     _PPSLOCK	set	3599
  7938  0E28                     _CLCIN0PPSbits	set	3624
  7939  0E29                     _CLCIN1PPSbits	set	3625
  7940  0E21                     _SSP1DATPPSbits	set	3617
  7941  0E20                     _SSP1CLKPPSbits	set	3616
  7942  0EA6                     _RC6PPSbits	set	3750
  7943  0EA7                     _RC7PPSbits	set	3751
  7944  0EA3                     _RC3PPSbits	set	3747
  7945  0EA4                     _RC4PPSbits	set	3748
  7946  0EA5                     _RC5PPSbits	set	3749
  7947  0E9E                     _RB6PPSbits	set	3742
  7948  0E9F                     _RB7PPSbits	set	3743
  7949  0F10                     _CLC1CON	set	3856
  7950  0F19                     _CLC1GLS3	set	3865
  7951  0F18                     _CLC1GLS2	set	3864
  7952  0F17                     _CLC1GLS1	set	3863
  7953  0F16                     _CLC1GLS0	set	3862
  7954  0F15                     _CLC1SEL3	set	3861
  7955  0F14                     _CLC1SEL2	set	3860
  7956  0F13                     _CLC1SEL1	set	3859
  7957  0F12                     _CLC1SEL0	set	3858
  7958  0F11                     _CLC1POL	set	3857
  7959  0F1A                     _CLC2CON	set	3866
  7960  0F23                     _CLC2GLS3	set	3875
  7961  0F22                     _CLC2GLS2	set	3874
  7962  0F21                     _CLC2GLS1	set	3873
  7963  0F20                     _CLC2GLS0	set	3872
  7964  0F1F                     _CLC2SEL3	set	3871
  7965  0F1E                     _CLC2SEL2	set	3870
  7966  0F1D                     _CLC2SEL1	set	3869
  7967  0F1C                     _CLC2SEL0	set	3868
  7968  0F1B                     _CLC2POL	set	3867
  7969                           
  7970                           ; #config settings
  7971  0000                     
  7972                           	psect	cinit
  7973  0032                     start_initialization:	
  7974  0032                     __initialization:	
  7975                           
  7976                           ;initializer for _I2C1_slaveWriteData
  7977  0032  3055               	movlw	85
  7978  0033  00E8               	movwf	__pdataBANK0& (0+127)
  7979  0034  3020               	movlw	low __pbssBANK0
  7980                           
  7981                           ; Clear objects allocated to COMMON
  7982  0035  01FC               	clrf	__pbssCOMMON& (0+127)
  7983  0036  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  7984                           
  7985                           ; Clear objects allocated to BANK0
  7986  0037  0084               	movwf	4
  7987  0038  3000               	movlw	high __pbssBANK0
  7988  0039  0085               	movwf	5
  7989  003A  3034               	movlw	52
  7990  003B  318B  2352  3180   	fcall	clear_ram0
  7991                           
  7992                           ; Clear objects allocated to BANK1
  7993  003E  30A0               	movlw	low __pbssBANK1
  7994  003F  0084               	movwf	4
  7995  0040  3000               	movlw	high __pbssBANK1
  7996  0041  0085               	movwf	5
  7997  0042  3016               	movlw	22
  7998  0043  318B  2352  3180   	fcall	clear_ram0
  7999  0046                     end_of_initialization:	
  8000                           ;End of C runtime variable initialization code
  8001                           
  8002  0046                     __end_of__initialization:	
  8003  0046  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8004  0047  0020               	movlb	0
  8005  0048  2849               	ljmp	_main	;jump to C main() function
  8006  0049                     __pmaintext:	
  8007 ;;
  8008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  8009 ;;
  8010 ;; *************** function _main *****************
  8011 ;; Defined at:
  8012 ;;		line 80 in file "main.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;		None
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  1    wreg      void 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : B1F/0
  8023 ;;		On exit  : 1E/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;Total ram usage:        0 bytes
  8031 ;; Hardware stack levels required when called:   12
  8032 ;; This function calls:
  8033 ;;		_ClearInterrupt
  8034 ;;		_DataInitSet
  8035 ;;		_Encoder_FSM
  8036 ;;		_GP_Ports_FSM
  8037 ;;		_SYSTEM_Initialize
  8038 ;;		_TMR3_SetInterruptHandler
  8039 ;;		_TMR3_StartTimer
  8040 ;; This function is called by:
  8041 ;;		Startup code after reset
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _main
  8047  0049                     _main:	
  8048                           
  8049                           ;main.c: 82: SYSTEM_Initialize();
  8050                           
  8051                           ;incstack = 0
  8052                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8053  0049  23E9  3180         	fcall	_SYSTEM_Initialize
  8054                           
  8055                           ;main.c: 88: (INTCONbits.GIE = 1);
  8056  004B  178B               	bsf	11,7	;volatile
  8057                           
  8058                           ;main.c: 91: (INTCONbits.PEIE = 1);
  8059  004C  170B               	bsf	11,6	;volatile
  8060                           
  8061                           ;main.c: 99: TMR3_SetInterruptHandler(TimerInt);
  8062  004D  3048               	movlw	low _TimerInt
  8063  004E  0021               	movlb	1	; select bank1
  8064  004F  00B6               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8065  0050  300B               	movlw	high _TimerInt
  8066  0051  00B7               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8067  0052  23E4  3180         	fcall	_TMR3_SetInterruptHandler
  8068                           
  8069                           ;main.c: 100: DataInitSet();
  8070  0054  206B               	fcall	_DataInitSet
  8071  0055  158E               	bsf	14,3	;volatile
  8072  0056  160E               	bsf	14,4	;volatile
  8073  0057  168E               	bsf	14,5	;volatile
  8074  0058  170E               	bsf	14,6	;volatile
  8075  0059  178E               	bsf	14,7	;volatile
  8076                           
  8077                           ;main.c: 107: TMR3_StartTimer();
  8078  005A  318B  234B  3180   	fcall	_TMR3_StartTimer
  8079                           
  8080                           ;main.c: 108: ClearInterrupt();
  8081  005D  2068  3180         	fcall	_ClearInterrupt
  8082  005F                     l7057:	
  8083                           
  8084                           ;main.c: 113: if (fsm_tmr == 1) {
  8085  005F  0021               	movlb	1	; select bank1
  8086  0060  0B35               	decfsz	_fsm_tmr^(0+128),w
  8087  0061  285F               	goto	l7057
  8088                           
  8089                           ;main.c: 115: fsm_tmr = 0;
  8090  0062  01B5               	clrf	_fsm_tmr^(0+128)
  8091                           
  8092                           ;main.c: 116: Encoder_FSM();
  8093  0063  209F  3180         	fcall	_Encoder_FSM
  8094                           
  8095                           ;main.c: 117: GP_Ports_FSM();
  8096  0065  20B1  3180         	fcall	_GP_Ports_FSM
  8097  0067  285F               	goto	l7057
  8098  0068                     __end_of_main:	
  8099  0068                     __ptext40:	
  8100 ;; *************** function _ClearInterrupt *****************
  8101 ;; Defined at:
  8102 ;;		line 66 in file "main.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		None
  8111 ;; Tracked objects:
  8112 ;;		On entry : 1F/8
  8113 ;;		On exit  : 1F/2
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    7
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_main
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _ClearInterrupt
  8132  0068                     _ClearInterrupt:	
  8133                           
  8134                           ;incstack = 0
  8135                           ; Regs used in _ClearInterrupt: []
  8136                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
  8137  0068  0022               	movlb	2	; select bank2
  8138  0069  168D               	bsf	13,5	;volatile
  8139  006A  0008               	return
  8140  006B                     __end_of_ClearInterrupt:	
  8141  006B                     __ptext39:	
  8142 ;; *************** function _DataInitSet *****************
  8143 ;; Defined at:
  8144 ;;		line 55 in file "DataVariable.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2
  8153 ;; Tracked objects:
  8154 ;;		On entry : 1F/1
  8155 ;;		On exit  : 1F/1
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    7
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_main
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           
  8173                           ;psect for function _DataInitSet
  8174  006B                     _DataInitSet:	
  8175                           
  8176                           ;DataVariable.c: 56: GCONF = 0;
  8177                           
  8178                           ;incstack = 0
  8179                           ; Regs used in _DataInitSet: [wreg+status,2]
  8180  006B  01FD               	clrf	_GCONF	;volatile
  8181                           
  8182                           ;DataVariable.c: 57: GP1CONF = 0;
  8183  006C  01FC               	clrf	_GP1CONF	;volatile
  8184                           
  8185                           ;DataVariable.c: 58: GP3CONF = 0;
  8186  006D  0020               	movlb	0	; select bank0
  8187  006E  01CF               	clrf	_GP3CONF	;volatile
  8188                           
  8189                           ;DataVariable.c: 59: INTCONF = 0;
  8190  006F  01D1               	clrf	_INTCONF	;volatile
  8191                           
  8192                           ;DataVariable.c: 60: ESTATUS = 0;
  8193  0070  01D2               	clrf	_ESTATUS	;volatile
  8194                           
  8195                           ;DataVariable.c: 61: I2STATUS = 0;
  8196  0071  01CE               	clrf	_I2STATUS	;volatile
  8197                           
  8198                           ;DataVariable.c: 62: CVAL.val = 0;
  8199  0072  01AC               	clrf	_CVAL	;volatile
  8200  0073  01AD               	clrf	_CVAL+1	;volatile
  8201  0074  01AE               	clrf	_CVAL+2	;volatile
  8202  0075  01AF               	clrf	_CVAL+3	;volatile
  8203                           
  8204                           ;DataVariable.c: 63: CMAX.val = 0;
  8205  0076  01A8               	clrf	_CMAX	;volatile
  8206  0077  01A9               	clrf	_CMAX+1	;volatile
  8207  0078  01AA               	clrf	_CMAX+2	;volatile
  8208  0079  01AB               	clrf	_CMAX+3	;volatile
  8209                           
  8210                           ;DataVariable.c: 64: CMIN.val = 0;
  8211  007A  01A4               	clrf	_CMIN	;volatile
  8212  007B  01A5               	clrf	_CMIN+1	;volatile
  8213  007C  01A6               	clrf	_CMIN+2	;volatile
  8214  007D  01A7               	clrf	_CMIN+3	;volatile
  8215                           
  8216                           ;DataVariable.c: 65: ISTEP.val = 1;
  8217  007E  3001               	movlw	1
  8218  007F  00A0               	movwf	_ISTEP	;volatile
  8219  0080  01A1               	clrf	_ISTEP+1	;volatile
  8220  0081  01A2               	clrf	_ISTEP+2	;volatile
  8221  0082  01A3               	clrf	_ISTEP+3	;volatile
  8222                           
  8223                           ;DataVariable.c: 66: RLED = 0;
  8224  0083  01CC               	clrf	_RLED	;volatile
  8225                           
  8226                           ;DataVariable.c: 67: GLED = 0;
  8227  0084  01CB               	clrf	_GLED	;volatile
  8228                           
  8229                           ;DataVariable.c: 68: BLED = 0;
  8230  0085  01CA               	clrf	_BLED	;volatile
  8231                           
  8232                           ;DataVariable.c: 69: GP1REG = 0;
  8233  0086  01C9               	clrf	_GP1REG	;volatile
  8234                           
  8235                           ;DataVariable.c: 70: GP2REG = 0;
  8236  0087  01C8               	clrf	_GP2REG	;volatile
  8237                           
  8238                           ;DataVariable.c: 71: GP3REG = 0;
  8239  0088  01C7               	clrf	_GP3REG	;volatile
  8240                           
  8241                           ;DataVariable.c: 72: C_RESET = 0;
  8242  0089  01C2               	clrf	_C_RESET	;volatile
  8243                           
  8244                           ;DataVariable.c: 73: C_MBANK = 0;
  8245  008A  01C1               	clrf	_C_MBANK	;volatile
  8246                           
  8247                           ;DataVariable.c: 74: C_ETYPE = 0;
  8248  008B  01C0               	clrf	_C_ETYPE	;volatile
  8249                           
  8250                           ;DataVariable.c: 75: C_RMOD = 0;
  8251  008C  01BF               	clrf	_C_RMOD	;volatile
  8252                           
  8253                           ;DataVariable.c: 76: C_IPUD = 0;
  8254  008D  01BE               	clrf	_C_IPUD	;volatile
  8255                           
  8256                           ;DataVariable.c: 77: C_DIRE = 0;
  8257  008E  0021               	movlb	1	; select bank1
  8258  008F  01B4               	clrf	_C_DIRE^(0+128)	;volatile
  8259                           
  8260                           ;DataVariable.c: 78: C_WRAPE = 0;
  8261  0090  0020               	movlb	0	; select bank0
  8262  0091  01BD               	clrf	_C_WRAPE	;volatile
  8263                           
  8264                           ;DataVariable.c: 79: C_DTYPE = 0;
  8265  0092  01BC               	clrf	_C_DTYPE	;volatile
  8266                           
  8267                           ;DataVariable.c: 81: ANTBOUNC=25;
  8268  0093  3019               	movlw	25
  8269  0094  00C6               	movwf	_ANTBOUNC	;volatile
  8270                           
  8271                           ;DataVariable.c: 82: DPPERIOD=0;
  8272  0095  01C5               	clrf	_DPPERIOD	;volatile
  8273                           
  8274                           ;DataVariable.c: 83: FADERGB=0;
  8275  0096  01C4               	clrf	_FADERGB	;volatile
  8276                           
  8277                           ;DataVariable.c: 84: FADEGP=0;
  8278  0097  01C3               	clrf	_FADEGP	;volatile
  8279                           
  8280                           ;DataVariable.c: 85: DEBOUNCE=250;
  8281  0098  30FA               	movlw	250
  8282  0099  00B0               	movwf	_DEBOUNCE	;volatile
  8283  009A  01B1               	clrf	_DEBOUNCE+1	;volatile
  8284                           
  8285                           ;DataVariable.c: 86: DoublePush=0;
  8286  009B  0021               	movlb	1	; select bank1
  8287  009C  01A4               	clrf	_DoublePush^(0+128)	;volatile
  8288  009D  01A5               	clrf	(_DoublePush+1)^(0+128)	;volatile
  8289  009E  0008               	return
  8290  009F                     __end_of_DataInitSet:	
  8291  009F                     __ptext26:	
  8292 ;; *************** function _Encoder_FSM *****************
  8293 ;; Defined at:
  8294 ;;		line 342 in file "Encoder.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 1F/1
  8305 ;;		On exit  : 1C/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:   11
  8315 ;; This function calls:
  8316 ;;		_Encoder_PushButton_FSM
  8317 ;;		_FADE_LEDS
  8318 ;; This function is called by:
  8319 ;;		_main
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function _Encoder_FSM
  8325  009F                     _Encoder_FSM:	
  8326                           
  8327                           ;Encoder.c: 343: if (en_deb < DEBOUNCE) {
  8328                           
  8329                           ;incstack = 0
  8330                           ; Regs used in _Encoder_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8331  009F  0020               	movlb	0	; select bank0
  8332  00A0  0831               	movf	_DEBOUNCE+1,w	;volatile
  8333  00A1  0021               	movlb	1	; select bank1
  8334  00A2  0221               	subwf	(_en_deb+1)^(0+128),w
  8335  00A3  1D03               	skipz
  8336  00A4  28A9               	goto	u4885
  8337  00A5  0020               	movlb	0	; select bank0
  8338  00A6  0830               	movf	_DEBOUNCE,w	;volatile
  8339  00A7  0021               	movlb	1	; select bank1
  8340  00A8  0220               	subwf	_en_deb^(0+128),w
  8341  00A9                     u4885:	
  8342  00A9  1803               	skipnc
  8343  00AA  28AE               	goto	l7017
  8344                           
  8345                           ;Encoder.c: 344: en_deb++;
  8346  00AB  0AA0               	incf	_en_deb^(0+128),f
  8347  00AC  1903               	skipnz
  8348  00AD  0AA1               	incf	(_en_deb+1)^(0+128),f
  8349  00AE                     l7017:	
  8350                           
  8351                           ;Encoder.c: 345: };Encoder.c: 347: FADE_LEDS();
  8352  00AE  2274  3180         	fcall	_FADE_LEDS
  8353                           
  8354                           ;Encoder.c: 348: Encoder_PushButton_FSM();
  8355  00B0  29E7               	ljmp	l6905
  8356  00B1                     __end_of_Encoder_FSM:	
  8357  00B1                     __ptext14:	
  8358 ;; *************** function _GP_Ports_FSM *****************
  8359 ;; Defined at:
  8360 ;;		line 575 in file "GPports.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;		None
  8363 ;; Auto vars:     Size  Location     Type
  8364 ;;		None
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 1C/1
  8371 ;;		On exit  : 1E/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8378 ;;Total ram usage:        1 bytes
  8379 ;; Hardware stack levels used:    1
  8380 ;; Hardware stack levels required when called:   11
  8381 ;; This function calls:
  8382 ;;		_FADE_GP1
  8383 ;;		_FADE_GP2
  8384 ;;		_FADE_GP3
  8385 ;;		_GP1_FSM
  8386 ;;		_GP2_FSM
  8387 ;;		_GP3_FSM
  8388 ;; This function is called by:
  8389 ;;		_main
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           
  8394                           ;psect for function _GP_Ports_FSM
  8395  00B1                     _GP_Ports_FSM:	
  8396                           
  8397                           ;GPports.c: 578: FADE_GP1();
  8398                           
  8399                           ;incstack = 0
  8400                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8401  00B1  232B  3180         	fcall	_FADE_GP1
  8402                           
  8403                           ;GPports.c: 579: FADE_GP2();
  8404  00B3  2370  3180         	fcall	_FADE_GP2
  8405                           
  8406                           ;GPports.c: 580: FADE_GP3();
  8407  00B5  23AA  3180         	fcall	_FADE_GP3
  8408                           
  8409                           ;GPports.c: 582: if (gp_fade_cnt++ >= FADEGP) {
  8410  00B7  0020               	movlb	0	; select bank0
  8411  00B8  0835               	movf	_gp_fade_cnt,w
  8412  00B9  0AB5               	incf	_gp_fade_cnt,f
  8413  00BA  0021               	movlb	1	; select bank1
  8414  00BB  00BC               	movwf	??_GP_Ports_FSM^(0+128)
  8415  00BC  0020               	movlb	0	; select bank0
  8416  00BD  0843               	movf	_FADEGP,w	;volatile
  8417  00BE  0021               	movlb	1	; select bank1
  8418  00BF  023C               	subwf	??_GP_Ports_FSM^(0+128),w
  8419  00C0  1C03               	skipc
  8420  00C1  28C4               	goto	l7027
  8421                           
  8422                           ;GPports.c: 583: gp_fade_cnt = 0;
  8423  00C2  0020               	movlb	0	; select bank0
  8424  00C3  01B5               	clrf	_gp_fade_cnt
  8425  00C4                     l7027:	
  8426                           
  8427                           ;GPports.c: 584: };GPports.c: 586: if (gp_timer++ > 10) {
  8428  00C4  0021               	movlb	1	; select bank1
  8429  00C5  0832               	movf	_gp_timer^(0+128),w
  8430  00C6  0AB2               	incf	_gp_timer^(0+128),f
  8431  00C7  00BC               	movwf	??_GP_Ports_FSM^(0+128)
  8432  00C8  300B               	movlw	11
  8433  00C9  023C               	subwf	??_GP_Ports_FSM^(0+128),w
  8434  00CA  1C03               	skipc
  8435  00CB  0008               	return
  8436                           
  8437                           ;GPports.c: 587: gp_timer = 0;
  8438  00CC  01B2               	clrf	_gp_timer^(0+128)
  8439                           
  8440                           ;GPports.c: 588: GP1_FSM();
  8441  00CD  20D2  3180         	fcall	_GP1_FSM
  8442                           
  8443                           ;GPports.c: 589: GP2_FSM();
  8444  00CF  2119  3180         	fcall	_GP2_FSM
  8445                           
  8446                           ;GPports.c: 590: GP3_FSM();
  8447  00D1  2966               	ljmp	l6771
  8448  00D2                     __end_of_GP_Ports_FSM:	
  8449  00D2                     __ptext17:	
  8450 ;; *************** function _GP1_FSM *****************
  8451 ;; Defined at:
  8452 ;;		line 433 in file "GPports.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8461 ;; Tracked objects:
  8462 ;;		On entry : 1F/1
  8463 ;;		On exit  : 1E/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;Total ram usage:        2 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    9
  8473 ;; This function calls:
  8474 ;;		_ADC_GetConversion
  8475 ;;		_ADC_Initialize
  8476 ;;		_Int2StatusUpdate
  8477 ;;		_SetInterrupt
  8478 ;; This function is called by:
  8479 ;;		_GP_Ports_FSM
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           
  8484                           ;psect for function _GP1_FSM
  8485  00D2                     _GP1_FSM:	
  8486                           
  8487                           ;GPports.c: 434: switch (gp1_fsm) {
  8488                           
  8489                           ;incstack = 0
  8490                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8491  00D2  290E               	goto	l6719
  8492  00D3                     l6681:	
  8493                           
  8494                           ;GPports.c: 436: if ((GP1CONF & 0x03) == 0x02) {
  8495  00D3  3003               	movlw	3
  8496  00D4  057C               	andwf	_GP1CONF,w	;volatile
  8497  00D5  00BA               	movwf	??_GP1_FSM^(0+128)
  8498  00D6  3A02               	xorlw	2
  8499  00D7  1D03               	btfss	3,2
  8500  00D8  28DC               	goto	l6689
  8501                           
  8502                           ;GPports.c: 437: gp1_fsm = GP_ADC_MODE;
  8503  00D9  01B1               	clrf	_gp1_fsm^(0+128)
  8504  00DA  0AB1               	incf	_gp1_fsm^(0+128),f
  8505                           
  8506                           ;GPports.c: 438: ADC_Initialize();
  8507  00DB  29DF               	ljmp	l6345
  8508  00DC                     l6689:	
  8509                           
  8510                           ;GPports.c: 440: };GPports.c: 441: if ((GP1CONF & 0x03) == 0x03) {
  8511  00DC  3003               	movlw	3
  8512  00DD  057C               	andwf	_GP1CONF,w	;volatile
  8513  00DE  00BA               	movwf	??_GP1_FSM^(0+128)
  8514  00DF  3A03               	xorlw	3
  8515  00E0  1D03               	btfss	3,2
  8516  00E1  0008               	return
  8517  00E2                     l6691:	
  8518                           
  8519                           ;GPports.c: 442: gp1_fsm = GP_WAITRISE;
  8520  00E2  3002               	movlw	2
  8521  00E3  0021               	movlb	1	; select bank1
  8522  00E4  00B1               	movwf	_gp1_fsm^(0+128)
  8523  00E5  0008               	return
  8524  00E6                     l6695:	
  8525                           
  8526                           ;GPports.c: 448: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
  8527  00E6  3017               	movlw	23
  8528  00E7  21C4               	fcall	_ADC_GetConversion
  8529  00E8  0836               	movf	?_ADC_GetConversion^(0+128),w
  8530  00E9  00BA               	movwf	??_GP1_FSM^(0+128)
  8531  00EA  0837               	movf	(?_ADC_GetConversion+1)^(0+128),w
  8532  00EB  00BB               	movwf	(??_GP1_FSM^(0+128)+1)
  8533  00EC  36BB               	lsrf	(??_GP1_FSM^(0+128)+1),f
  8534  00ED  0CBA               	rrf	??_GP1_FSM^(0+128),f
  8535  00EE  36BB               	lsrf	(??_GP1_FSM^(0+128)+1),f
  8536  00EF  0CBA               	rrf	??_GP1_FSM^(0+128),f
  8537  00F0  083A               	movf	??_GP1_FSM^(0+128),w
  8538  00F1  0020               	movlb	0	; select bank0
  8539  00F2  00C9               	movwf	_GP1REG	;volatile
  8540                           
  8541                           ;GPports.c: 449: break;
  8542  00F3  0008               	return
  8543  00F4                     l1262:	
  8544                           ;GPports.c: 451: case GP_WAITRISE:
  8545                           
  8546                           
  8547                           ;GPports.c: 452: if (PORTCbits.RC7 == 1) {
  8548  00F4  0020               	movlb	0	; select bank0
  8549  00F5  1F8E               	btfss	14,7	;volatile
  8550  00F6  0008               	return
  8551                           
  8552                           ;GPports.c: 453: GP1REG = 1;
  8553  00F7  3001               	movlw	1
  8554  00F8  00C9               	movwf	_GP1REG	;volatile
  8555                           
  8556                           ;GPports.c: 454: Int2StatusUpdate(E_GP1POS);
  8557  00F9  21B6  3180         	fcall	_Int2StatusUpdate
  8558                           
  8559                           ;GPports.c: 455: if ((GP1CONF & 0x08) != 0) {
  8560  00FB  1DFC               	btfss	_GP1CONF,3	;volatile
  8561  00FC  28FE               	goto	l6705
  8562                           
  8563                           ;GPports.c: 456: SetInterrupt();
  8564  00FD  21BC               	fcall	_SetInterrupt
  8565  00FE                     l6705:	
  8566                           
  8567                           ;GPports.c: 457: };GPports.c: 458: gp1_fsm = GP_WAITFALL;
  8568  00FE  3003               	movlw	3
  8569  00FF  0021               	movlb	1	; select bank1
  8570  0100  00B1               	movwf	_gp1_fsm^(0+128)
  8571  0101  0008               	return
  8572  0102                     l1265:	
  8573                           ;GPports.c: 462: case GP_WAITFALL:
  8574                           
  8575                           
  8576                           ;GPports.c: 463: if (PORTCbits.RC7 == 0) {
  8577  0102  0020               	movlb	0	; select bank0
  8578  0103  1B8E               	btfsc	14,7	;volatile
  8579  0104  0008               	return
  8580                           
  8581                           ;GPports.c: 464: GP1REG = 0;
  8582  0105  01C9               	clrf	_GP1REG	;volatile
  8583                           
  8584                           ;GPports.c: 465: Int2StatusUpdate(E_GP1NEG);
  8585  0106  3002               	movlw	2
  8586  0107  21B6  3180         	fcall	_Int2StatusUpdate
  8587                           
  8588                           ;GPports.c: 466: if ((GP1CONF & 0x10) != 0) {
  8589  0109  1E7C               	btfss	_GP1CONF,4	;volatile
  8590  010A  28E2               	goto	l6691
  8591                           
  8592                           ;GPports.c: 467: SetInterrupt();
  8593  010B  21BC  3180         	fcall	_SetInterrupt
  8594  010D  28E2               	goto	l6691
  8595  010E                     l6719:	
  8596  010E  0831               	movf	_gp1_fsm^(0+128),w
  8597                           
  8598                           ; Switch size 1, requested type "speed"
  8599                           ; Number of cases is 4, Range of values is 0 to 3
  8600                           ; switch strategies available:
  8601                           ; Name         Instructions Cycles
  8602                           ; direct_byte           14     6 (fixed)
  8603                           ; simple_byte           13     7 (average)
  8604                           ; jumptable            260     6 (fixed)
  8605                           ;	Chosen strategy is direct_byte
  8606  010F  0084               	movwf	4
  8607  0110  3004               	movlw	4
  8608  0111  0204               	subwf	4,w
  8609  0112  1803               	skipnc
  8610  0113  0008               	return
  8611  0114  3188               	movlp	high S7399
  8612  0115  3504               	lslf	4,w
  8613  0116  3E60               	addlw	low S7399
  8614  0117  0082               	movwf	2
  8615  0118  0008               	return
  8616  0119                     __end_of_GP1_FSM:	
  8617  0119                     __ptext16:	
  8618 ;; *************** function _GP2_FSM *****************
  8619 ;; Defined at:
  8620 ;;		line 478 in file "GPports.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8629 ;; Tracked objects:
  8630 ;;		On entry : 1E/1
  8631 ;;		On exit  : 1E/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;Total ram usage:        2 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; Hardware stack levels required when called:    9
  8641 ;; This function calls:
  8642 ;;		_ADC_GetConversion
  8643 ;;		_ADC_Initialize
  8644 ;;		_Int2StatusUpdate
  8645 ;;		_SetInterrupt
  8646 ;; This function is called by:
  8647 ;;		_GP_Ports_FSM
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           
  8652                           ;psect for function _GP2_FSM
  8653  0119                     _GP2_FSM:	
  8654                           
  8655                           ;GPports.c: 480: switch (gp2_fsm) {
  8656                           
  8657                           ;incstack = 0
  8658                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8659  0119  295A               	goto	l6765
  8660  011A                     l6727:	
  8661                           
  8662                           ;GPports.c: 482: if ((GP2CONF & 0x03) == 0x02) {
  8663  011A  3003               	movlw	3
  8664  011B  0020               	movlb	0	; select bank0
  8665  011C  0550               	andwf	_GP2CONF,w	;volatile
  8666  011D  0021               	movlb	1	; select bank1
  8667  011E  00BA               	movwf	??_GP2_FSM^(0+128)
  8668  011F  3A02               	xorlw	2
  8669  0120  1D03               	btfss	3,2
  8670  0121  2925               	goto	l6735
  8671                           
  8672                           ;GPports.c: 483: gp2_fsm = GP_ADC_MODE;
  8673  0122  01B0               	clrf	_gp2_fsm^(0+128)
  8674  0123  0AB0               	incf	_gp2_fsm^(0+128),f
  8675                           
  8676                           ;GPports.c: 484: ADC_Initialize();
  8677  0124  29DF               	ljmp	l6345
  8678  0125                     l6735:	
  8679                           
  8680                           ;GPports.c: 486: };GPports.c: 488: if ((GP2CONF & 0x03) == 0x03) {
  8681  0125  3003               	movlw	3
  8682  0126  0020               	movlb	0	; select bank0
  8683  0127  0550               	andwf	_GP2CONF,w	;volatile
  8684  0128  0021               	movlb	1	; select bank1
  8685  0129  00BA               	movwf	??_GP2_FSM^(0+128)
  8686  012A  3A03               	xorlw	3
  8687  012B  1D03               	btfss	3,2
  8688  012C  0008               	return
  8689  012D                     l6737:	
  8690                           
  8691                           ;GPports.c: 489: gp2_fsm = GP_WAITRISE;
  8692  012D  3002               	movlw	2
  8693  012E  0021               	movlb	1	; select bank1
  8694  012F  00B0               	movwf	_gp2_fsm^(0+128)
  8695  0130  0008               	return
  8696  0131                     l6741:	
  8697                           
  8698                           ;GPports.c: 495: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
  8699  0131  3016               	movlw	22
  8700  0132  21C4               	fcall	_ADC_GetConversion
  8701  0133  0836               	movf	?_ADC_GetConversion^(0+128),w
  8702  0134  00BA               	movwf	??_GP2_FSM^(0+128)
  8703  0135  0837               	movf	(?_ADC_GetConversion+1)^(0+128),w
  8704  0136  00BB               	movwf	(??_GP2_FSM^(0+128)+1)
  8705  0137  36BB               	lsrf	(??_GP2_FSM^(0+128)+1),f
  8706  0138  0CBA               	rrf	??_GP2_FSM^(0+128),f
  8707  0139  36BB               	lsrf	(??_GP2_FSM^(0+128)+1),f
  8708  013A  0CBA               	rrf	??_GP2_FSM^(0+128),f
  8709  013B  083A               	movf	??_GP2_FSM^(0+128),w
  8710  013C  0020               	movlb	0	; select bank0
  8711  013D  00C8               	movwf	_GP2REG	;volatile
  8712                           
  8713                           ;GPports.c: 496: break;
  8714  013E  0008               	return
  8715  013F                     l1277:	
  8716                           ;GPports.c: 498: case GP_WAITRISE:
  8717                           
  8718                           
  8719                           ;GPports.c: 499: if (PORTCbits.RC6 == 1) {
  8720  013F  0020               	movlb	0	; select bank0
  8721  0140  1F0E               	btfss	14,6	;volatile
  8722  0141  0008               	return
  8723                           
  8724                           ;GPports.c: 500: GP2REG = 1;
  8725  0142  3001               	movlw	1
  8726  0143  00C8               	movwf	_GP2REG	;volatile
  8727                           
  8728                           ;GPports.c: 501: Int2StatusUpdate(E_GP2POS);
  8729  0144  3004               	movlw	4
  8730  0145  21B6  3180         	fcall	_Int2StatusUpdate
  8731                           
  8732                           ;GPports.c: 502: if ((GP2CONF & 0x08) != 0) {
  8733  0147  1DD0               	btfss	_GP2CONF,3	;volatile
  8734  0148  294A               	goto	l6751
  8735                           
  8736                           ;GPports.c: 503: SetInterrupt();
  8737  0149  21BC               	fcall	_SetInterrupt
  8738  014A                     l6751:	
  8739                           
  8740                           ;GPports.c: 504: };GPports.c: 505: gp2_fsm = GP_WAITFALL;
  8741  014A  3003               	movlw	3
  8742  014B  0021               	movlb	1	; select bank1
  8743  014C  00B0               	movwf	_gp2_fsm^(0+128)
  8744  014D  0008               	return
  8745  014E                     l1280:	
  8746                           ;GPports.c: 509: case GP_WAITFALL:
  8747                           
  8748                           
  8749                           ;GPports.c: 510: if (PORTCbits.RC6 == 0) {
  8750  014E  0020               	movlb	0	; select bank0
  8751  014F  1B0E               	btfsc	14,6	;volatile
  8752  0150  0008               	return
  8753                           
  8754                           ;GPports.c: 512: GP2REG = 0;
  8755  0151  01C8               	clrf	_GP2REG	;volatile
  8756                           
  8757                           ;GPports.c: 513: Int2StatusUpdate(E_GP2NEG);
  8758  0152  3008               	movlw	8
  8759  0153  21B6  3180         	fcall	_Int2StatusUpdate
  8760                           
  8761                           ;GPports.c: 514: if ((GP2CONF & 0x10) != 0) {
  8762  0155  1E50               	btfss	_GP2CONF,4	;volatile
  8763  0156  292D               	goto	l6737
  8764                           
  8765                           ;GPports.c: 515: SetInterrupt();
  8766  0157  21BC  3180         	fcall	_SetInterrupt
  8767  0159  292D               	goto	l6737
  8768  015A                     l6765:	
  8769  015A  0021               	movlb	1	; select bank1
  8770  015B  0830               	movf	_gp2_fsm^(0+128),w
  8771                           
  8772                           ; Switch size 1, requested type "speed"
  8773                           ; Number of cases is 4, Range of values is 0 to 3
  8774                           ; switch strategies available:
  8775                           ; Name         Instructions Cycles
  8776                           ; direct_byte           14     6 (fixed)
  8777                           ; simple_byte           13     7 (average)
  8778                           ; jumptable            260     6 (fixed)
  8779                           ;	Chosen strategy is direct_byte
  8780  015C  0084               	movwf	4
  8781  015D  3004               	movlw	4
  8782  015E  0204               	subwf	4,w
  8783  015F  1803               	skipnc
  8784  0160  0008               	return
  8785  0161  3188               	movlp	high S7397
  8786  0162  3504               	lslf	4,w
  8787  0163  3E58               	addlw	low S7397
  8788  0164  0082               	movwf	2
  8789  0165  0008               	return
  8790  0166                     __end_of_GP2_FSM:	
  8791  0166                     __ptext15:	
  8792 ;; *************** function _GP3_FSM *****************
  8793 ;; Defined at:
  8794 ;;		line 527 in file "GPports.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 1E/1
  8805 ;;		On exit  : 1E/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;Total ram usage:        2 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    9
  8815 ;; This function calls:
  8816 ;;		_ADC_GetConversion
  8817 ;;		_ADC_Initialize
  8818 ;;		_Int2StatusUpdate
  8819 ;;		_SetInterrupt
  8820 ;; This function is called by:
  8821 ;;		_GP_Ports_FSM
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           
  8826                           ;psect for function _GP3_FSM
  8827  0166                     _GP3_FSM:	
  8828  0166                     l6771:	
  8829                           ;incstack = 0
  8830                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8831                           
  8832                           
  8833                           ;GPports.c: 529: if (C_ETYPE == 1)
  8834  0166  0020               	movlb	0	; select bank0
  8835  0167  0B40               	decfsz	_C_ETYPE,w	;volatile
  8836  0168  29AA               	goto	l6813
  8837  0169  0008               	return
  8838  016A                     l6775:	
  8839                           
  8840                           ;GPports.c: 534: if ((GP3CONF & 0x03) == 0x02) {
  8841  016A  3003               	movlw	3
  8842  016B  0020               	movlb	0	; select bank0
  8843  016C  054F               	andwf	_GP3CONF,w	;volatile
  8844  016D  0021               	movlb	1	; select bank1
  8845  016E  00BA               	movwf	??_GP3_FSM^(0+128)
  8846  016F  3A02               	xorlw	2
  8847  0170  1D03               	btfss	3,2
  8848  0171  2975               	goto	l6783
  8849                           
  8850                           ;GPports.c: 535: gp3_fsm = GP_ADC_MODE;
  8851  0172  01AF               	clrf	_gp3_fsm^(0+128)
  8852  0173  0AAF               	incf	_gp3_fsm^(0+128),f
  8853                           
  8854                           ;GPports.c: 536: ADC_Initialize();
  8855  0174  29DF               	ljmp	l6345
  8856  0175                     l6783:	
  8857                           
  8858                           ;GPports.c: 538: };GPports.c: 540: if ((GP3CONF & 0x03) == 0x03) {
  8859  0175  3003               	movlw	3
  8860  0176  0020               	movlb	0	; select bank0
  8861  0177  054F               	andwf	_GP3CONF,w	;volatile
  8862  0178  0021               	movlb	1	; select bank1
  8863  0179  00BA               	movwf	??_GP3_FSM^(0+128)
  8864  017A  3A03               	xorlw	3
  8865  017B  1D03               	btfss	3,2
  8866  017C  0008               	return
  8867  017D                     l6785:	
  8868                           
  8869                           ;GPports.c: 541: gp3_fsm = GP_WAITRISE;
  8870  017D  3002               	movlw	2
  8871  017E  0021               	movlb	1	; select bank1
  8872  017F  00AF               	movwf	_gp3_fsm^(0+128)
  8873  0180  0008               	return
  8874  0181                     l6789:	
  8875                           
  8876                           ;GPports.c: 547: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
  8877  0181  3015               	movlw	21
  8878  0182  21C4               	fcall	_ADC_GetConversion
  8879  0183  0836               	movf	?_ADC_GetConversion^(0+128),w
  8880  0184  00BA               	movwf	??_GP3_FSM^(0+128)
  8881  0185  0837               	movf	(?_ADC_GetConversion+1)^(0+128),w
  8882  0186  00BB               	movwf	(??_GP3_FSM^(0+128)+1)
  8883  0187  36BB               	lsrf	(??_GP3_FSM^(0+128)+1),f
  8884  0188  0CBA               	rrf	??_GP3_FSM^(0+128),f
  8885  0189  36BB               	lsrf	(??_GP3_FSM^(0+128)+1),f
  8886  018A  0CBA               	rrf	??_GP3_FSM^(0+128),f
  8887  018B  083A               	movf	??_GP3_FSM^(0+128),w
  8888  018C  0020               	movlb	0	; select bank0
  8889  018D  00C7               	movwf	_GP3REG	;volatile
  8890                           
  8891                           ;GPports.c: 548: break;
  8892  018E  0008               	return
  8893  018F                     l1293:	
  8894                           ;GPports.c: 550: case GP_WAITRISE:
  8895                           
  8896                           
  8897                           ;GPports.c: 551: if (PORTCbits.RC5 == 1) {
  8898  018F  0020               	movlb	0	; select bank0
  8899  0190  1E8E               	btfss	14,5	;volatile
  8900  0191  0008               	return
  8901                           
  8902                           ;GPports.c: 552: GP3REG = 1;
  8903  0192  3001               	movlw	1
  8904  0193  00C7               	movwf	_GP3REG	;volatile
  8905                           
  8906                           ;GPports.c: 553: Int2StatusUpdate(E_GP3POS);
  8907  0194  3010               	movlw	16
  8908  0195  21B6  3180         	fcall	_Int2StatusUpdate
  8909                           
  8910                           ;GPports.c: 554: if ((GP3CONF & 0x08) != 0) {
  8911  0197  1DCF               	btfss	_GP3CONF,3	;volatile
  8912  0198  299A               	goto	l6799
  8913                           
  8914                           ;GPports.c: 555: SetInterrupt();
  8915  0199  21BC               	fcall	_SetInterrupt
  8916  019A                     l6799:	
  8917                           
  8918                           ;GPports.c: 556: };GPports.c: 557: gp3_fsm = GP_WAITFALL;
  8919  019A  3003               	movlw	3
  8920  019B  0021               	movlb	1	; select bank1
  8921  019C  00AF               	movwf	_gp3_fsm^(0+128)
  8922  019D  0008               	return
  8923  019E                     l1296:	
  8924                           ;GPports.c: 561: case GP_WAITFALL:
  8925                           
  8926                           
  8927                           ;GPports.c: 562: if (PORTCbits.RC5 == 0) {
  8928  019E  0020               	movlb	0	; select bank0
  8929  019F  1A8E               	btfsc	14,5	;volatile
  8930  01A0  0008               	return
  8931                           
  8932                           ;GPports.c: 564: GP3REG = 0;
  8933  01A1  01C7               	clrf	_GP3REG	;volatile
  8934                           
  8935                           ;GPports.c: 565: Int2StatusUpdate(E_GP3NEG);
  8936  01A2  3020               	movlw	32
  8937  01A3  21B6  3180         	fcall	_Int2StatusUpdate
  8938                           
  8939                           ;GPports.c: 566: if ((GP3CONF & 0x10) != 0) {
  8940  01A5  1E4F               	btfss	_GP3CONF,4	;volatile
  8941  01A6  297D               	goto	l6785
  8942                           
  8943                           ;GPports.c: 567: SetInterrupt();
  8944  01A7  21BC  3180         	fcall	_SetInterrupt
  8945  01A9  297D               	goto	l6785
  8946  01AA                     l6813:	
  8947  01AA  0021               	movlb	1	; select bank1
  8948  01AB  082F               	movf	_gp3_fsm^(0+128),w
  8949                           
  8950                           ; Switch size 1, requested type "speed"
  8951                           ; Number of cases is 4, Range of values is 0 to 3
  8952                           ; switch strategies available:
  8953                           ; Name         Instructions Cycles
  8954                           ; direct_byte           14     6 (fixed)
  8955                           ; simple_byte           13     7 (average)
  8956                           ; jumptable            260     6 (fixed)
  8957                           ;	Chosen strategy is direct_byte
  8958  01AC  0084               	movwf	4
  8959  01AD  3004               	movlw	4
  8960  01AE  0204               	subwf	4,w
  8961  01AF  1803               	skipnc
  8962  01B0  0008               	return
  8963  01B1  3188               	movlp	high S7395
  8964  01B2  3504               	lslf	4,w
  8965  01B3  3E50               	addlw	low S7395
  8966  01B4  0082               	movwf	2
  8967  01B5  0008               	return
  8968  01B6                     __end_of_GP3_FSM:	
  8969  01B6                     __ptext33:	
  8970 ;; *************** function _Int2StatusUpdate *****************
  8971 ;; Defined at:
  8972 ;;		line 117 in file "DataVariable.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  stat            1    wreg     enum E79
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  stat            1    1[BANK1 ] enum E79
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, status,0, pclath, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 1F/0
  8983 ;;		On exit  : 1F/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8989 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;Total ram usage:        1 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    8
  8993 ;; This function calls:
  8994 ;;		_EncoderStatusUpdate
  8995 ;; This function is called by:
  8996 ;;		_FadeProcessClear
  8997 ;;		_GP1_FSM
  8998 ;;		_GP2_FSM
  8999 ;;		_GP3_FSM
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           
  9004                           ;psect for function _Int2StatusUpdate
  9005  01B6                     _Int2StatusUpdate:	
  9006                           
  9007                           ;incstack = 0
  9008                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
  9009                           ;Int2StatusUpdate@stat stored from wreg
  9010  01B6  0021               	movlb	1	; select bank1
  9011  01B7  00B7               	movwf	Int2StatusUpdate@stat^(0+128)
  9012                           
  9013                           ;DataVariable.c: 118: I2STATUS |= (uint8_t) stat;
  9014  01B8  0020               	movlb	0	; select bank0
  9015  01B9  04CE               	iorwf	_I2STATUS,f	;volatile
  9016                           
  9017                           ;DataVariable.c: 119: EncoderStatusUpdate(S_INT2);
  9018  01BA  3080               	movlw	128
  9019  01BB  2A62               	ljmp	_EncoderStatusUpdate
  9020  01BC                     __end_of_Int2StatusUpdate:	
  9021  01BC                     __ptext35:	
  9022 ;; *************** function _SetInterrupt *****************
  9023 ;; Defined at:
  9024 ;;		line 56 in file "main.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      void 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0
  9033 ;; Tracked objects:
  9034 ;;		On entry : 1C/0
  9035 ;;		On exit  : 1D/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:    7
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_FadeProcessClear
  9049 ;;		_GP1_FSM
  9050 ;;		_GP2_FSM
  9051 ;;		_GP3_FSM
  9052 ;;		_Encoder_PushButton_FSM
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           
  9057                           ;psect for function _SetInterrupt
  9058  01BC                     _SetInterrupt:	
  9059  01BC                     l6327:	
  9060                           ;incstack = 0
  9061                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
  9062                           
  9063                           
  9064                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
  9065  01BC  0020               	movlb	0	; select bank0
  9066  01BD  0852               	movf	_ESTATUS,w	;volatile
  9067  01BE  0551               	andwf	_INTCONF,w	;volatile
  9068  01BF  1903               	btfsc	3,2
  9069  01C0  0008               	return
  9070                           
  9071                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
  9072  01C1  0022               	movlb	2	; select bank2
  9073  01C2  128D               	bcf	13,5	;volatile
  9074  01C3  0008               	return
  9075  01C4                     __end_of_SetInterrupt:	
  9076  01C4                     __ptext19:	
  9077 ;; *************** function _ADC_GetConversion *****************
  9078 ;; Defined at:
  9079 ;;		line 113 in file "mcc_generated_files/adc.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  channel         1    wreg     enum E6505
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  channel         1    3[BANK1 ] enum E6505
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2    0[BANK1 ] unsigned int 
  9086 ;; Registers used:
  9087 ;;		wreg, status,2, status,0
  9088 ;; Tracked objects:
  9089 ;;		On entry : 1E/1
  9090 ;;		On exit  : 1F/1
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        4 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    7
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		_GP1_FSM
  9104 ;;		_GP2_FSM
  9105 ;;		_GP3_FSM
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _ADC_GetConversion
  9111  01C4                     _ADC_GetConversion:	
  9112                           
  9113                           ;incstack = 0
  9114                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  9115                           ;ADC_GetConversion@channel stored from wreg
  9116  01C4  0021               	movlb	1	; select bank1
  9117  01C5  00B9               	movwf	ADC_GetConversion@channel^(0+128)
  9118                           
  9119                           ;adc.c: 116: ADCON0bits.CHS = channel;
  9120  01C6  00B8               	movwf	??_ADC_GetConversion^(0+128)
  9121  01C7  0DB8               	rlf	??_ADC_GetConversion^(0+128),f
  9122  01C8  0DB8               	rlf	??_ADC_GetConversion^(0+128),f
  9123  01C9  081D               	movf	29,w	;volatile
  9124  01CA  0638               	xorwf	??_ADC_GetConversion^(0+128),w
  9125  01CB  3903               	andlw	-253
  9126  01CC  0638               	xorwf	??_ADC_GetConversion^(0+128),w
  9127  01CD  009D               	movwf	29	;volatile
  9128                           
  9129                           ;adc.c: 119: ADCON0bits.ADON = 1;
  9130  01CE  141D               	bsf	29,0	;volatile
  9131                           
  9132                           ;adc.c: 122: _delay((unsigned long)((5)*(32000000/4000000.0)));
  9133  01CF  300D               	movlw	13
  9134  01D0                     u4927:	
  9135  01D0  0B89               	decfsz	9,f
  9136  01D1  29D0               	goto	u4927
  9137  01D2  0000               	nop
  9138                           
  9139                           ;adc.c: 125: ADCON0bits.ADGO = 1;
  9140  01D3  0021               	movlb	1	; select bank1
  9141  01D4  149D               	bsf	29,1	;volatile
  9142  01D5                     l373:	
  9143                           ;adc.c: 129: {
  9144                           
  9145  01D5  189D               	btfsc	29,1	;volatile
  9146  01D6  29D5               	goto	l373
  9147                           
  9148                           ;adc.c: 130: };adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9149  01D7  081C               	movf	28,w	;volatile
  9150  01D8  00B7               	movwf	(?_ADC_GetConversion+1)^(0+128)
  9151  01D9  01B6               	clrf	?_ADC_GetConversion^(0+128)
  9152  01DA  081B               	movf	27,w	;volatile
  9153  01DB  07B6               	addwf	?_ADC_GetConversion^(0+128),f
  9154  01DC  1803               	skipnc
  9155  01DD  0AB7               	incf	(?_ADC_GetConversion+1)^(0+128),f
  9156  01DE  0008               	return
  9157  01DF                     __end_of_ADC_GetConversion:	
  9158  01DF                     __ptext18:	
  9159 ;; *************** function _ADC_Initialize *****************
  9160 ;; Defined at:
  9161 ;;		line 65 in file "mcc_generated_files/adc.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      void 
  9168 ;; Registers used:
  9169 ;;		wreg, status,2
  9170 ;; Tracked objects:
  9171 ;;		On entry : 1F/1
  9172 ;;		On exit  : 1F/1
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;Total ram usage:        0 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; Hardware stack levels required when called:    7
  9182 ;; This function calls:
  9183 ;;		Nothing
  9184 ;; This function is called by:
  9185 ;;		_GP1_FSM
  9186 ;;		_GP2_FSM
  9187 ;;		_GP3_FSM
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           
  9192                           ;psect for function _ADC_Initialize
  9193  01DF                     _ADC_Initialize:	
  9194  01DF                     l6345:	
  9195                           ;incstack = 0
  9196                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9197                           
  9198                           
  9199                           ;adc.c: 70: ADCON0 = 0x01;
  9200  01DF  3001               	movlw	1
  9201  01E0  009D               	movwf	29	;volatile
  9202                           
  9203                           ;adc.c: 73: ADCON1 = 0xE0;
  9204  01E1  30E0               	movlw	224
  9205  01E2  009E               	movwf	30	;volatile
  9206                           
  9207                           ;adc.c: 76: ADACT = 0x00;
  9208  01E3  019F               	clrf	31	;volatile
  9209                           
  9210                           ;adc.c: 79: ADRESL = 0x00;
  9211  01E4  019B               	clrf	27	;volatile
  9212                           
  9213                           ;adc.c: 82: ADRESH = 0x00;
  9214  01E5  019C               	clrf	28	;volatile
  9215  01E6  0008               	return
  9216  01E7                     __end_of_ADC_Initialize:	
  9217  01E7                     __ptext34:	
  9218 ;; *************** function _Encoder_PushButton_FSM *****************
  9219 ;; Defined at:
  9220 ;;		line 277 in file "Encoder.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  1    wreg      void 
  9227 ;; Registers used:
  9228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 1C/1
  9231 ;;		On exit  : 1C/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;Total ram usage:        0 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    9
  9241 ;; This function calls:
  9242 ;;		_EncoderStatusUpdate
  9243 ;;		_EncoderSwitch_GetValueFiltered
  9244 ;;		_SetInterrupt
  9245 ;; This function is called by:
  9246 ;;		_Encoder_FSM
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           
  9251                           ;psect for function _Encoder_PushButton_FSM
  9252  01E7                     _Encoder_PushButton_FSM:	
  9253  01E7                     l6905:	
  9254                           ;incstack = 0
  9255                           ; Regs used in _Encoder_PushButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9256                           
  9257                           
  9258                           ;Encoder.c: 279: if (double_push_cnt > DoublePush) {
  9259  01E7  0021               	movlb	1	; select bank1
  9260  01E8  0823               	movf	(_double_push_cnt+1)^(0+128),w
  9261  01E9  0225               	subwf	(_DoublePush+1)^(0+128),w	;volatile
  9262  01EA  1D03               	skipz
  9263  01EB  29EE               	goto	u4815
  9264  01EC  0822               	movf	_double_push_cnt^(0+128),w
  9265  01ED  0224               	subwf	_DoublePush^(0+128),w	;volatile
  9266  01EE                     u4815:	
  9267  01EE  1803               	skipnc
  9268  01EF  29F3               	goto	l6909
  9269                           
  9270                           ;Encoder.c: 280: pb_fsm = ENCODER_TIMEOUT;
  9271  01F0  3004               	movlw	4
  9272  01F1  00AE               	movwf	_pb_fsm^(0+128)
  9273                           
  9274                           ;Encoder.c: 281: } else {
  9275  01F2  2A3B               	goto	l6959
  9276  01F3                     l6909:	
  9277                           
  9278                           ;Encoder.c: 282: double_push_cnt++;
  9279  01F3  0AA2               	incf	_double_push_cnt^(0+128),f
  9280  01F4  1903               	skipnz
  9281  01F5  0AA3               	incf	(_double_push_cnt+1)^(0+128),f
  9282  01F6  2A3B               	goto	l6959
  9283  01F7                     l6911:	
  9284                           
  9285                           ;Encoder.c: 287: double_push_cnt = 0;
  9286  01F7  01A2               	clrf	_double_push_cnt^(0+128)
  9287  01F8  01A3               	clrf	(_double_push_cnt+1)^(0+128)
  9288                           
  9289                           ;Encoder.c: 288: if (EncoderSwitch_GetValueFiltered() == 1) {
  9290  01F9  2246  3180         	fcall	_EncoderSwitch_GetValueFiltered
  9291  01FB  3A01               	xorlw	1
  9292  01FC  1D03               	skipz
  9293  01FD  0008               	return
  9294                           
  9295                           ;Encoder.c: 289: pb_fsm = ENCODER_WAITRELEASE;
  9296  01FE  01AE               	clrf	_pb_fsm^(0+128)
  9297  01FF  0AAE               	incf	_pb_fsm^(0+128),f
  9298  0200  0008               	return
  9299  0201                     l6917:	
  9300                           
  9301                           ;Encoder.c: 295: if (EncoderSwitch_GetValueFiltered() == 0) {
  9302  0201  2246  3180         	fcall	_EncoderSwitch_GetValueFiltered
  9303  0203  3A00               	xorlw	0
  9304  0204  1D03               	skipz
  9305  0205  0008               	return
  9306                           
  9307                           ;Encoder.c: 296: pb_fsm = ENCODER_WAITDOUBLEPUSH;
  9308  0206  3002               	movlw	2
  9309  0207  00AE               	movwf	_pb_fsm^(0+128)
  9310  0208  0008               	return
  9311  0209                     l6921:	
  9312                           
  9313                           ;Encoder.c: 301: if (EncoderSwitch_GetValueFiltered() == 1) {
  9314  0209  2246  3180         	fcall	_EncoderSwitch_GetValueFiltered
  9315  020B  3A01               	xorlw	1
  9316  020C  1D03               	skipz
  9317  020D  0008               	return
  9318                           
  9319                           ;Encoder.c: 302: pb_fsm = ENCODER_WAITDOUBLERELEASED;
  9320  020E  3003               	movlw	3
  9321  020F  00AE               	movwf	_pb_fsm^(0+128)
  9322  0210  0008               	return
  9323  0211                     l6925:	
  9324                           
  9325                           ;Encoder.c: 307: if (EncoderSwitch_GetValueFiltered() == 0) {
  9326  0211  2246  3180         	fcall	_EncoderSwitch_GetValueFiltered
  9327  0213  3A00               	xorlw	0
  9328  0214  1D03               	skipz
  9329  0215  0008               	return
  9330  0216  3004               	movlw	4
  9331                           
  9332                           ;Encoder.c: 308: double_push_cnt = 0;
  9333  0217  01A2               	clrf	_double_push_cnt^(0+128)
  9334  0218  01A3               	clrf	(_double_push_cnt+1)^(0+128)
  9335                           
  9336                           ;Encoder.c: 309: pb_fsm = ENCODER_WAITPUSH;
  9337  0219  01AE               	clrf	_pb_fsm^(0+128)
  9338                           
  9339                           ;Encoder.c: 310: EncoderStatusUpdate(S_PUSHD);
  9340  021A  2262  3180         	fcall	_EncoderStatusUpdate
  9341  021C  2A1F               	goto	l6931
  9342  021D                     l6939:	
  9343                           
  9344                           ;Encoder.c: 319: pb_fsm = ENCODER_PUSHRESET;
  9345  021D  3005               	movlw	5
  9346  021E  00AE               	movwf	_pb_fsm^(0+128)
  9347  021F                     l6931:	
  9348                           ;Encoder.c: 320: } else {
  9349                           
  9350                           
  9351                           ;Encoder.c: 311: SetInterrupt();
  9352  021F  29BC               	ljmp	l6327
  9353  0220                     l6933:	
  9354  0220  3002               	movlw	2
  9355                           
  9356                           ;Encoder.c: 316: double_push_cnt = 0;
  9357  0221  01A2               	clrf	_double_push_cnt^(0+128)
  9358  0222  01A3               	clrf	(_double_push_cnt+1)^(0+128)
  9359                           
  9360                           ;Encoder.c: 317: EncoderStatusUpdate(S_PUSHP);
  9361  0223  2262  3180         	fcall	_EncoderStatusUpdate
  9362                           
  9363                           ;Encoder.c: 318: if (EncoderSwitch_GetValueFiltered() == 1) {
  9364  0225  2246  3180         	fcall	_EncoderSwitch_GetValueFiltered
  9365  0227  3A01               	xorlw	1
  9366  0228  1903               	btfsc	3,2
  9367  0229  2A1D               	goto	l6939
  9368  022A  3001               	movlw	1
  9369                           
  9370                           ;Encoder.c: 321: pb_fsm = ENCODER_WAITPUSH;
  9371  022B  01AE               	clrf	_pb_fsm^(0+128)
  9372                           
  9373                           ;Encoder.c: 322: EncoderStatusUpdate(S_PUSHR);
  9374  022C  2262  3180         	fcall	_EncoderStatusUpdate
  9375  022E  2A1F               	goto	l6931
  9376  022F                     l6947:	
  9377                           
  9378                           ;Encoder.c: 328: double_push_cnt = 0;
  9379  022F  01A2               	clrf	_double_push_cnt^(0+128)
  9380  0230  01A3               	clrf	(_double_push_cnt+1)^(0+128)
  9381                           
  9382                           ;Encoder.c: 329: if (EncoderSwitch_GetValueFiltered() == 0) {
  9383  0231  2246  3180         	fcall	_EncoderSwitch_GetValueFiltered
  9384  0233  3A00               	xorlw	0
  9385  0234  1D03               	skipz
  9386  0235  0008               	return
  9387  0236  3001               	movlw	1
  9388                           
  9389                           ;Encoder.c: 331: pb_fsm = ENCODER_WAITPUSH;
  9390  0237  01AE               	clrf	_pb_fsm^(0+128)
  9391                           
  9392                           ;Encoder.c: 332: EncoderStatusUpdate(S_PUSHR);
  9393  0238  2262  3180         	fcall	_EncoderStatusUpdate
  9394  023A  2A1F               	goto	l6931
  9395  023B                     l6959:	
  9396  023B  082E               	movf	_pb_fsm^(0+128),w
  9397                           
  9398                           ; Switch size 1, requested type "speed"
  9399                           ; Number of cases is 6, Range of values is 0 to 5
  9400                           ; switch strategies available:
  9401                           ; Name         Instructions Cycles
  9402                           ; direct_byte           18     6 (fixed)
  9403                           ; simple_byte           19    10 (average)
  9404                           ; jumptable            260     6 (fixed)
  9405                           ;	Chosen strategy is direct_byte
  9406  023C  0084               	movwf	4
  9407  023D  3006               	movlw	6
  9408  023E  0204               	subwf	4,w
  9409  023F  1803               	skipnc
  9410  0240  0008               	return
  9411  0241  3188               	movlp	high S7401
  9412  0242  3504               	lslf	4,w
  9413  0243  3E44               	addlw	low S7401
  9414  0244  0082               	movwf	2
  9415  0245  0008               	return
  9416  0246                     __end_of_Encoder_PushButton_FSM:	
  9417  0246                     __ptext36:	
  9418 ;; *************** function _EncoderSwitch_GetValueFiltered *****************
  9419 ;; Defined at:
  9420 ;;		line 40 in file "Encoder.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      unsigned char 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2, status,0, pclath, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 1C/1
  9431 ;;		On exit  : 1F/1
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;Total ram usage:        0 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    8
  9441 ;; This function calls:
  9442 ;;		_EncoderSwitch_GetValue
  9443 ;; This function is called by:
  9444 ;;		_Encoder_PushButton_FSM
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           
  9449                           ;psect for function _EncoderSwitch_GetValueFiltered
  9450  0246                     _EncoderSwitch_GetValueFiltered:	
  9451                           
  9452                           ;Encoder.c: 41: static bool pb_status = 0;;Encoder.c: 43: if (EncoderSwitch_GetValue() =
      +                          = 1) {
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _EncoderSwitch_GetValueFiltered: [wreg+status,2+status,0+pclath+cstack]
  9456  0246  2267  3180         	fcall	_EncoderSwitch_GetValue
  9457  0248  3A01               	xorlw	1
  9458  0249  1D03               	skipz
  9459  024A  2A57               	goto	l6397
  9460                           
  9461                           ;Encoder.c: 44: if (pb_cnt++ >= 50) {
  9462  024B  0021               	movlb	1	; select bank1
  9463  024C  082D               	movf	_pb_cnt^(0+128),w
  9464  024D  0AAD               	incf	_pb_cnt^(0+128),f
  9465  024E  3A80               	xorlw	128
  9466  024F  3E4E               	addlw	-178
  9467  0250  1C03               	skipc
  9468  0251  2A60               	goto	l6401
  9469                           
  9470                           ;Encoder.c: 45: pb_cnt = 50;
  9471  0252  3032               	movlw	50
  9472  0253  00AD               	movwf	_pb_cnt^(0+128)
  9473                           
  9474                           ;Encoder.c: 46: pb_status = 1;
  9475  0254  01AA               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
  9476  0255  0AAA               	incf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),f
  9477  0256  2A60               	goto	l6401
  9478  0257                     l6397:	
  9479                           
  9480                           ;Encoder.c: 49: if (pb_cnt-- <= 0) {
  9481  0257  0021               	movlb	1	; select bank1
  9482  0258  082D               	movf	_pb_cnt^(0+128),w
  9483  0259  03AD               	decf	_pb_cnt^(0+128),f
  9484  025A  3A80               	xorlw	128
  9485  025B  3E7F               	addlw	-129
  9486  025C  1803               	skipnc
  9487  025D  2A60               	goto	l6401
  9488                           
  9489                           ;Encoder.c: 50: pb_cnt = 0;
  9490  025E  01AD               	clrf	_pb_cnt^(0+128)
  9491                           
  9492                           ;Encoder.c: 51: pb_status = 0;
  9493  025F  01AA               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
  9494  0260                     l6401:	
  9495                           
  9496                           ;Encoder.c: 52: };Encoder.c: 53: };Encoder.c: 55: return pb_status;
  9497  0260  082A               	movf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),w
  9498  0261  0008               	return
  9499  0262                     __end_of_EncoderSwitch_GetValueFiltered:	
  9500  0262                     __ptext38:	
  9501 ;; *************** function _EncoderStatusUpdate *****************
  9502 ;; Defined at:
  9503 ;;		line 109 in file "DataVariable.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  stat            1    wreg     enum E69
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  stat            1    0[BANK1 ] enum E69
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0
  9512 ;; Tracked objects:
  9513 ;;		On entry : 1E/0
  9514 ;;		On exit  : 1F/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9521 ;;Total ram usage:        1 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    7
  9524 ;; This function calls:
  9525 ;;		Nothing
  9526 ;; This function is called by:
  9527 ;;		_Int2StatusUpdate
  9528 ;;		_Encoder_PushButton_FSM
  9529 ;; This function uses a non-reentrant model
  9530 ;;
  9531                           
  9532                           
  9533                           ;psect for function _EncoderStatusUpdate
  9534  0262                     _EncoderStatusUpdate:	
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _EncoderStatusUpdate: [wreg+status,2+status,0]
  9538                           ;EncoderStatusUpdate@stat stored from wreg
  9539  0262  0021               	movlb	1	; select bank1
  9540  0263  00B6               	movwf	EncoderStatusUpdate@stat^(0+128)
  9541                           
  9542                           ;DataVariable.c: 110: ESTATUS |= (uint8_t) stat;
  9543  0264  0020               	movlb	0	; select bank0
  9544  0265  04D2               	iorwf	_ESTATUS,f	;volatile
  9545  0266  0008               	return
  9546  0267                     __end_of_EncoderStatusUpdate:	
  9547  0267                     __ptext37:	
  9548 ;; *************** function _EncoderSwitch_GetValue *****************
  9549 ;; Defined at:
  9550 ;;		line 27 in file "Encoder.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;		None
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      unsigned char 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0
  9559 ;; Tracked objects:
  9560 ;;		On entry : 1C/1
  9561 ;;		On exit  : 1F/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;Total ram usage:        0 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    7
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_EncoderSwitch_GetValueFiltered
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           
  9579                           ;psect for function _EncoderSwitch_GetValue
  9580  0267                     _EncoderSwitch_GetValue:	
  9581                           
  9582                           ;Encoder.c: 28: if (C_ETYPE == 1) {
  9583                           
  9584                           ;incstack = 0
  9585                           ; Regs used in _EncoderSwitch_GetValue: [wreg+status,2+status,0]
  9586  0267  0020               	movlb	0	; select bank0
  9587  0268  0B40               	decfsz	_C_ETYPE,w	;volatile
  9588  0269  2A6E               	goto	l6341
  9589                           
  9590                           ;Encoder.c: 29: return (PORTCbits.RC2);
  9591  026A  0C0E               	rrf	14,w	;volatile
  9592  026B  0C89               	rrf	9,f
  9593  026C  3901               	andlw	1
  9594  026D  0008               	return
  9595  026E                     l6341:	
  9596                           
  9597                           ;Encoder.c: 31: return ((bool)!PORTCbits.RC4);
  9598  026E  1003               	clrc
  9599  026F  1E0E               	btfss	14,4	;volatile
  9600  0270  1403               	setc
  9601  0271  3000               	movlw	0
  9602  0272  3D09               	addwfc	9,w
  9603  0273  0008               	return
  9604  0274                     __end_of_EncoderSwitch_GetValue:	
  9605  0274                     __ptext27:	
  9606 ;; *************** function _FADE_LEDS *****************
  9607 ;; Defined at:
  9608 ;;		line 191 in file "Encoder.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;		None
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;		None
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, status,2, status,0, pclath, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 1F/1
  9619 ;;		On exit  : 1C/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;Total ram usage:        0 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:   10
  9629 ;; This function calls:
  9630 ;;		_FadeProcessClear
  9631 ;;		_FadeProcessSet
  9632 ;;		_RGBEncoder_BLED
  9633 ;;		_RGBEncoder_GLED
  9634 ;;		_RGBEncoder_RLED
  9635 ;; This function is called by:
  9636 ;;		_Encoder_FSM
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           
  9641                           ;psect for function _FADE_LEDS
  9642  0274                     _FADE_LEDS:	
  9643                           
  9644                           ;Encoder.c: 193: if (C_ETYPE == 0)
  9645                           
  9646                           ;incstack = 0
  9647                           ; Regs used in _FADE_LEDS: [wreg+status,2+status,0+pclath+cstack]
  9648  0274  0020               	movlb	0	; select bank0
  9649  0275  0840               	movf	_C_ETYPE,w	;volatile
  9650  0276  1903               	btfsc	3,2
  9651  0277  0008               	return
  9652                           
  9653                           ;Encoder.c: 196: if (FADERGB == 0) {
  9654  0278  0844               	movf	_FADERGB,w	;volatile
  9655  0279  1D03               	btfss	3,2
  9656  027A  2A94               	goto	l6845
  9657                           
  9658                           ;Encoder.c: 197: if (temp_red != RLED) {
  9659  027B  0834               	movf	_temp_red,w
  9660  027C  064C               	xorwf	_RLED,w	;volatile
  9661  027D  1903               	skipnz
  9662  027E  2A83               	goto	l6831
  9663                           
  9664                           ;Encoder.c: 198: temp_red = RLED;
  9665  027F  084C               	movf	_RLED,w	;volatile
  9666  0280  00B4               	movwf	_temp_red
  9667                           
  9668                           ;Encoder.c: 199: RGBEncoder_RLED(temp_red);
  9669  0281  230B  3180         	fcall	_RGBEncoder_RLED
  9670  0283                     l6831:	
  9671                           
  9672                           ;Encoder.c: 200: };Encoder.c: 202: if (temp_green != GLED) {
  9673  0283  0020               	movlb	0	; select bank0
  9674  0284  0833               	movf	_temp_green,w
  9675  0285  064B               	xorwf	_GLED,w	;volatile
  9676  0286  1903               	skipnz
  9677  0287  2A8C               	goto	l6837
  9678                           
  9679                           ;Encoder.c: 203: temp_green = GLED;
  9680  0288  084B               	movf	_GLED,w	;volatile
  9681  0289  00B3               	movwf	_temp_green
  9682                           
  9683                           ;Encoder.c: 204: RGBEncoder_GLED(temp_green);
  9684  028A  22FB  3180         	fcall	_RGBEncoder_GLED
  9685  028C                     l6837:	
  9686                           
  9687                           ;Encoder.c: 205: };Encoder.c: 207: if (temp_blu != BLED) {
  9688  028C  0020               	movlb	0	; select bank0
  9689  028D  0832               	movf	_temp_blu,w
  9690  028E  064A               	xorwf	_BLED,w	;volatile
  9691  028F  1903               	skipnz
  9692  0290  0008               	return
  9693                           
  9694                           ;Encoder.c: 208: temp_blu = BLED;
  9695  0291  084A               	movf	_BLED,w	;volatile
  9696  0292  00B2               	movwf	_temp_blu
  9697                           
  9698                           ;Encoder.c: 209: RGBEncoder_BLED(temp_blu);
  9699  0293  2B1B               	ljmp	_RGBEncoder_BLED
  9700  0294                     l6845:	
  9701                           
  9702                           ;Encoder.c: 212: };Encoder.c: 213: fade_cnt++;
  9703  0294  0021               	movlb	1	; select bank1
  9704  0295  0AAC               	incf	_fade_cnt^(0+128),f
  9705                           
  9706                           ;Encoder.c: 214: if (fade_cnt >= FADERGB) {
  9707  0296  0020               	movlb	0	; select bank0
  9708  0297  0844               	movf	_FADERGB,w	;volatile
  9709  0298  0021               	movlb	1	; select bank1
  9710  0299  022C               	subwf	_fade_cnt^(0+128),w
  9711  029A  1C03               	skipc
  9712  029B  0008               	return
  9713                           
  9714                           ;Encoder.c: 215: fade_cnt = 0;
  9715  029C  01AC               	clrf	_fade_cnt^(0+128)
  9716                           
  9717                           ;Encoder.c: 217: if (temp_red != RLED) {
  9718  029D  0020               	movlb	0	; select bank0
  9719  029E  0834               	movf	_temp_red,w
  9720  029F  064C               	xorwf	_RLED,w	;volatile
  9721  02A0  1903               	skipnz
  9722  02A1  2AB9               	goto	l6869
  9723                           
  9724                           ;Encoder.c: 219: if (temp_red < RLED) {
  9725  02A2  084C               	movf	_RLED,w	;volatile
  9726  02A3  0234               	subwf	_temp_red,w
  9727  02A4  1803               	skipnc
  9728  02A5  2AA7               	goto	l6857
  9729                           
  9730                           ;Encoder.c: 220: temp_red++;
  9731  02A6  0AB4               	incf	_temp_red,f
  9732  02A7                     l6857:	
  9733                           
  9734                           ;Encoder.c: 221: };Encoder.c: 222: if (temp_red > RLED) {
  9735  02A7  0834               	movf	_temp_red,w
  9736  02A8  024C               	subwf	_RLED,w	;volatile
  9737  02A9  1C03               	btfss	3,0
  9738                           
  9739                           ;Encoder.c: 223: temp_red--;
  9740  02AA  03B4               	decf	_temp_red,f
  9741                           
  9742                           ;Encoder.c: 224: };Encoder.c: 226: RGBEncoder_RLED(temp_red);
  9743  02AB  0834               	movf	_temp_red,w
  9744  02AC  230B  3180         	fcall	_RGBEncoder_RLED
  9745                           
  9746                           ;Encoder.c: 227: if (temp_red == RLED) {
  9747  02AE  0020               	movlb	0	; select bank0
  9748  02AF  0834               	movf	_temp_red,w
  9749  02B0  064C               	xorwf	_RLED,w	;volatile
  9750                           
  9751                           ;Encoder.c: 228: FadeProcessClear(F_FER);
  9752  02B1  3001               	movlw	1
  9753  02B2  1D03               	skipz
  9754  02B3  2AB7               	goto	L4
  9755  02B4  22ED  3180         	fcall	_FadeProcessClear
  9756                           
  9757                           ;Encoder.c: 229: } else {
  9758  02B6  2AB9               	goto	l6869
  9759  02B7                     L4:	
  9760                           ;Encoder.c: 230: FadeProcessSet(F_FER);
  9761                           
  9762  02B7  22F6  3180         	fcall	_FadeProcessSet
  9763  02B9                     l6869:	
  9764                           
  9765                           ;Encoder.c: 231: };Encoder.c: 232: };Encoder.c: 234: if (temp_green != GLED) {
  9766  02B9  0020               	movlb	0	; select bank0
  9767  02BA  0833               	movf	_temp_green,w
  9768  02BB  064B               	xorwf	_GLED,w	;volatile
  9769  02BC  1903               	skipnz
  9770  02BD  2AD5               	goto	l6887
  9771                           
  9772                           ;Encoder.c: 236: if (temp_green < GLED) {
  9773  02BE  084B               	movf	_GLED,w	;volatile
  9774  02BF  0233               	subwf	_temp_green,w
  9775  02C0  1803               	skipnc
  9776  02C1  2AC3               	goto	l6875
  9777                           
  9778                           ;Encoder.c: 237: temp_green++;
  9779  02C2  0AB3               	incf	_temp_green,f
  9780  02C3                     l6875:	
  9781                           
  9782                           ;Encoder.c: 238: };Encoder.c: 239: if (temp_green > GLED) {
  9783  02C3  0833               	movf	_temp_green,w
  9784  02C4  024B               	subwf	_GLED,w	;volatile
  9785  02C5  1C03               	btfss	3,0
  9786                           
  9787                           ;Encoder.c: 240: temp_green--;
  9788  02C6  03B3               	decf	_temp_green,f
  9789                           
  9790                           ;Encoder.c: 241: };Encoder.c: 243: RGBEncoder_GLED(temp_green);
  9791  02C7  0833               	movf	_temp_green,w
  9792  02C8  22FB  3180         	fcall	_RGBEncoder_GLED
  9793                           
  9794                           ;Encoder.c: 244: if (temp_green == GLED) {
  9795  02CA  0020               	movlb	0	; select bank0
  9796  02CB  0833               	movf	_temp_green,w
  9797  02CC  064B               	xorwf	_GLED,w	;volatile
  9798                           
  9799                           ;Encoder.c: 245: FadeProcessClear(F_FEG);
  9800  02CD  3002               	movlw	2
  9801  02CE  1D03               	skipz
  9802  02CF  2AD3               	goto	L5
  9803  02D0  22ED  3180         	fcall	_FadeProcessClear
  9804                           
  9805                           ;Encoder.c: 246: } else {
  9806  02D2  2AD5               	goto	l6887
  9807  02D3                     L5:	
  9808                           ;Encoder.c: 247: FadeProcessSet(F_FEG);
  9809                           
  9810  02D3  22F6  3180         	fcall	_FadeProcessSet
  9811  02D5                     l6887:	
  9812                           
  9813                           ;Encoder.c: 249: };Encoder.c: 250: };Encoder.c: 253: if (temp_blu != BLED) {
  9814  02D5  0020               	movlb	0	; select bank0
  9815  02D6  0832               	movf	_temp_blu,w
  9816  02D7  064A               	xorwf	_BLED,w	;volatile
  9817  02D8  1903               	skipnz
  9818  02D9  0008               	return
  9819                           
  9820                           ;Encoder.c: 255: if (temp_blu < BLED) {
  9821  02DA  084A               	movf	_BLED,w	;volatile
  9822  02DB  0232               	subwf	_temp_blu,w
  9823  02DC  1C03               	btfss	3,0
  9824                           
  9825                           ;Encoder.c: 256: temp_blu++;
  9826  02DD  0AB2               	incf	_temp_blu,f
  9827                           
  9828                           ;Encoder.c: 257: };Encoder.c: 258: if (temp_blu > BLED) {
  9829  02DE  0832               	movf	_temp_blu,w
  9830  02DF  024A               	subwf	_BLED,w	;volatile
  9831  02E0  1C03               	btfss	3,0
  9832                           
  9833                           ;Encoder.c: 259: temp_blu--;
  9834  02E1  03B2               	decf	_temp_blu,f
  9835                           
  9836                           ;Encoder.c: 260: };Encoder.c: 262: RGBEncoder_BLED(temp_blu);
  9837  02E2  0832               	movf	_temp_blu,w
  9838  02E3  231B  3180         	fcall	_RGBEncoder_BLED
  9839                           
  9840                           ;Encoder.c: 263: if (temp_blu == BLED) {
  9841  02E5  0020               	movlb	0	; select bank0
  9842  02E6  0832               	movf	_temp_blu,w
  9843  02E7  064A               	xorwf	_BLED,w	;volatile
  9844                           
  9845                           ;Encoder.c: 264: FadeProcessClear(F_FEB);
  9846  02E8  3004               	movlw	4
  9847  02E9  1D03               	skipz
  9848  02EA  2AEC               	goto	L6
  9849  02EB  2AED               	ljmp	_FadeProcessClear
  9850  02EC                     L6:	
  9851                           ;Encoder.c: 267: FadeProcessSet(F_FEB);
  9852                           
  9853                           ;Encoder.c: 265: } else {
  9854                           
  9855  02EC  2AF6               	ljmp	_FadeProcessSet
  9856  02ED                     __end_of_FADE_LEDS:	
  9857  02ED                     __ptext32:	
  9858 ;; *************** function _FadeProcessClear *****************
  9859 ;; Defined at:
  9860 ;;		line 150 in file "DataVariable.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  stat            1    wreg     enum E88
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  stat            1    2[BANK1 ] enum E88
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2, status,0, pclath, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 1F/0
  9871 ;;		On exit  : 1D/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9878 ;;Total ram usage:        1 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    9
  9881 ;; This function calls:
  9882 ;;		_Int2StatusUpdate
  9883 ;;		_SetInterrupt
  9884 ;; This function is called by:
  9885 ;;		_FADE_GP1
  9886 ;;		_FADE_GP2
  9887 ;;		_FADE_GP3
  9888 ;;		_FADE_LEDS
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           
  9893                           ;psect for function _FadeProcessClear
  9894  02ED                     _FadeProcessClear:	
  9895                           
  9896                           ;incstack = 0
  9897                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
  9898                           ;FadeProcessClear@stat stored from wreg
  9899  02ED  0021               	movlb	1	; select bank1
  9900  02EE  00B8               	movwf	FadeProcessClear@stat^(0+128)
  9901                           
  9902                           ;DataVariable.c: 151: FSTATUS &= ~(uint8_t) stat;
  9903  02EF  0938               	comf	FadeProcessClear@stat^(0+128),w
  9904  02F0  0020               	movlb	0	; select bank0
  9905  02F1  05CD               	andwf	_FSTATUS,f	;volatile
  9906                           
  9907                           ;DataVariable.c: 152: Int2StatusUpdate(E_GPFADE);
  9908  02F2  3040               	movlw	64
  9909  02F3  21B6  3180         	fcall	_Int2StatusUpdate
  9910                           
  9911                           ;DataVariable.c: 154: SetInterrupt();
  9912  02F5  29BC               	ljmp	l6327
  9913  02F6                     __end_of_FadeProcessClear:	
  9914  02F6                     __ptext31:	
  9915 ;; *************** function _FadeProcessSet *****************
  9916 ;; Defined at:
  9917 ;;		line 141 in file "DataVariable.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  stat            1    wreg     enum E88
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  stat            1    0[BANK1 ] enum E88
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1    wreg      void 
  9924 ;; Registers used:
  9925 ;;		wreg, status,2, status,0
  9926 ;; Tracked objects:
  9927 ;;		On entry : 1F/0
  9928 ;;		On exit  : 1F/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;Total ram usage:        1 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:    7
  9938 ;; This function calls:
  9939 ;;		Nothing
  9940 ;; This function is called by:
  9941 ;;		_FADE_GP1
  9942 ;;		_FADE_GP2
  9943 ;;		_FADE_GP3
  9944 ;;		_FADE_LEDS
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948                           
  9949                           ;psect for function _FadeProcessSet
  9950  02F6                     _FadeProcessSet:	
  9951                           
  9952                           ;incstack = 0
  9953                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
  9954                           ;FadeProcessSet@stat stored from wreg
  9955  02F6  0021               	movlb	1	; select bank1
  9956  02F7  00B6               	movwf	FadeProcessSet@stat^(0+128)
  9957                           
  9958                           ;DataVariable.c: 142: FSTATUS |= (uint8_t) stat;
  9959  02F8  0020               	movlb	0	; select bank0
  9960  02F9  04CD               	iorwf	_FSTATUS,f	;volatile
  9961  02FA  0008               	return
  9962  02FB                     __end_of_FadeProcessSet:	
  9963  02FB                     __ptext29:	
  9964 ;; *************** function _RGBEncoder_GLED *****************
  9965 ;; Defined at:
  9966 ;;		line 160 in file "Encoder.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  duty            1    wreg     unsigned char 
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;  duty            1    0[BANK1 ] unsigned char 
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      void 
  9973 ;; Registers used:
  9974 ;;		wreg, status,2, status,0
  9975 ;; Tracked objects:
  9976 ;;		On entry : 1F/0
  9977 ;;		On exit  : 1F/1
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9984 ;;Total ram usage:        1 bytes
  9985 ;; Hardware stack levels used:    1
  9986 ;; Hardware stack levels required when called:    7
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_FADE_LEDS
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           
  9995                           ;psect for function _RGBEncoder_GLED
  9996  02FB                     _RGBEncoder_GLED:	
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _RGBEncoder_GLED: [wreg+status,2+status,0]
 10000                           ;RGBEncoder_GLED@duty stored from wreg
 10001  02FB  0021               	movlb	1	; select bank1
 10002  02FC  00B6               	movwf	RGBEncoder_GLED@duty^(0+128)
 10003                           
 10004                           ;Encoder.c: 162: CCPR2H = 0;
 10005  02FD  0025               	movlb	5	; select bank5
 10006  02FE  0196               	clrf	22	;volatile
 10007                           
 10008                           ;Encoder.c: 163: CCPR2L = 0xFFU - duty;
 10009  02FF  0021               	movlb	1	; select bank1
 10010  0300  0936               	comf	RGBEncoder_GLED@duty^(0+128),w
 10011  0301  0025               	movlb	5	; select bank5
 10012  0302  0095               	movwf	21	;volatile
 10013                           
 10014                           ;Encoder.c: 165: if (duty == 0) {
 10015  0303  0021               	movlb	1	; select bank1
 10016  0304  0836               	movf	RGBEncoder_GLED@duty^(0+128),w
 10017  0305  1D03               	btfss	3,2
 10018  0306  2B09               	goto	l1427
 10019                           
 10020                           ;Encoder.c: 166: do { TRISCbits.TRISC4 = 1; } while(0);
 10021  0307  160E               	bsf	14,4	;volatile
 10022  0308  0008               	return
 10023  0309                     l1427:	
 10024                           ;Encoder.c: 168: do { TRISCbits.TRISC4 = 0; } while(0);
 10025                           
 10026  0309  120E               	bcf	14,4	;volatile
 10027  030A  0008               	return
 10028  030B                     __end_of_RGBEncoder_GLED:	
 10029  030B                     __ptext28:	
 10030 ;; *************** function _RGBEncoder_RLED *****************
 10031 ;; Defined at:
 10032 ;;		line 144 in file "Encoder.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  duty            1    wreg     unsigned char 
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;  duty            1    0[BANK1 ] unsigned char 
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      void 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0
 10041 ;; Tracked objects:
 10042 ;;		On entry : 1F/0
 10043 ;;		On exit  : 1F/1
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;Total ram usage:        1 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    7
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_FADE_LEDS
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           
 10061                           ;psect for function _RGBEncoder_RLED
 10062  030B                     _RGBEncoder_RLED:	
 10063                           
 10064                           ;incstack = 0
 10065                           ; Regs used in _RGBEncoder_RLED: [wreg+status,2+status,0]
 10066                           ;RGBEncoder_RLED@duty stored from wreg
 10067  030B  0021               	movlb	1	; select bank1
 10068  030C  00B6               	movwf	RGBEncoder_RLED@duty^(0+128)
 10069                           
 10070                           ;Encoder.c: 146: CCPR1H = 0x00;
 10071  030D  0025               	movlb	5	; select bank5
 10072  030E  0192               	clrf	18	;volatile
 10073                           
 10074                           ;Encoder.c: 147: CCPR1L = 0xFFU - duty;
 10075  030F  0021               	movlb	1	; select bank1
 10076  0310  0936               	comf	RGBEncoder_RLED@duty^(0+128),w
 10077  0311  0025               	movlb	5	; select bank5
 10078  0312  0091               	movwf	17	;volatile
 10079                           
 10080                           ;Encoder.c: 149: if (duty == 0) {
 10081  0313  0021               	movlb	1	; select bank1
 10082  0314  0836               	movf	RGBEncoder_RLED@duty^(0+128),w
 10083  0315  1D03               	btfss	3,2
 10084  0316  2B19               	goto	l1418
 10085                           
 10086                           ;Encoder.c: 150: do { TRISCbits.TRISC5 = 1; } while(0);
 10087  0317  168E               	bsf	14,5	;volatile
 10088  0318  0008               	return
 10089  0319                     l1418:	
 10090                           ;Encoder.c: 152: do { TRISCbits.TRISC5 = 0; } while(0);
 10091                           
 10092  0319  128E               	bcf	14,5	;volatile
 10093  031A  0008               	return
 10094  031B                     __end_of_RGBEncoder_RLED:	
 10095  031B                     __ptext30:	
 10096 ;; *************** function _RGBEncoder_BLED *****************
 10097 ;; Defined at:
 10098 ;;		line 175 in file "Encoder.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  duty            1    wreg     unsigned char 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;  duty            1    0[BANK1 ] unsigned char 
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		wreg, status,2, status,0
 10107 ;; Tracked objects:
 10108 ;;		On entry : 1F/0
 10109 ;;		On exit  : 1F/1
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;Total ram usage:        1 bytes
 10117 ;; Hardware stack levels used:    1
 10118 ;; Hardware stack levels required when called:    7
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_FADE_LEDS
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           
 10127                           ;psect for function _RGBEncoder_BLED
 10128  031B                     _RGBEncoder_BLED:	
 10129                           
 10130                           ;incstack = 0
 10131                           ; Regs used in _RGBEncoder_BLED: [wreg+status,2+status,0]
 10132                           ;RGBEncoder_BLED@duty stored from wreg
 10133  031B  0021               	movlb	1	; select bank1
 10134  031C  00B6               	movwf	RGBEncoder_BLED@duty^(0+128)
 10135                           
 10136                           ;Encoder.c: 177: CCPR3H = 0;
 10137  031D  0026               	movlb	6	; select bank6
 10138  031E  0192               	clrf	18	;volatile
 10139                           
 10140                           ;Encoder.c: 178: CCPR3L = 0xFFU - duty;
 10141  031F  0021               	movlb	1	; select bank1
 10142  0320  0936               	comf	RGBEncoder_BLED@duty^(0+128),w
 10143  0321  0026               	movlb	6	; select bank6
 10144  0322  0091               	movwf	17	;volatile
 10145                           
 10146                           ;Encoder.c: 180: if (duty == 0) {
 10147  0323  0021               	movlb	1	; select bank1
 10148  0324  0836               	movf	RGBEncoder_BLED@duty^(0+128),w
 10149  0325  1D03               	btfss	3,2
 10150  0326  2B29               	goto	l1436
 10151                           
 10152                           ;Encoder.c: 181: do { TRISCbits.TRISC3 = 1; } while(0);
 10153  0327  158E               	bsf	14,3	;volatile
 10154  0328  0008               	return
 10155  0329                     l1436:	
 10156                           ;Encoder.c: 183: do { TRISCbits.TRISC3 = 0; } while(0);
 10157                           
 10158  0329  118E               	bcf	14,3	;volatile
 10159  032A  0008               	return
 10160  032B                     __end_of_RGBEncoder_BLED:	
 10161  032B                     __ptext24:	
 10162 ;; *************** function _FADE_GP1 *****************
 10163 ;; Defined at:
 10164 ;;		line 69 in file "GPports.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;		None
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      void 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, status,0, pclath, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 1C/1
 10175 ;;		On exit  : 1C/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10182 ;;Total ram usage:        0 bytes
 10183 ;; Hardware stack levels used:    1
 10184 ;; Hardware stack levels required when called:   10
 10185 ;; This function calls:
 10186 ;;		_FadeProcessClear
 10187 ;;		_FadeProcessSet
 10188 ;;		_GPort_GP1_PWM
 10189 ;; This function is called by:
 10190 ;;		_GP_Ports_FSM
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           
 10195                           ;psect for function _FADE_GP1
 10196  032B                     _FADE_GP1:	
 10197                           
 10198                           ;GPports.c: 71: if ((GP1CONF & 0x03) != 0x00)
 10199                           
 10200                           ;incstack = 0
 10201                           ; Regs used in _FADE_GP1: [wreg+status,2+status,0+pclath+cstack]
 10202  032B  087C               	movf	_GP1CONF,w	;volatile
 10203  032C  3903               	andlw	3
 10204  032D  1D03               	btfss	3,2
 10205  032E  0008               	return
 10206                           
 10207                           ;GPports.c: 74: if (FADEGP == 0) {
 10208  032F  0020               	movlb	0	; select bank0
 10209  0330  0843               	movf	_FADEGP,w	;volatile
 10210  0331  1D03               	btfss	3,2
 10211  0332  2B3A               	goto	l6591
 10212                           
 10213                           ;GPports.c: 75: if (temp_gp1 != GP1REG) {
 10214  0333  0838               	movf	_temp_gp1,w
 10215  0334  0649               	xorwf	_GP1REG,w	;volatile
 10216  0335  1903               	skipnz
 10217  0336  0008               	return
 10218                           
 10219                           ;GPports.c: 76: temp_gp1 = GP1REG;
 10220  0337  0849               	movf	_GP1REG,w	;volatile
 10221  0338  00B8               	movwf	_temp_gp1
 10222                           
 10223                           ;GPports.c: 77: GPort_GP1_PWM(temp_gp1);
 10224  0339  2B55               	ljmp	_GPort_GP1_PWM
 10225  033A                     l6591:	
 10226                           
 10227                           ;GPports.c: 80: };GPports.c: 82: if (gp_fade_cnt >= FADEGP) {
 10228  033A  0843               	movf	_FADEGP,w	;volatile
 10229  033B  0235               	subwf	_gp_fade_cnt,w
 10230  033C  1C03               	skipc
 10231  033D  0008               	return
 10232                           
 10233                           ;GPports.c: 83: if (temp_gp1 != GP1REG) {
 10234  033E  0838               	movf	_temp_gp1,w
 10235  033F  0649               	xorwf	_GP1REG,w	;volatile
 10236  0340  1903               	skipnz
 10237  0341  0008               	return
 10238                           
 10239                           ;GPports.c: 85: if (temp_gp1 < GP1REG) {
 10240  0342  0849               	movf	_GP1REG,w	;volatile
 10241  0343  0238               	subwf	_temp_gp1,w
 10242  0344  1C03               	btfss	3,0
 10243                           
 10244                           ;GPports.c: 86: temp_gp1++;
 10245  0345  0AB8               	incf	_temp_gp1,f
 10246                           
 10247                           ;GPports.c: 87: };GPports.c: 88: if (temp_gp1 > GP1REG) {
 10248  0346  0838               	movf	_temp_gp1,w
 10249  0347  0249               	subwf	_GP1REG,w	;volatile
 10250  0348  1C03               	btfss	3,0
 10251                           
 10252                           ;GPports.c: 89: temp_gp1--;
 10253  0349  03B8               	decf	_temp_gp1,f
 10254                           
 10255                           ;GPports.c: 90: };GPports.c: 92: GPort_GP1_PWM(temp_gp1);
 10256  034A  0838               	movf	_temp_gp1,w
 10257  034B  2355  3180         	fcall	_GPort_GP1_PWM
 10258                           
 10259                           ;GPports.c: 93: if (temp_gp1 == GP1REG) {
 10260  034D  0020               	movlb	0	; select bank0
 10261  034E  0838               	movf	_temp_gp1,w
 10262  034F  0649               	xorwf	_GP1REG,w	;volatile
 10263                           
 10264                           ;GPports.c: 94: FadeProcessClear(F_FGP1);
 10265  0350  3008               	movlw	8
 10266  0351  1D03               	skipz
 10267  0352  2B54               	goto	L3
 10268  0353  2AED               	ljmp	_FadeProcessClear
 10269  0354                     L3:	
 10270                           ;GPports.c: 96: FadeProcessSet(F_FGP1);
 10271                           
 10272                           ;GPports.c: 95: } else {
 10273                           
 10274  0354  2AF6               	ljmp	_FadeProcessSet
 10275  0355                     __end_of_FADE_GP1:	
 10276  0355                     __ptext25:	
 10277 ;; *************** function _GPort_GP1_PWM *****************
 10278 ;; Defined at:
 10279 ;;		line 24 in file "GPports.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  duty            1    wreg     unsigned char 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;  duty            1    1[BANK1 ] unsigned char 
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 1F/0
 10290 ;;		On exit  : 1F/1
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;Total ram usage:        2 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    7
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_FADE_GP1
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           
 10308                           ;psect for function _GPort_GP1_PWM
 10309  0355                     _GPort_GP1_PWM:	
 10310                           
 10311                           ;incstack = 0
 10312                           ; Regs used in _GPort_GP1_PWM: [wreg+status,2+status,0]
 10313                           ;GPort_GP1_PWM@duty stored from wreg
 10314  0355  0021               	movlb	1	; select bank1
 10315  0356  00B7               	movwf	GPort_GP1_PWM@duty^(0+128)
 10316                           
 10317                           ;GPports.c: 25: PWM5DCH = (duty & 0xFCU) >> 2U;
 10318  0357  00B6               	movwf	??_GPort_GP1_PWM^(0+128)
 10319  0358  36B6               	lsrf	??_GPort_GP1_PWM^(0+128),f
 10320  0359  36B6               	lsrf	??_GPort_GP1_PWM^(0+128),f
 10321  035A  0836               	movf	??_GPort_GP1_PWM^(0+128),w
 10322  035B  393F               	andlw	63
 10323  035C  002C               	movlb	12	; select bank12
 10324  035D  0098               	movwf	24	;volatile
 10325                           
 10326                           ;GPports.c: 26: PWM5DCL = (duty & 0x03U) << 6U;
 10327  035E  0021               	movlb	1	; select bank1
 10328  035F  0837               	movf	GPort_GP1_PWM@duty^(0+128),w
 10329  0360  3903               	andlw	3
 10330  0361  00B6               	movwf	??_GPort_GP1_PWM^(0+128)
 10331  0362  0CB6               	rrf	??_GPort_GP1_PWM^(0+128),f
 10332  0363  0CB6               	rrf	??_GPort_GP1_PWM^(0+128),f
 10333  0364  0C36               	rrf	??_GPort_GP1_PWM^(0+128),w
 10334  0365  39C0               	andlw	192
 10335  0366  002C               	movlb	12	; select bank12
 10336  0367  0097               	movwf	23	;volatile
 10337                           
 10338                           ;GPports.c: 28: if (duty == 0) {
 10339  0368  0021               	movlb	1	; select bank1
 10340  0369  0837               	movf	GPort_GP1_PWM@duty^(0+128),w
 10341  036A  1D03               	btfss	3,2
 10342  036B  2B6E               	goto	l1016
 10343                           
 10344                           ;GPports.c: 29: do { TRISCbits.TRISC7 = 1; } while(0);
 10345  036C  178E               	bsf	14,7	;volatile
 10346  036D  0008               	return
 10347  036E                     l1016:	
 10348                           ;GPports.c: 31: do { TRISCbits.TRISC7 = 0; } while(0);
 10349                           
 10350  036E  138E               	bcf	14,7	;volatile
 10351  036F  0008               	return
 10352  0370                     __end_of_GPort_GP1_PWM:	
 10353  0370                     __ptext22:	
 10354 ;; *************** function _FADE_GP2 *****************
 10355 ;; Defined at:
 10356 ;;		line 106 in file "GPports.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;		None
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;		None
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  1    wreg      void 
 10363 ;; Registers used:
 10364 ;;		wreg, status,2, status,0, pclath, cstack
 10365 ;; Tracked objects:
 10366 ;;		On entry : 1C/1
 10367 ;;		On exit  : 1C/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;Total ram usage:        0 bytes
 10375 ;; Hardware stack levels used:    1
 10376 ;; Hardware stack levels required when called:   10
 10377 ;; This function calls:
 10378 ;;		_FadeProcessClear
 10379 ;;		_FadeProcessSet
 10380 ;;		_GPort_GP2_PWM
 10381 ;; This function is called by:
 10382 ;;		_GP_Ports_FSM
 10383 ;; This function uses a non-reentrant model
 10384 ;;
 10385                           
 10386                           
 10387                           ;psect for function _FADE_GP2
 10388  0370                     _FADE_GP2:	
 10389                           
 10390                           ;GPports.c: 108: if ((GP2CONF & 0x03) != 0x00)
 10391                           
 10392                           ;incstack = 0
 10393                           ; Regs used in _FADE_GP2: [wreg+status,2+status,0+pclath+cstack]
 10394  0370  0020               	movlb	0	; select bank0
 10395  0371  0850               	movf	_GP2CONF,w	;volatile
 10396  0372  3903               	andlw	3
 10397  0373  1D03               	btfss	3,2
 10398  0374  0008               	return
 10399                           
 10400                           ;GPports.c: 111: if (FADEGP == 0) {
 10401  0375  0843               	movf	_FADEGP,w	;volatile
 10402  0376  1D03               	btfss	3,2
 10403  0377  2B7F               	goto	l6625
 10404                           
 10405                           ;GPports.c: 112: if (temp_gp2 != GP2REG) {
 10406  0378  0837               	movf	_temp_gp2,w
 10407  0379  0648               	xorwf	_GP2REG,w	;volatile
 10408  037A  1903               	skipnz
 10409  037B  0008               	return
 10410                           
 10411                           ;GPports.c: 113: temp_gp2 = GP2REG;
 10412  037C  0848               	movf	_GP2REG,w	;volatile
 10413  037D  00B7               	movwf	_temp_gp2
 10414                           
 10415                           ;GPports.c: 114: GPort_GP2_PWM(temp_gp2);
 10416  037E  2B9A               	ljmp	_GPort_GP2_PWM
 10417  037F                     l6625:	
 10418                           
 10419                           ;GPports.c: 117: };GPports.c: 119: if (gp_fade_cnt >= FADEGP) {
 10420  037F  0843               	movf	_FADEGP,w	;volatile
 10421  0380  0235               	subwf	_gp_fade_cnt,w
 10422  0381  1C03               	skipc
 10423  0382  0008               	return
 10424                           
 10425                           ;GPports.c: 120: if (temp_gp2 != GP2REG) {
 10426  0383  0837               	movf	_temp_gp2,w
 10427  0384  0648               	xorwf	_GP2REG,w	;volatile
 10428  0385  1903               	skipnz
 10429  0386  0008               	return
 10430                           
 10431                           ;GPports.c: 122: if (temp_gp2 < GP2REG) {
 10432  0387  0848               	movf	_GP2REG,w	;volatile
 10433  0388  0237               	subwf	_temp_gp2,w
 10434  0389  1C03               	btfss	3,0
 10435                           
 10436                           ;GPports.c: 123: temp_gp2++;
 10437  038A  0AB7               	incf	_temp_gp2,f
 10438                           
 10439                           ;GPports.c: 124: };GPports.c: 125: if (temp_gp2 > GP2REG) {
 10440  038B  0837               	movf	_temp_gp2,w
 10441  038C  0248               	subwf	_GP2REG,w	;volatile
 10442  038D  1C03               	btfss	3,0
 10443                           
 10444                           ;GPports.c: 126: temp_gp2--;
 10445  038E  03B7               	decf	_temp_gp2,f
 10446                           
 10447                           ;GPports.c: 127: };GPports.c: 129: GPort_GP2_PWM(temp_gp2);
 10448  038F  0837               	movf	_temp_gp2,w
 10449  0390  239A  3180         	fcall	_GPort_GP2_PWM
 10450                           
 10451                           ;GPports.c: 130: if (temp_gp2 == GP2REG) {
 10452  0392  0020               	movlb	0	; select bank0
 10453  0393  0837               	movf	_temp_gp2,w
 10454  0394  0648               	xorwf	_GP2REG,w	;volatile
 10455                           
 10456                           ;GPports.c: 131: FadeProcessClear(F_FGP2);
 10457  0395  3010               	movlw	16
 10458  0396  1D03               	skipz
 10459  0397  2B99               	goto	L2
 10460  0398  2AED               	ljmp	_FadeProcessClear
 10461  0399                     L2:	
 10462                           ;GPports.c: 133: FadeProcessSet(F_FGP2);
 10463                           
 10464                           ;GPports.c: 132: } else {
 10465                           
 10466  0399  2AF6               	ljmp	_FadeProcessSet
 10467  039A                     __end_of_FADE_GP2:	
 10468  039A                     __ptext23:	
 10469 ;; *************** function _GPort_GP2_PWM *****************
 10470 ;; Defined at:
 10471 ;;		line 38 in file "GPports.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  duty            1    wreg     unsigned char 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  duty            1    0[BANK1 ] unsigned char 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0
 10480 ;; Tracked objects:
 10481 ;;		On entry : 1F/0
 10482 ;;		On exit  : 1F/1
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;Total ram usage:        1 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    7
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_FADE_GP2
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499                           
 10500                           ;psect for function _GPort_GP2_PWM
 10501  039A                     _GPort_GP2_PWM:	
 10502                           
 10503                           ;incstack = 0
 10504                           ; Regs used in _GPort_GP2_PWM: [wreg+status,2+status,0]
 10505                           ;GPort_GP2_PWM@duty stored from wreg
 10506  039A  0021               	movlb	1	; select bank1
 10507  039B  00B6               	movwf	GPort_GP2_PWM@duty^(0+128)
 10508                           
 10509                           ;GPports.c: 40: CCPR4H = 0x00;
 10510  039C  0026               	movlb	6	; select bank6
 10511  039D  0196               	clrf	22	;volatile
 10512                           
 10513                           ;GPports.c: 41: CCPR4L = 0xFFU - duty;
 10514  039E  0021               	movlb	1	; select bank1
 10515  039F  0936               	comf	GPort_GP2_PWM@duty^(0+128),w
 10516  03A0  0026               	movlb	6	; select bank6
 10517  03A1  0095               	movwf	21	;volatile
 10518                           
 10519                           ;GPports.c: 43: if (duty == 0) {
 10520  03A2  0021               	movlb	1	; select bank1
 10521  03A3  0836               	movf	GPort_GP2_PWM@duty^(0+128),w
 10522  03A4  1D03               	btfss	3,2
 10523  03A5  2BA8               	goto	l1025
 10524                           
 10525                           ;GPports.c: 44: do { TRISCbits.TRISC6 = 1; } while(0);
 10526  03A6  170E               	bsf	14,6	;volatile
 10527  03A7  0008               	return
 10528  03A8                     l1025:	
 10529                           ;GPports.c: 46: do { TRISCbits.TRISC6 = 0; } while(0);
 10530                           
 10531  03A8  130E               	bcf	14,6	;volatile
 10532  03A9  0008               	return
 10533  03AA                     __end_of_GPort_GP2_PWM:	
 10534  03AA                     __ptext20:	
 10535 ;; *************** function _FADE_GP3 *****************
 10536 ;; Defined at:
 10537 ;;		line 144 in file "GPports.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 1C/1
 10548 ;;		On exit  : 1C/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:   10
 10558 ;; This function calls:
 10559 ;;		_FadeProcessClear
 10560 ;;		_FadeProcessSet
 10561 ;;		_GPort_GP3_PWM
 10562 ;; This function is called by:
 10563 ;;		_GP_Ports_FSM
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           
 10568                           ;psect for function _FADE_GP3
 10569  03AA                     _FADE_GP3:	
 10570                           
 10571                           ;GPports.c: 146: if ((GP3CONF & 0x03) != 0x00)
 10572                           
 10573                           ;incstack = 0
 10574                           ; Regs used in _FADE_GP3: [wreg+status,2+status,0+pclath+cstack]
 10575  03AA  0020               	movlb	0	; select bank0
 10576  03AB  084F               	movf	_GP3CONF,w	;volatile
 10577  03AC  3903               	andlw	3
 10578  03AD  1D03               	btfss	3,2
 10579  03AE  0008               	return
 10580                           
 10581                           ;GPports.c: 149: if (FADEGP == 0) {
 10582  03AF  0843               	movf	_FADEGP,w	;volatile
 10583  03B0  1D03               	btfss	3,2
 10584  03B1  2BB9               	goto	l6659
 10585                           
 10586                           ;GPports.c: 150: if (temp_gp3 != GP3REG) {
 10587  03B2  0836               	movf	_temp_gp3,w
 10588  03B3  0647               	xorwf	_GP3REG,w	;volatile
 10589  03B4  1903               	skipnz
 10590  03B5  0008               	return
 10591                           
 10592                           ;GPports.c: 151: temp_gp3 = GP3REG;
 10593  03B6  0847               	movf	_GP3REG,w	;volatile
 10594  03B7  00B6               	movwf	_temp_gp3
 10595                           
 10596                           ;GPports.c: 152: GPort_GP3_PWM(temp_gp3);
 10597  03B8  2BD4               	ljmp	_GPort_GP3_PWM
 10598  03B9                     l6659:	
 10599                           
 10600                           ;GPports.c: 155: };GPports.c: 157: if (gp_fade_cnt >= FADEGP) {
 10601  03B9  0843               	movf	_FADEGP,w	;volatile
 10602  03BA  0235               	subwf	_gp_fade_cnt,w
 10603  03BB  1C03               	skipc
 10604  03BC  0008               	return
 10605                           
 10606                           ;GPports.c: 158: if (temp_gp3 != GP3REG) {
 10607  03BD  0836               	movf	_temp_gp3,w
 10608  03BE  0647               	xorwf	_GP3REG,w	;volatile
 10609  03BF  1903               	skipnz
 10610  03C0  0008               	return
 10611                           
 10612                           ;GPports.c: 160: if (temp_gp3 < GP3REG) {
 10613  03C1  0847               	movf	_GP3REG,w	;volatile
 10614  03C2  0236               	subwf	_temp_gp3,w
 10615  03C3  1C03               	btfss	3,0
 10616                           
 10617                           ;GPports.c: 161: temp_gp3++;
 10618  03C4  0AB6               	incf	_temp_gp3,f
 10619                           
 10620                           ;GPports.c: 162: };GPports.c: 163: if (temp_gp3 > GP3REG) {
 10621  03C5  0836               	movf	_temp_gp3,w
 10622  03C6  0247               	subwf	_GP3REG,w	;volatile
 10623  03C7  1C03               	btfss	3,0
 10624                           
 10625                           ;GPports.c: 164: temp_gp3--;
 10626  03C8  03B6               	decf	_temp_gp3,f
 10627                           
 10628                           ;GPports.c: 165: };GPports.c: 167: GPort_GP3_PWM(temp_gp3);
 10629  03C9  0836               	movf	_temp_gp3,w
 10630  03CA  23D4  3180         	fcall	_GPort_GP3_PWM
 10631                           
 10632                           ;GPports.c: 168: if (temp_gp3 == GP3REG) {
 10633  03CC  0020               	movlb	0	; select bank0
 10634  03CD  0836               	movf	_temp_gp3,w
 10635  03CE  0647               	xorwf	_GP3REG,w	;volatile
 10636                           
 10637                           ;GPports.c: 169: FadeProcessClear(F_FGP3);
 10638  03CF  3020               	movlw	32
 10639  03D0  1D03               	skipz
 10640  03D1  2BD3               	goto	L1
 10641  03D2  2AED               	ljmp	_FadeProcessClear
 10642  03D3                     L1:	
 10643                           ;GPports.c: 171: FadeProcessSet(F_FGP3);
 10644                           
 10645                           ;GPports.c: 170: } else {
 10646                           
 10647  03D3  2AF6               	ljmp	_FadeProcessSet
 10648  03D4                     __end_of_FADE_GP3:	
 10649  03D4                     __ptext21:	
 10650 ;; *************** function _GPort_GP3_PWM *****************
 10651 ;; Defined at:
 10652 ;;		line 53 in file "GPports.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  duty            1    wreg     unsigned char 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  duty            1    0[BANK1 ] unsigned char 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg, status,2, status,0
 10661 ;; Tracked objects:
 10662 ;;		On entry : 1F/0
 10663 ;;		On exit  : 1F/1
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;Total ram usage:        1 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:    7
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_FADE_GP3
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           
 10681                           ;psect for function _GPort_GP3_PWM
 10682  03D4                     _GPort_GP3_PWM:	
 10683                           
 10684                           ;incstack = 0
 10685                           ; Regs used in _GPort_GP3_PWM: [wreg+status,2+status,0]
 10686                           ;GPort_GP3_PWM@duty stored from wreg
 10687  03D4  0021               	movlb	1	; select bank1
 10688  03D5  00B6               	movwf	GPort_GP3_PWM@duty^(0+128)
 10689                           
 10690                           ;GPports.c: 55: CCPR1H = 0x00;
 10691  03D6  0025               	movlb	5	; select bank5
 10692  03D7  0192               	clrf	18	;volatile
 10693                           
 10694                           ;GPports.c: 56: CCPR1L = 0xFFU - duty;
 10695  03D8  0021               	movlb	1	; select bank1
 10696  03D9  0936               	comf	GPort_GP3_PWM@duty^(0+128),w
 10697  03DA  0025               	movlb	5	; select bank5
 10698  03DB  0091               	movwf	17	;volatile
 10699                           
 10700                           ;GPports.c: 58: if (duty == 0) {
 10701  03DC  0021               	movlb	1	; select bank1
 10702  03DD  0836               	movf	GPort_GP3_PWM@duty^(0+128),w
 10703  03DE  1D03               	btfss	3,2
 10704  03DF  2BE2               	goto	l1034
 10705                           
 10706                           ;GPports.c: 59: do { TRISCbits.TRISC5 = 1; } while(0);
 10707  03E0  168E               	bsf	14,5	;volatile
 10708  03E1  0008               	return
 10709  03E2                     l1034:	
 10710                           ;GPports.c: 61: do { TRISCbits.TRISC5 = 0; } while(0);
 10711                           
 10712  03E2  128E               	bcf	14,5	;volatile
 10713  03E3  0008               	return
 10714  03E4                     __end_of_GPort_GP3_PWM:	
 10715  03E4                     __ptext5:	
 10716 ;; *************** function _TMR3_SetInterruptHandler *****************
 10717 ;; Defined at:
 10718 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10721 ;;		 -> TimerInt(1), TMR3_DefaultInterruptHandler(1), 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;		None
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  1    wreg      void 
 10726 ;; Registers used:
 10727 ;;		wreg
 10728 ;; Tracked objects:
 10729 ;;		On entry : 1F/1
 10730 ;;		On exit  : 1F/1
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10733 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10736 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;Total ram usage:        2 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:    7
 10740 ;; This function calls:
 10741 ;;		Nothing
 10742 ;; This function is called by:
 10743 ;;		_TMR3_Initialize
 10744 ;;		_main
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           
 10749                           ;psect for function _TMR3_SetInterruptHandler
 10750  03E4                     _TMR3_SetInterruptHandler:	
 10751                           
 10752                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 10753                           
 10754                           ;incstack = 0
 10755                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 10756  03E4  0837               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10757  03E5  00A7               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 10758  03E6  0836               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 10759  03E7  00A6               	movwf	_TMR3_InterruptHandler^(0+128)
 10760  03E8  0008               	return
 10761  03E9                     __end_of_TMR3_SetInterruptHandler:	
 10762  03E9                     __ptext2:	
 10763 ;; *************** function _SYSTEM_Initialize *****************
 10764 ;; Defined at:
 10765 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;		None
 10768 ;; Auto vars:     Size  Location     Type
 10769 ;;		None
 10770 ;; Return value:  Size  Location     Type
 10771 ;;                  1    wreg      void 
 10772 ;; Registers used:
 10773 ;;		wreg, status,2, status,0, pclath, cstack
 10774 ;; Tracked objects:
 10775 ;;		On entry : B1F/0
 10776 ;;		On exit  : 1F/8
 10777 ;;		Unchanged: 0/0
 10778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;Total ram usage:        0 bytes
 10784 ;; Hardware stack levels used:    1
 10785 ;; Hardware stack levels required when called:    9
 10786 ;; This function calls:
 10787 ;;		_CLC1_Initialize
 10788 ;;		_CLC2_Initialize
 10789 ;;		_I2C1_AddressSet
 10790 ;;		_I2C1_Initialize
 10791 ;;		_OSCILLATOR_Initialize
 10792 ;;		_PIN_MANAGER_Initialize
 10793 ;;		_PMD_Initialize
 10794 ;;		_TMR2_Initialize
 10795 ;;		_TMR3_Initialize
 10796 ;;		_WDT_Initialize
 10797 ;; This function is called by:
 10798 ;;		_main
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _SYSTEM_Initialize
 10804  03E9                     _SYSTEM_Initialize:	
 10805                           
 10806                           ;mcc.c: 53: PMD_Initialize();
 10807                           
 10808                           ;incstack = 0
 10809                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10810  03E9  318B  2360  3180   	fcall	_PMD_Initialize
 10811                           
 10812                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 10813  03EC  318B  23D1  3180   	fcall	_PIN_MANAGER_Initialize
 10814                           
 10815                           ;mcc.c: 55: OSCILLATOR_Initialize();
 10816  03EF  2427               	fcall	_OSCILLATOR_Initialize
 10817                           
 10818                           ;mcc.c: 56: WDT_Initialize();
 10819  03F0  318B  234E  3180   	fcall	_WDT_Initialize
 10820                           
 10821                           ;mcc.c: 57: I2C1_AddressSet();
 10822  03F3  2414               	fcall	_I2C1_AddressSet
 10823                           
 10824                           ;mcc.c: 58: I2C1_Initialize();
 10825  03F4  318B  236E  3180   	fcall	_I2C1_Initialize
 10826                           
 10827                           ;mcc.c: 59: CLC2_Initialize();
 10828  03F7  23FF               	fcall	_CLC2_Initialize
 10829                           
 10830                           ;mcc.c: 60: TMR2_Initialize();
 10831  03F8  318B  2358  3180   	fcall	_TMR2_Initialize
 10832                           
 10833                           ;mcc.c: 61: CLC1_Initialize();
 10834  03FB  318B  237F         	fcall	_CLC1_Initialize
 10835                           
 10836                           ;mcc.c: 62: TMR3_Initialize();
 10837  03FD  3187  2FE2         	ljmp	l6559
 10838  03FF                     __end_of_SYSTEM_Initialize:	
 10839  03FF                     __ptext12:	
 10840 ;; *************** function _CLC2_Initialize *****************
 10841 ;; Defined at:
 10842 ;;		line 58 in file "mcc_generated_files/clc2.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;		None
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;		None
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		wreg, status,2
 10851 ;; Tracked objects:
 10852 ;;		On entry : B1F/1
 10853 ;;		On exit  : B1F/1
 10854 ;;		Unchanged: B00/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;Total ram usage:        0 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    7
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		_SYSTEM_Initialize
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           
 10871                           ;psect for function _CLC2_Initialize
 10872  03FF                     _CLC2_Initialize:	
 10873                           
 10874                           ;clc2.c: 63: CLC2POL = 0x04;
 10875                           
 10876                           ;incstack = 0
 10877                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 10878  03FF  3004               	movlw	4
 10879  0400  003E               	movlb	30	; select bank30
 10880  0401  009B               	movwf	27	;volatile
 10881                           
 10882                           ;clc2.c: 65: CLC2SEL0 = 0x01;
 10883  0402  3001               	movlw	1
 10884  0403  009C               	movwf	28	;volatile
 10885                           
 10886                           ;clc2.c: 67: CLC2SEL1 = 0x00;
 10887  0404  019D               	clrf	29	;volatile
 10888                           
 10889                           ;clc2.c: 69: CLC2SEL2 = 0x00;
 10890  0405  019E               	clrf	30	;volatile
 10891                           
 10892                           ;clc2.c: 71: CLC2SEL3 = 0x00;
 10893  0406  019F               	clrf	31	;volatile
 10894                           
 10895                           ;clc2.c: 73: CLC2GLS0 = 0x02;
 10896  0407  3002               	movlw	2
 10897  0408  00A0               	movwf	32	;volatile
 10898                           
 10899                           ;clc2.c: 75: CLC2GLS1 = 0xA8;
 10900  0409  30A8               	movlw	168
 10901  040A  00A1               	movwf	33	;volatile
 10902                           
 10903                           ;clc2.c: 77: CLC2GLS2 = 0xA8;
 10904  040B  00A2               	movwf	34	;volatile
 10905                           
 10906                           ;clc2.c: 79: CLC2GLS3 = 0xA8;
 10907  040C  00A3               	movwf	35	;volatile
 10908                           
 10909                           ;clc2.c: 81: CLC2CON = 0x95;
 10910  040D  3095               	movlw	149
 10911  040E  009A               	movwf	26	;volatile
 10912                           
 10913                           ;clc2.c: 84: PIR3bits.CLC2IF = 0;
 10914  040F  0020               	movlb	0	; select bank0
 10915  0410  1093               	bcf	19,1	;volatile
 10916                           
 10917                           ;clc2.c: 86: PIE3bits.CLC2IE = 1;
 10918  0411  0021               	movlb	1	; select bank1
 10919  0412  1493               	bsf	19,1	;volatile
 10920  0413  0008               	return
 10921  0414                     __end_of_CLC2_Initialize:	
 10922  0414                     __ptext11:	
 10923 ;; *************** function _I2C1_AddressSet *****************
 10924 ;; Defined at:
 10925 ;;		line 20 in file "i2c_register.c"
 10926 ;; Parameters:    Size  Location     Type
 10927 ;;		None
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;		None
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, status,2, status,0
 10934 ;; Tracked objects:
 10935 ;;		On entry : B1F/1
 10936 ;;		On exit  : B1F/0
 10937 ;;		Unchanged: B00/0
 10938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;Total ram usage:        0 bytes
 10944 ;; Hardware stack levels used:    1
 10945 ;; Hardware stack levels required when called:    7
 10946 ;; This function calls:
 10947 ;;		Nothing
 10948 ;; This function is called by:
 10949 ;;		_SYSTEM_Initialize
 10950 ;; This function uses a non-reentrant model
 10951 ;;
 10952                           
 10953                           
 10954                           ;psect for function _I2C1_AddressSet
 10955  0414                     _I2C1_AddressSet:	
 10956                           
 10957                           ;i2c_register.c: 26: i2c_address = 0x00;
 10958                           
 10959                           ;incstack = 0
 10960                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 10961  0414  0020               	movlb	0	; select bank0
 10962  0415  01D3               	clrf	_i2c_address	;volatile
 10963                           
 10964                           ;i2c_register.c: 28: if (!PORTAbits.RA0)
 10965  0416  1C0C               	btfss	12,0	;volatile
 10966                           
 10967                           ;i2c_register.c: 29: i2c_address |= 0x01;
 10968  0417  1453               	bsf	_i2c_address,0	;volatile
 10969                           
 10970                           ;i2c_register.c: 31: if (!PORTAbits.RA1)
 10971  0418  1C8C               	btfss	12,1	;volatile
 10972                           
 10973                           ;i2c_register.c: 32: i2c_address |= 0x02;
 10974  0419  14D3               	bsf	_i2c_address,1	;volatile
 10975                           
 10976                           ;i2c_register.c: 34: if (!PORTAbits.RA2)
 10977  041A  1D0C               	btfss	12,2	;volatile
 10978                           
 10979                           ;i2c_register.c: 35: i2c_address |= 0x04;
 10980  041B  1553               	bsf	_i2c_address,2	;volatile
 10981                           
 10982                           ;i2c_register.c: 37: if (!PORTAbits.RA3)
 10983  041C  1D8C               	btfss	12,3	;volatile
 10984                           
 10985                           ;i2c_register.c: 38: i2c_address |= 0x08;
 10986  041D  15D3               	bsf	_i2c_address,3	;volatile
 10987                           
 10988                           ;i2c_register.c: 40: if (!PORTAbits.RA4)
 10989  041E  1E0C               	btfss	12,4	;volatile
 10990                           
 10991                           ;i2c_register.c: 41: i2c_address |= 0x10;
 10992  041F  1653               	bsf	_i2c_address,4	;volatile
 10993                           
 10994                           ;i2c_register.c: 43: if (!PORTAbits.RA5)
 10995  0420  1E8C               	btfss	12,5	;volatile
 10996                           
 10997                           ;i2c_register.c: 44: i2c_address |= 0x20;
 10998  0421  16D3               	bsf	_i2c_address,5	;volatile
 10999                           
 11000                           ;i2c_register.c: 46: if (!PORTBbits.RB4)
 11001  0422  1E0D               	btfss	13,4	;volatile
 11002                           
 11003                           ;i2c_register.c: 47: i2c_address |= 0x40;
 11004  0423  1753               	bsf	_i2c_address,6	;volatile
 11005                           
 11006                           ;i2c_register.c: 49: i2c_address = (uint8_t) (i2c_address << 1);
 11007  0424  3553               	lslf	_i2c_address,w	;volatile
 11008  0425  00D3               	movwf	_i2c_address	;volatile
 11009  0426  0008               	return
 11010  0427                     __end_of_I2C1_AddressSet:	
 11011  0427                     __ptext9:	
 11012 ;; *************** function _OSCILLATOR_Initialize *****************
 11013 ;; Defined at:
 11014 ;;		line 66 in file "mcc_generated_files/mcc.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;		None
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2
 11023 ;; Tracked objects:
 11024 ;;		On entry : B1F/1D
 11025 ;;		On exit  : B1F/12
 11026 ;;		Unchanged: B00/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    7
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_SYSTEM_Initialize
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           
 11043                           ;psect for function _OSCILLATOR_Initialize
 11044  0427                     _OSCILLATOR_Initialize:	
 11045                           
 11046                           ;mcc.c: 69: OSCCON1 = 0x60;
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11050  0427  3060               	movlw	96
 11051  0428  0032               	movlb	18	; select bank18
 11052  0429  0099               	movwf	25	;volatile
 11053                           
 11054                           ;mcc.c: 71: OSCCON3 = 0x00;
 11055  042A  019B               	clrf	27	;volatile
 11056                           
 11057                           ;mcc.c: 73: OSCEN = 0x00;
 11058  042B  019D               	clrf	29	;volatile
 11059                           
 11060                           ;mcc.c: 75: OSCFRQ = 0x07;
 11061  042C  3007               	movlw	7
 11062  042D  009F               	movwf	31	;volatile
 11063                           
 11064                           ;mcc.c: 77: OSCTUNE = 0x00;
 11065  042E  019E               	clrf	30	;volatile
 11066  042F  0008               	return
 11067  0430                     __end_of_OSCILLATOR_Initialize:	
 11068                           
 11069                           	psect	bssCOMMON
 11070  007C                     __pbssCOMMON:	
 11071  007C                     _GP1CONF:	
 11072  007C                     	ds	1
 11073  007D                     _GCONF:	
 11074  007D                     	ds	1
 11075                           
 11076                           	psect	bssBANK0
 11077  0020                     __pbssBANK0:	
 11078  0020                     _ISTEP:	
 11079  0020                     	ds	4
 11080  0024                     _CMIN:	
 11081  0024                     	ds	4
 11082  0028                     _CMAX:	
 11083  0028                     	ds	4
 11084  002C                     _CVAL:	
 11085  002C                     	ds	4
 11086  0030                     _DEBOUNCE:	
 11087  0030                     	ds	2
 11088  0032                     _temp_blu:	
 11089  0032                     	ds	1
 11090  0033                     _temp_green:	
 11091  0033                     	ds	1
 11092  0034                     _temp_red:	
 11093  0034                     	ds	1
 11094  0035                     _gp_fade_cnt:	
 11095  0035                     	ds	1
 11096  0036                     _temp_gp3:	
 11097  0036                     	ds	1
 11098  0037                     _temp_gp2:	
 11099  0037                     	ds	1
 11100  0038                     _temp_gp1:	
 11101  0038                     	ds	1
 11102  0039                     _int2clear:	
 11103  0039                     	ds	1
 11104  003A                     _intclear:	
 11105  003A                     	ds	1
 11106  003B                     _EncoderReg:	
 11107  003B                     	ds	1
 11108  003C                     _C_DTYPE:	
 11109  003C                     	ds	1
 11110  003D                     _C_WRAPE:	
 11111  003D                     	ds	1
 11112  003E                     _C_IPUD:	
 11113  003E                     	ds	1
 11114  003F                     _C_RMOD:	
 11115  003F                     	ds	1
 11116  0040                     _C_ETYPE:	
 11117  0040                     	ds	1
 11118  0041                     _C_MBANK:	
 11119  0041                     	ds	1
 11120  0042                     _C_RESET:	
 11121  0042                     	ds	1
 11122  0043                     _FADEGP:	
 11123  0043                     	ds	1
 11124  0044                     _FADERGB:	
 11125  0044                     	ds	1
 11126  0045                     _DPPERIOD:	
 11127  0045                     	ds	1
 11128  0046                     _ANTBOUNC:	
 11129  0046                     	ds	1
 11130  0047                     _GP3REG:	
 11131  0047                     	ds	1
 11132  0048                     _GP2REG:	
 11133  0048                     	ds	1
 11134  0049                     _GP1REG:	
 11135  0049                     	ds	1
 11136  004A                     _BLED:	
 11137  004A                     	ds	1
 11138  004B                     _GLED:	
 11139  004B                     	ds	1
 11140  004C                     _RLED:	
 11141  004C                     	ds	1
 11142  004D                     _FSTATUS:	
 11143  004D                     	ds	1
 11144  004E                     _I2STATUS:	
 11145  004E                     	ds	1
 11146  004F                     _GP3CONF:	
 11147  004F                     	ds	1
 11148  0050                     _GP2CONF:	
 11149  0050                     	ds	1
 11150  0051                     _INTCONF:	
 11151  0051                     	ds	1
 11152  0052                     _ESTATUS:	
 11153  0052                     	ds	1
 11154  0053                     _i2c_address:	
 11155  0053                     	ds	1
 11156                           
 11157                           	psect	dataBANK0
 11158  0068                     __pdataBANK0:	
 11159  0068                     _I2C1_slaveWriteData:	
 11160  0068                     	ds	1
 11161                           
 11162                           	psect	bssBANK1
 11163  00A0                     __pbssBANK1:	
 11164  00A0                     _en_deb:	
 11165  00A0                     	ds	2
 11166  00A2                     _double_push_cnt:	
 11167  00A2                     	ds	2
 11168  00A4                     _DoublePush:	
 11169  00A4                     	ds	2
 11170  00A6                     _TMR3_InterruptHandler:	
 11171  00A6                     	ds	2
 11172  00A8                     _timer3ReloadVal:	
 11173  00A8                     	ds	2
 11174  00AA                     EncoderSwitch_GetValueFiltered@pb_status:	
 11175  00AA                     	ds	1
 11176  00AB                     _en_prev:	
 11177  00AB                     	ds	1
 11178  00AC                     _fade_cnt:	
 11179  00AC                     	ds	1
 11180  00AD                     _pb_cnt:	
 11181  00AD                     	ds	1
 11182  00AE                     _pb_fsm:	
 11183  00AE                     	ds	1
 11184  00AF                     _gp3_fsm:	
 11185  00AF                     	ds	1
 11186  00B0                     _gp2_fsm:	
 11187  00B0                     	ds	1
 11188  00B1                     _gp1_fsm:	
 11189  00B1                     	ds	1
 11190  00B2                     _gp_timer:	
 11191  00B2                     	ds	1
 11192  00B3                     I2C1_StatusCallback@slaveWriteType:	
 11193  00B3                     	ds	1
 11194  00B4                     _C_DIRE:	
 11195  00B4                     	ds	1
 11196  00B5                     _fsm_tmr:	
 11197  00B5                     	ds	1
 11198                           
 11199                           	psect	clrtext
 11200  0B52                     clear_ram0:	
 11201                           ;	Called with FSR0 containing the base address, and
 11202                           ;	WREG with the size to clear
 11203                           
 11204  0B52  0064               	clrwdt	;clear the watchdog before getting into this loop
 11205  0B53                     clrloop0:	
 11206  0B53  0180               	clrf	0	;clear RAM location pointed to by FSR
 11207  0B54  3101               	addfsr 0,1
 11208  0B55  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 11209  0B56  2B53               	goto	clrloop0	;have we reached the end yet?
 11210  0B57  3400               	retlw	0	;all done for this memory range, return
 11211                           
 11212                           	psect	cstackBANK1
 11213  00B6                     __pcstackBANK1:	
 11214  00B6                     ??_PMD_Initialize:	
 11215  00B6                     ??_PIN_MANAGER_Initialize:	
 11216                           ; 1 bytes @ 0x0
 11217                           
 11218  00B6                     ??_OSCILLATOR_Initialize:	
 11219                           ; 1 bytes @ 0x0
 11220                           
 11221  00B6                     ??_WDT_Initialize:	
 11222                           ; 1 bytes @ 0x0
 11223                           
 11224  00B6                     ??_I2C1_AddressSet:	
 11225                           ; 1 bytes @ 0x0
 11226                           
 11227  00B6                     ??_I2C1_Initialize:	
 11228                           ; 1 bytes @ 0x0
 11229                           
 11230  00B6                     ??_CLC2_Initialize:	
 11231                           ; 1 bytes @ 0x0
 11232                           
 11233  00B6                     ??_TMR2_Initialize:	
 11234                           ; 1 bytes @ 0x0
 11235                           
 11236  00B6                     ??_CLC1_Initialize:	
 11237                           ; 1 bytes @ 0x0
 11238                           
 11239  00B6                     ?_TMR3_SetInterruptHandler:	
 11240                           ; 1 bytes @ 0x0
 11241                           
 11242  00B6                     ??_DataInitSet:	
 11243                           ; 1 bytes @ 0x0
 11244                           
 11245  00B6                     ??_ADC_Initialize:	
 11246                           ; 1 bytes @ 0x0
 11247                           
 11248  00B6                     ??_TMR3_StartTimer:	
 11249                           ; 1 bytes @ 0x0
 11250                           
 11251  00B6                     ??_SetInterrupt:	
 11252                           ; 1 bytes @ 0x0
 11253                           
 11254  00B6                     ??_ClearInterrupt:	
 11255                           ; 1 bytes @ 0x0
 11256                           
 11257  00B6                     ??_EncoderStatusUpdate:	
 11258                           ; 1 bytes @ 0x0
 11259                           
 11260  00B6                     ??_FadeProcessSet:	
 11261                           ; 1 bytes @ 0x0
 11262                           
 11263  00B6                     ??_GPort_GP1_PWM:	
 11264                           ; 1 bytes @ 0x0
 11265                           
 11266  00B6                     ??_GPort_GP2_PWM:	
 11267                           ; 1 bytes @ 0x0
 11268                           
 11269  00B6                     ??_GPort_GP3_PWM:	
 11270                           ; 1 bytes @ 0x0
 11271                           
 11272  00B6                     ??_EncoderSwitch_GetValue:	
 11273                           ; 1 bytes @ 0x0
 11274                           
 11275  00B6                     ??_EncoderSwitch_GetValueFiltered:	
 11276                           ; 1 bytes @ 0x0
 11277                           
 11278  00B6                     ??_RGBEncoder_RLED:	
 11279                           ; 1 bytes @ 0x0
 11280                           
 11281  00B6                     ??_RGBEncoder_GLED:	
 11282                           ; 1 bytes @ 0x0
 11283                           
 11284  00B6                     ??_RGBEncoder_BLED:	
 11285                           ; 1 bytes @ 0x0
 11286                           
 11287  00B6                     ?_ADC_GetConversion:	
 11288                           ; 1 bytes @ 0x0
 11289                           
 11290  00B6                     EncoderStatusUpdate@stat:	
 11291                           ; 2 bytes @ 0x0
 11292                           
 11293  00B6                     FadeProcessSet@stat:	
 11294                           ; 1 bytes @ 0x0
 11295                           
 11296  00B6                     GPort_GP2_PWM@duty:	
 11297                           ; 1 bytes @ 0x0
 11298                           
 11299  00B6                     GPort_GP3_PWM@duty:	
 11300                           ; 1 bytes @ 0x0
 11301                           
 11302  00B6                     RGBEncoder_RLED@duty:	
 11303                           ; 1 bytes @ 0x0
 11304                           
 11305  00B6                     RGBEncoder_GLED@duty:	
 11306                           ; 1 bytes @ 0x0
 11307                           
 11308  00B6                     RGBEncoder_BLED@duty:	
 11309                           ; 1 bytes @ 0x0
 11310                           
 11311  00B6                     TMR3_SetInterruptHandler@InterruptHandler:	
 11312                           ; 1 bytes @ 0x0
 11313                           
 11314                           
 11315                           ; 2 bytes @ 0x0
 11316  00B6                     	ds	1
 11317  00B7                     ??_Int2StatusUpdate:	
 11318  00B7                     ??_Encoder_PushButton_FSM:	
 11319                           ; 1 bytes @ 0x1
 11320                           
 11321  00B7                     Int2StatusUpdate@stat:	
 11322                           ; 1 bytes @ 0x1
 11323                           
 11324  00B7                     GPort_GP1_PWM@duty:	
 11325                           ; 1 bytes @ 0x1
 11326                           
 11327                           
 11328                           ; 1 bytes @ 0x1
 11329  00B7                     	ds	1
 11330  00B8                     ??_TMR3_Initialize:	
 11331  00B8                     ??_TMR3_SetInterruptHandler:	
 11332                           ; 1 bytes @ 0x2
 11333                           
 11334  00B8                     ??_SYSTEM_Initialize:	
 11335                           ; 1 bytes @ 0x2
 11336                           
 11337  00B8                     ??_ADC_GetConversion:	
 11338                           ; 1 bytes @ 0x2
 11339                           
 11340  00B8                     ??_FadeProcessClear:	
 11341                           ; 1 bytes @ 0x2
 11342                           
 11343  00B8                     FadeProcessClear@stat:	
 11344                           ; 1 bytes @ 0x2
 11345                           
 11346                           
 11347                           ; 1 bytes @ 0x2
 11348  00B8                     	ds	1
 11349  00B9                     ??_Encoder_FSM:	
 11350  00B9                     ??_FADE_GP1:	
 11351                           ; 1 bytes @ 0x3
 11352                           
 11353  00B9                     ??_FADE_GP2:	
 11354                           ; 1 bytes @ 0x3
 11355                           
 11356  00B9                     ??_FADE_GP3:	
 11357                           ; 1 bytes @ 0x3
 11358                           
 11359  00B9                     ??_FADE_LEDS:	
 11360                           ; 1 bytes @ 0x3
 11361                           
 11362  00B9                     ADC_GetConversion@channel:	
 11363                           ; 1 bytes @ 0x3
 11364                           
 11365                           
 11366                           ; 1 bytes @ 0x3
 11367  00B9                     	ds	1
 11368  00BA                     ??_GP1_FSM:	
 11369  00BA                     ??_GP2_FSM:	
 11370                           ; 1 bytes @ 0x4
 11371                           
 11372  00BA                     ??_GP3_FSM:	
 11373                           ; 1 bytes @ 0x4
 11374                           
 11375                           
 11376                           ; 1 bytes @ 0x4
 11377  00BA                     	ds	2
 11378  00BC                     ??_GP_Ports_FSM:	
 11379                           
 11380                           ; 1 bytes @ 0x6
 11381  00BC                     	ds	1
 11382  00BD                     ??_main:	
 11383                           
 11384                           	psect	cstackCOMMON
 11385  0070                     __pcstackCOMMON:	
 11386                           ; 1 bytes @ 0x7
 11387                           
 11388  0070                     ?___flge:	
 11389  0070                     ?_PMD_Initialize:	
 11390                           ; 1 bit 
 11391                           
 11392  0070                     ?_PIN_MANAGER_Initialize:	
 11393                           ; 1 bytes @ 0x0
 11394                           
 11395  0070                     ?_OSCILLATOR_Initialize:	
 11396                           ; 1 bytes @ 0x0
 11397                           
 11398  0070                     ?_WDT_Initialize:	
 11399                           ; 1 bytes @ 0x0
 11400                           
 11401  0070                     ?_I2C1_AddressSet:	
 11402                           ; 1 bytes @ 0x0
 11403                           
 11404  0070                     ?_I2C1_Initialize:	
 11405                           ; 1 bytes @ 0x0
 11406                           
 11407  0070                     ?_CLC2_Initialize:	
 11408                           ; 1 bytes @ 0x0
 11409                           
 11410  0070                     ?_TMR2_Initialize:	
 11411                           ; 1 bytes @ 0x0
 11412                           
 11413  0070                     ?_CLC1_Initialize:	
 11414                           ; 1 bytes @ 0x0
 11415                           
 11416  0070                     ?_TMR3_Initialize:	
 11417                           ; 1 bytes @ 0x0
 11418                           
 11419  0070                     ?_CLC2_ISR:	
 11420                           ; 1 bytes @ 0x0
 11421                           
 11422  0070                     ?_CLC1_ISR:	
 11423                           ; 1 bytes @ 0x0
 11424                           
 11425  0070                     ?_I2C1_ISR:	
 11426                           ; 1 bytes @ 0x0
 11427                           
 11428  0070                     ?_TMR3_ISR:	
 11429                           ; 1 bytes @ 0x0
 11430                           
 11431  0070                     ?_CLC_2_Interrupt:	
 11432                           ; 1 bytes @ 0x0
 11433                           
 11434  0070                     ?_I2C1_StatusCallback:	
 11435                           ; 1 bytes @ 0x0
 11436                           
 11437  0070                     ?_CLC_1_Interrupt:	
 11438                           ; 1 bytes @ 0x0
 11439                           
 11440  0070                     ?_TMR3_DefaultInterruptHandler:	
 11441                           ; 1 bytes @ 0x0
 11442                           
 11443  0070                     ??_TMR3_DefaultInterruptHandler:	
 11444                           ; 1 bytes @ 0x0
 11445                           
 11446  0070                     ?_TMR3_CallBack:	
 11447                           ; 1 bytes @ 0x0
 11448                           
 11449  0070                     ??_TMR3_CallBack:	
 11450                           ; 1 bytes @ 0x0
 11451                           
 11452  0070                     ?_DataInitSet:	
 11453                           ; 1 bytes @ 0x0
 11454                           
 11455  0070                     ?_Encoder_FSM:	
 11456                           ; 1 bytes @ 0x0
 11457                           
 11458  0070                     ?_GP_Ports_FSM:	
 11459                           ; 1 bytes @ 0x0
 11460                           
 11461  0070                     ?_RegisterRead:	
 11462                           ; 1 bytes @ 0x0
 11463                           
 11464  0070                     ?_GeneralDataSet:	
 11465                           ; 1 bytes @ 0x0
 11466                           
 11467  0070                     ??_GeneralDataSet:	
 11468                           ; 1 bytes @ 0x0
 11469                           
 11470  0070                     ?_Config_GP1:	
 11471                           ; 1 bytes @ 0x0
 11472                           
 11473  0070                     ?_Config_GP2:	
 11474                           ; 1 bytes @ 0x0
 11475                           
 11476  0070                     ?_Config_GP3:	
 11477                           ; 1 bytes @ 0x0
 11478                           
 11479  0070                     ?_UpdateOut_GP1:	
 11480                           ; 1 bytes @ 0x0
 11481                           
 11482  0070                     ??_UpdateOut_GP1:	
 11483                           ; 1 bytes @ 0x0
 11484                           
 11485  0070                     ?_UpdateOut_GP2:	
 11486                           ; 1 bytes @ 0x0
 11487                           
 11488  0070                     ??_UpdateOut_GP2:	
 11489                           ; 1 bytes @ 0x0
 11490                           
 11491  0070                     ?_UpdateOut_GP3:	
 11492                           ; 1 bytes @ 0x0
 11493                           
 11494  0070                     ??_UpdateOut_GP3:	
 11495                           ; 1 bytes @ 0x0
 11496                           
 11497  0070                     ?_eeprom_write:	
 11498                           ; 1 bytes @ 0x0
 11499                           
 11500  0070                     ?_eeprom_read:	
 11501                           ; 1 bytes @ 0x0
 11502                           
 11503  0070                     ??_eeprom_read:	
 11504                           ; 1 bytes @ 0x0
 11505                           
 11506  0070                     ?_RGB_EncoderMode:	
 11507                           ; 1 bytes @ 0x0
 11508                           
 11509  0070                     ??_RGB_EncoderMode:	
 11510                           ; 1 bytes @ 0x0
 11511                           
 11512  0070                     ?_STD_EncoderMode:	
 11513                           ; 1 bytes @ 0x0
 11514                           
 11515  0070                     ??_STD_EncoderMode:	
 11516                           ; 1 bytes @ 0x0
 11517                           
 11518  0070                     ?_SYSTEM_Initialize:	
 11519                           ; 1 bytes @ 0x0
 11520                           
 11521  0070                     ?_INTERRUPT_InterruptManager:	
 11522                           ; 1 bytes @ 0x0
 11523                           
 11524  0070                     ?_PWM5_Initialize:	
 11525                           ; 1 bytes @ 0x0
 11526                           
 11527  0070                     ??_PWM5_Initialize:	
 11528                           ; 1 bytes @ 0x0
 11529                           
 11530  0070                     ?_PWM3_Initialize:	
 11531                           ; 1 bytes @ 0x0
 11532                           
 11533  0070                     ??_PWM3_Initialize:	
 11534                           ; 1 bytes @ 0x0
 11535                           
 11536  0070                     ?_PWM4_Initialize:	
 11537                           ; 1 bytes @ 0x0
 11538                           
 11539  0070                     ??_PWM4_Initialize:	
 11540                           ; 1 bytes @ 0x0
 11541                           
 11542  0070                     ?_ADC_Initialize:	
 11543                           ; 1 bytes @ 0x0
 11544                           
 11545  0070                     ?_PWM1_Initialize:	
 11546                           ; 1 bytes @ 0x0
 11547                           
 11548  0070                     ??_PWM1_Initialize:	
 11549                           ; 1 bytes @ 0x0
 11550                           
 11551  0070                     ?_PWM2_Initialize:	
 11552                           ; 1 bytes @ 0x0
 11553                           
 11554  0070                     ??_PWM2_Initialize:	
 11555                           ; 1 bytes @ 0x0
 11556                           
 11557  0070                     ?_TMR3_StartTimer:	
 11558                           ; 1 bytes @ 0x0
 11559                           
 11560  0070                     ?_TMR3_WriteTimer:	
 11561                           ; 1 bytes @ 0x0
 11562                           
 11563  0070                     ?_SetInterrupt:	
 11564                           ; 1 bytes @ 0x0
 11565                           
 11566  0070                     ?_ClearInterrupt:	
 11567                           ; 1 bytes @ 0x0
 11568                           
 11569  0070                     ?_TimerInt:	
 11570                           ; 1 bytes @ 0x0
 11571                           
 11572  0070                     ??_TimerInt:	
 11573                           ; 1 bytes @ 0x0
 11574                           
 11575  0070                     ?_main:	
 11576                           ; 1 bytes @ 0x0
 11577                           
 11578  0070                     ?_GeneralDataSplit:	
 11579                           ; 1 bytes @ 0x0
 11580                           
 11581  0070                     ??_GeneralDataSplit:	
 11582                           ; 1 bytes @ 0x0
 11583                           
 11584  0070                     ?_EncoderStatusUpdate:	
 11585                           ; 1 bytes @ 0x0
 11586                           
 11587  0070                     ?_Int2StatusUpdate:	
 11588                           ; 1 bytes @ 0x0
 11589                           
 11590  0070                     ?_StatusClear:	
 11591                           ; 1 bytes @ 0x0
 11592                           
 11593  0070                     ??_StatusClear:	
 11594                           ; 1 bytes @ 0x0
 11595                           
 11596  0070                     ?_Int2StatusClear:	
 11597                           ; 1 bytes @ 0x0
 11598                           
 11599  0070                     ??_Int2StatusClear:	
 11600                           ; 1 bytes @ 0x0
 11601                           
 11602  0070                     ?_FadeProcessSet:	
 11603                           ; 1 bytes @ 0x0
 11604                           
 11605  0070                     ?_FadeProcessClear:	
 11606                           ; 1 bytes @ 0x0
 11607                           
 11608  0070                     ?_GPort_GP1_PWM:	
 11609                           ; 1 bytes @ 0x0
 11610                           
 11611  0070                     ?_GPort_GP2_PWM:	
 11612                           ; 1 bytes @ 0x0
 11613                           
 11614  0070                     ?_GPort_GP3_PWM:	
 11615                           ; 1 bytes @ 0x0
 11616                           
 11617  0070                     ?_FADE_GP1:	
 11618                           ; 1 bytes @ 0x0
 11619                           
 11620  0070                     ?_FADE_GP2:	
 11621                           ; 1 bytes @ 0x0
 11622                           
 11623  0070                     ?_FADE_GP3:	
 11624                           ; 1 bytes @ 0x0
 11625                           
 11626  0070                     ?_GP1_FSM:	
 11627                           ; 1 bytes @ 0x0
 11628                           
 11629  0070                     ?_GP2_FSM:	
 11630                           ; 1 bytes @ 0x0
 11631                           
 11632  0070                     ?_GP3_FSM:	
 11633                           ; 1 bytes @ 0x0
 11634                           
 11635  0070                     ?_EncoderSwitch_GetValue:	
 11636                           ; 1 bytes @ 0x0
 11637                           
 11638  0070                     ?_EncoderSwitch_GetValueFiltered:	
 11639                           ; 1 bytes @ 0x0
 11640                           
 11641  0070                     ?_RGBEncoder_RLED:	
 11642                           ; 1 bytes @ 0x0
 11643                           
 11644  0070                     ?_RGBEncoder_GLED:	
 11645                           ; 1 bytes @ 0x0
 11646                           
 11647  0070                     ?_RGBEncoder_BLED:	
 11648                           ; 1 bytes @ 0x0
 11649                           
 11650  0070                     ?_FADE_LEDS:	
 11651                           ; 1 bytes @ 0x0
 11652                           
 11653  0070                     ?_Encoder_PushButton_FSM:	
 11654                           ; 1 bytes @ 0x0
 11655                           
 11656  0070                     ?i1_SetInterrupt:	
 11657                           ; 1 bytes @ 0x0
 11658                           
 11659  0070                     ??i1_SetInterrupt:	
 11660                           ; 1 bytes @ 0x0
 11661                           
 11662  0070                     ?i1_ClearInterrupt:	
 11663                           ; 1 bytes @ 0x0
 11664                           
 11665  0070                     ??i1_ClearInterrupt:	
 11666                           ; 1 bytes @ 0x0
 11667                           
 11668  0070                     ?i1_EncoderStatusUpdate:	
 11669                           ; 1 bytes @ 0x0
 11670                           
 11671  0070                     ??i1_EncoderStatusUpdate:	
 11672                           ; 1 bytes @ 0x0
 11673                           
 11674  0070                     ?i1_GPort_GP1_PWM:	
 11675                           ; 1 bytes @ 0x0
 11676                           
 11677  0070                     ??i1_GPort_GP1_PWM:	
 11678                           ; 1 bytes @ 0x0
 11679                           
 11680  0070                     ?i1_GPort_GP2_PWM:	
 11681                           ; 1 bytes @ 0x0
 11682                           
 11683  0070                     ??i1_GPort_GP2_PWM:	
 11684                           ; 1 bytes @ 0x0
 11685                           
 11686  0070                     ?i1_GPort_GP3_PWM:	
 11687                           ; 1 bytes @ 0x0
 11688                           
 11689  0070                     ??i1_GPort_GP3_PWM:	
 11690                           ; 1 bytes @ 0x0
 11691                           
 11692  0070                     ?___wmul:	
 11693                           ; 1 bytes @ 0x0
 11694                           
 11695  0070                     ?___fladd:	
 11696                           ; 2 bytes @ 0x0
 11697                           
 11698  0070                     eeprom_read@addr:	
 11699                           ; 4 bytes @ 0x0
 11700                           
 11701  0070                     eeprom_write@value:	
 11702                           ; 1 bytes @ 0x0
 11703                           
 11704  0070                     i1EncoderStatusUpdate@stat:	
 11705                           ; 1 bytes @ 0x0
 11706                           
 11707  0070                     i1GPort_GP2_PWM@duty:	
 11708                           ; 1 bytes @ 0x0
 11709                           
 11710  0070                     i1GPort_GP3_PWM@duty:	
 11711                           ; 1 bytes @ 0x0
 11712                           
 11713  0070                     TMR3_WriteTimer@timerVal:	
 11714                           ; 1 bytes @ 0x0
 11715                           
 11716  0070                     ___wmul@multiplier:	
 11717                           ; 2 bytes @ 0x0
 11718                           
 11719  0070                     ___flge@ff1:	
 11720                           ; 2 bytes @ 0x0
 11721                           
 11722  0070                     ___fladd@b:	
 11723                           ; 4 bytes @ 0x0
 11724                           
 11725                           
 11726                           ; 4 bytes @ 0x0
 11727  0070                     	ds	1
 11728  0071                     ??_RegisterRead:	
 11729  0071                     ??_Config_GP2:	
 11730                           ; 1 bytes @ 0x1
 11731                           
 11732  0071                     ??_Config_GP3:	
 11733                           ; 1 bytes @ 0x1
 11734                           
 11735  0071                     ??_eeprom_write:	
 11736                           ; 1 bytes @ 0x1
 11737                           
 11738  0071                     RegisterRead@add:	
 11739                           ; 1 bytes @ 0x1
 11740                           
 11741  0071                     eeprom_write@addr:	
 11742                           ; 1 bytes @ 0x1
 11743                           
 11744  0071                     i1GPort_GP1_PWM@duty:	
 11745                           ; 1 bytes @ 0x1
 11746                           
 11747                           
 11748                           ; 1 bytes @ 0x1
 11749  0071                     	ds	1
 11750  0072                     ??_TMR3_ISR:	
 11751  0072                     ??_Config_GP1:	
 11752                           ; 1 bytes @ 0x2
 11753                           
 11754  0072                     ??_TMR3_WriteTimer:	
 11755                           ; 1 bytes @ 0x2
 11756                           
 11757  0072                     RegisterRead@return_value:	
 11758                           ; 1 bytes @ 0x2
 11759                           
 11760  0072                     ___wmul@multiplicand:	
 11761                           ; 1 bytes @ 0x2
 11762                           
 11763                           
 11764                           ; 2 bytes @ 0x2
 11765  0072                     	ds	2
 11766  0074                     ??___wmul:	
 11767  0074                     ___wmul@product:	
 11768                           ; 1 bytes @ 0x4
 11769                           
 11770  0074                     ___flge@ff2:	
 11771                           ; 2 bytes @ 0x4
 11772                           
 11773  0074                     ___fladd@a:	
 11774                           ; 4 bytes @ 0x4
 11775                           
 11776                           
 11777                           ; 4 bytes @ 0x4
 11778  0074                     	ds	2
 11779  0076                     ?_RegisterWrite:	
 11780  0076                     RegisterWrite@data:	
 11781                           ; 1 bytes @ 0x6
 11782                           
 11783                           
 11784                           ; 1 bytes @ 0x6
 11785  0076                     	ds	1
 11786  0077                     ??_RegisterWrite:	
 11787  0077                     RegisterWrite@add:	
 11788                           ; 1 bytes @ 0x7
 11789                           
 11790                           
 11791                           ; 1 bytes @ 0x7
 11792  0077                     	ds	1
 11793  0078                     ??_I2C1_StatusCallback:	
 11794  0078                     ??___flge:	
 11795                           ; 1 bytes @ 0x8
 11796                           
 11797  0078                     I2C1_StatusCallback@i2c_bus_state:	
 11798                           ; 1 bytes @ 0x8
 11799                           
 11800  0078                     ___fladd@signs:	
 11801                           ; 1 bytes @ 0x8
 11802                           
 11803                           
 11804                           ; 1 bytes @ 0x8
 11805  0078                     	ds	1
 11806  0079                     ??_I2C1_ISR:	
 11807  0079                     I2C1_ISR@i2c_data:	
 11808                           ; 1 bytes @ 0x9
 11809                           
 11810  0079                     ___fladd@aexp:	
 11811                           ; 1 bytes @ 0x9
 11812                           
 11813                           
 11814                           ; 1 bytes @ 0x9
 11815  0079                     	ds	1
 11816  007A                     ___fladd@bexp:	
 11817                           
 11818                           ; 1 bytes @ 0xA
 11819  007A                     	ds	1
 11820  007B                     ___fladd@grs:	
 11821                           
 11822                           ; 1 bytes @ 0xB
 11823  007B                     	ds	1
 11824  007C                     ??_CLC2_ISR:	
 11825  007C                     ??_CLC1_ISR:	
 11826                           ; 1 bytes @ 0xC
 11827                           
 11828  007C                     ??_INTERRUPT_InterruptManager:	
 11829                           ; 1 bytes @ 0xC
 11830                           
 11831  007C                     ??___flsub:	
 11832                           ; 1 bytes @ 0xC
 11833                           
 11834                           
 11835                           	psect	cstackBANK0
 11836  0054                     __pcstackBANK0:	
 11837                           ; 1 bytes @ 0xC
 11838                           
 11839  0054                     ??___fladd:	
 11840                           
 11841                           ; 1 bytes @ 0x0
 11842  0054                     	ds	8
 11843  005C                     ??_CLC_1_Interrupt:	
 11844  005C                     ?___flsub:	
 11845                           ; 1 bytes @ 0x8
 11846                           
 11847  005C                     ___flsub@a:	
 11848                           ; 4 bytes @ 0x8
 11849                           
 11850                           
 11851                           ; 4 bytes @ 0x8
 11852  005C                     	ds	4
 11853  0060                     ___flsub@b:	
 11854                           
 11855                           ; 4 bytes @ 0xC
 11856  0060                     	ds	4
 11857  0064                     ??_CLC_2_Interrupt:	
 11858                           
 11859                           ; 1 bytes @ 0x10
 11860  0064                     	ds	4
 11861                           
 11862                           	psect	text1
 11863  0B4B                     __ptext1:	
 11864 ;; *************** function _TMR3_StartTimer *****************
 11865 ;; Defined at:
 11866 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 11867 ;; Parameters:    Size  Location     Type
 11868 ;;		None
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;		None
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  1    wreg      void 
 11873 ;; Registers used:
 11874 ;;		None
 11875 ;; Tracked objects:
 11876 ;;		On entry : 1F/1
 11877 ;;		On exit  : 1F/8
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11884 ;;Total ram usage:        0 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; Hardware stack levels required when called:    7
 11887 ;; This function calls:
 11888 ;;		Nothing
 11889 ;; This function is called by:
 11890 ;;		_main
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           
 11895                           ;psect for function _TMR3_StartTimer
 11896  0B4B                     _TMR3_StartTimer:	
 11897                           
 11898                           ;tmr3.c: 96: T3CONbits.TMR3ON = 1;
 11899                           
 11900                           ;incstack = 0
 11901                           ; Regs used in _TMR3_StartTimer: []
 11902  0B4B  0028               	movlb	8	; select bank8
 11903  0B4C  1413               	bsf	19,0	;volatile
 11904  0B4D  0008               	return
 11905  0B4E                     __end_of_TMR3_StartTimer:	
 11906                           
 11907                           	psect	text3
 11908  0B4E                     __ptext3:	
 11909 ;; *************** function _WDT_Initialize *****************
 11910 ;; Defined at:
 11911 ;;		line 80 in file "mcc_generated_files/mcc.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;		None
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;		None
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      void 
 11918 ;; Registers used:
 11919 ;;		wreg
 11920 ;; Tracked objects:
 11921 ;;		On entry : B1F/12
 11922 ;;		On exit  : B1F/1
 11923 ;;		Unchanged: B00/0
 11924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;Total ram usage:        0 bytes
 11930 ;; Hardware stack levels used:    1
 11931 ;; Hardware stack levels required when called:    7
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_SYSTEM_Initialize
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           
 11940                           ;psect for function _WDT_Initialize
 11941  0B4E                     _WDT_Initialize:	
 11942                           
 11943                           ;mcc.c: 83: WDTCON = 0x16;
 11944                           
 11945                           ;incstack = 0
 11946                           ; Regs used in _WDT_Initialize: [wreg]
 11947  0B4E  3016               	movlw	22
 11948  0B4F  0021               	movlb	1	; select bank1
 11949  0B50  0097               	movwf	23	;volatile
 11950  0B51  0008               	return
 11951  0B52                     __end_of_WDT_Initialize:	
 11952                           
 11953                           	psect	text4
 11954  07E2                     __ptext4:	
 11955 ;; *************** function _TMR3_Initialize *****************
 11956 ;; Defined at:
 11957 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0, pclath, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : B1F/1
 11968 ;;		On exit  : 1F/8
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;Total ram usage:        0 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    8
 11978 ;; This function calls:
 11979 ;;		_TMR3_SetInterruptHandler
 11980 ;; This function is called by:
 11981 ;;		_SYSTEM_Initialize
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           
 11986                           ;psect for function _TMR3_Initialize
 11987  07E2                     _TMR3_Initialize:	
 11988  07E2                     l6559:	
 11989                           ;incstack = 0
 11990                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11991                           
 11992                           
 11993                           ;tmr3.c: 69: T3GCON = 0x00;
 11994  07E2  0028               	movlb	8	; select bank8
 11995  07E3  0194               	clrf	20	;volatile
 11996                           
 11997                           ;tmr3.c: 72: TMR3H = 0xE0;
 11998  07E4  30E0               	movlw	224
 11999  07E5  0092               	movwf	18	;volatile
 12000                           
 12001                           ;tmr3.c: 75: TMR3L = 0xC0;
 12002  07E6  30C0               	movlw	192
 12003  07E7  0091               	movwf	17	;volatile
 12004                           
 12005                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 12006  07E8  0812               	movf	18,w	;volatile
 12007  07E9  0021               	movlb	1	; select bank1
 12008  07EA  00A9               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 12009  07EB  01A8               	clrf	_timer3ReloadVal^(0+128)	;volatile
 12010  07EC  0028               	movlb	8	; select bank8
 12011  07ED  0811               	movf	17,w	;volatile
 12012  07EE  0021               	movlb	1	; select bank1
 12013  07EF  04A8               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 12014                           
 12015                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 12016  07F0  0020               	movlb	0	; select bank0
 12017  07F1  1213               	bcf	19,4	;volatile
 12018                           
 12019                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 12020  07F2  0021               	movlb	1	; select bank1
 12021  07F3  1613               	bsf	19,4	;volatile
 12022                           
 12023                           ;tmr3.c: 87: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 12024  07F4  30FE               	movlw	low _TMR3_DefaultInterruptHandler
 12025  07F5  00B6               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 12026  07F6  3007               	movlw	high _TMR3_DefaultInterruptHandler
 12027  07F7  00B7               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 12028  07F8  3183  23E4         	fcall	_TMR3_SetInterruptHandler
 12029                           
 12030                           ;tmr3.c: 90: T3CON = 0x01;
 12031  07FA  3001               	movlw	1
 12032  07FB  0028               	movlb	8	; select bank8
 12033  07FC  0093               	movwf	19	;volatile
 12034  07FD  0008               	return
 12035  07FE                     __end_of_TMR3_Initialize:	
 12036                           
 12037                           	psect	text6
 12038  0B58                     __ptext6:	
 12039 ;; *************** function _TMR2_Initialize *****************
 12040 ;; Defined at:
 12041 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2
 12050 ;; Tracked objects:
 12051 ;;		On entry : B1F/1
 12052 ;;		On exit  : B1F/0
 12053 ;;		Unchanged: B00/0
 12054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;Total ram usage:        0 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    7
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_SYSTEM_Initialize
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           
 12070                           ;psect for function _TMR2_Initialize
 12071  0B58                     _TMR2_Initialize:	
 12072                           
 12073                           ;tmr2.c: 67: PR2 = 0x3F;
 12074                           
 12075                           ;incstack = 0
 12076                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12077  0B58  303F               	movlw	63
 12078  0B59  0020               	movlb	0	; select bank0
 12079  0B5A  009E               	movwf	30	;volatile
 12080                           
 12081                           ;tmr2.c: 70: TMR2 = 0x00;
 12082  0B5B  019D               	clrf	29	;volatile
 12083                           
 12084                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 12085  0B5C  1091               	bcf	17,1	;volatile
 12086                           
 12087                           ;tmr2.c: 76: T2CON = 0x04;
 12088  0B5D  3004               	movlw	4
 12089  0B5E  009F               	movwf	31	;volatile
 12090  0B5F  0008               	return
 12091  0B60                     __end_of_TMR2_Initialize:	
 12092                           
 12093                           	psect	text7
 12094  0B60                     __ptext7:	
 12095 ;; *************** function _PMD_Initialize *****************
 12096 ;; Defined at:
 12097 ;;		line 86 in file "mcc_generated_files/mcc.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		wreg
 12106 ;; Tracked objects:
 12107 ;;		On entry : B1F/0
 12108 ;;		On exit  : B1F/12
 12109 ;;		Unchanged: B00/0
 12110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;Total ram usage:        0 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:    7
 12118 ;; This function calls:
 12119 ;;		Nothing
 12120 ;; This function is called by:
 12121 ;;		_SYSTEM_Initialize
 12122 ;; This function uses a non-reentrant model
 12123 ;;
 12124                           
 12125                           
 12126                           ;psect for function _PMD_Initialize
 12127  0B60                     _PMD_Initialize:	
 12128                           
 12129                           ;mcc.c: 89: PMD0 = 0x40;
 12130                           
 12131                           ;incstack = 0
 12132                           ; Regs used in _PMD_Initialize: [wreg]
 12133  0B60  3040               	movlw	64
 12134  0B61  0032               	movlb	18	; select bank18
 12135  0B62  0091               	movwf	17	;volatile
 12136                           
 12137                           ;mcc.c: 91: PMD1 = 0xF2;
 12138  0B63  30F2               	movlw	242
 12139  0B64  0092               	movwf	18	;volatile
 12140                           
 12141                           ;mcc.c: 93: PMD2 = 0x46;
 12142  0B65  3046               	movlw	70
 12143  0B66  0093               	movwf	19	;volatile
 12144                           
 12145                           ;mcc.c: 95: PMD3 = 0xE0;
 12146  0B67  30E0               	movlw	224
 12147  0B68  0094               	movwf	20	;volatile
 12148                           
 12149                           ;mcc.c: 97: PMD4 = 0x20;
 12150  0B69  3020               	movlw	32
 12151  0B6A  0095               	movwf	21	;volatile
 12152                           
 12153                           ;mcc.c: 99: PMD5 = 0x19;
 12154  0B6B  3019               	movlw	25
 12155  0B6C  0096               	movwf	22	;volatile
 12156  0B6D  0008               	return
 12157  0B6E                     __end_of_PMD_Initialize:	
 12158                           
 12159                           	psect	text8
 12160  0BD1                     __ptext8:	
 12161 ;; *************** function _PIN_MANAGER_Initialize *****************
 12162 ;; Defined at:
 12163 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12164 ;; Parameters:    Size  Location     Type
 12165 ;;		None
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;		None
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      void 
 12170 ;; Registers used:
 12171 ;;		wreg, status,2, status,0
 12172 ;; Tracked objects:
 12173 ;;		On entry : B1F/12
 12174 ;;		On exit  : B1F/1D
 12175 ;;		Unchanged: B00/0
 12176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;Total ram usage:        0 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; Hardware stack levels required when called:    7
 12184 ;; This function calls:
 12185 ;;		Nothing
 12186 ;; This function is called by:
 12187 ;;		_SYSTEM_Initialize
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           
 12192                           ;psect for function _PIN_MANAGER_Initialize
 12193  0BD1                     _PIN_MANAGER_Initialize:	
 12194                           
 12195                           ;pin_manager.c: 62: LATA = 0x00;
 12196                           
 12197                           ;incstack = 0
 12198                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12199  0BD1  0022               	movlb	2	; select bank2
 12200  0BD2  018C               	clrf	12	;volatile
 12201                           
 12202                           ;pin_manager.c: 63: LATB = 0x00;
 12203  0BD3  018D               	clrf	13	;volatile
 12204                           
 12205                           ;pin_manager.c: 64: LATC = 0x00;
 12206  0BD4  018E               	clrf	14	;volatile
 12207                           
 12208                           ;pin_manager.c: 69: TRISA = 0x37;
 12209  0BD5  3037               	movlw	55
 12210  0BD6  0021               	movlb	1	; select bank1
 12211  0BD7  008C               	movwf	12	;volatile
 12212                           
 12213                           ;pin_manager.c: 70: TRISB = 0xD0;
 12214  0BD8  30D0               	movlw	208
 12215  0BD9  008D               	movwf	13	;volatile
 12216                           
 12217                           ;pin_manager.c: 71: TRISC = 0xFF;
 12218  0BDA  30FF               	movlw	255
 12219  0BDB  008E               	movwf	14	;volatile
 12220                           
 12221                           ;pin_manager.c: 76: ANSELC = 0x00;
 12222  0BDC  0023               	movlb	3	; select bank3
 12223  0BDD  018E               	clrf	14	;volatile
 12224                           
 12225                           ;pin_manager.c: 77: ANSELB = 0x20;
 12226  0BDE  3020               	movlw	32
 12227  0BDF  008D               	movwf	13	;volatile
 12228                           
 12229                           ;pin_manager.c: 78: ANSELA = 0x00;
 12230  0BE0  018C               	clrf	12	;volatile
 12231                           
 12232                           ;pin_manager.c: 83: WPUB = 0x10;
 12233  0BE1  3010               	movlw	16
 12234  0BE2  0024               	movlb	4	; select bank4
 12235  0BE3  008D               	movwf	13	;volatile
 12236                           
 12237                           ;pin_manager.c: 84: WPUA = 0x3F;
 12238  0BE4  303F               	movlw	63
 12239  0BE5  008C               	movwf	12	;volatile
 12240                           
 12241                           ;pin_manager.c: 85: WPUC = 0x00;
 12242  0BE6  018E               	clrf	14	;volatile
 12243                           
 12244                           ;pin_manager.c: 90: ODCONA = 0x00;
 12245  0BE7  0025               	movlb	5	; select bank5
 12246  0BE8  018C               	clrf	12	;volatile
 12247                           
 12248                           ;pin_manager.c: 91: ODCONB = 0x20;
 12249  0BE9  3020               	movlw	32
 12250  0BEA  008D               	movwf	13	;volatile
 12251                           
 12252                           ;pin_manager.c: 92: ODCONC = 0x00;
 12253  0BEB  018E               	clrf	14	;volatile
 12254                           
 12255                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 12256  0BEC  003C               	movlb	28	; select bank28
 12257  0BED  0820               	movf	32,w	;volatile
 12258  0BEE  39E0               	andlw	-32
 12259  0BEF  380E               	iorlw	14
 12260  0BF0  00A0               	movwf	32	;volatile
 12261                           
 12262                           ;pin_manager.c: 102: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 12263  0BF1  0821               	movf	33,w	;volatile
 12264  0BF2  39E0               	andlw	-32
 12265  0BF3  380F               	iorlw	15
 12266  0BF4  00A1               	movwf	33	;volatile
 12267                           
 12268                           ;pin_manager.c: 103: CLCIN1PPSbits.CLCIN1PPS = 0x11;
 12269  0BF5  0829               	movf	41,w	;volatile
 12270  0BF6  39E0               	andlw	-32
 12271  0BF7  3811               	iorlw	17
 12272  0BF8  00A9               	movwf	41	;volatile
 12273                           
 12274                           ;pin_manager.c: 104: CLCIN0PPSbits.CLCIN0PPS = 0x10;
 12275  0BF9  0828               	movf	40,w	;volatile
 12276  0BFA  39E0               	andlw	-32
 12277  0BFB  3810               	iorlw	16
 12278  0BFC  00A8               	movwf	40	;volatile
 12279                           
 12280                           ;pin_manager.c: 105: RB7PPSbits.RB7PPS = 0x19;
 12281  0BFD  003D               	movlb	29	; select bank29
 12282  0BFE  081F               	movf	31,w	;volatile
 12283  0BFF  39E0               	andlw	-32
 12284  0C00  3819               	iorlw	25
 12285  0C01  009F               	movwf	31	;volatile
 12286                           
 12287                           ;pin_manager.c: 106: RB6PPSbits.RB6PPS = 0x18;
 12288  0C02  081E               	movf	30,w	;volatile
 12289  0C03  39E0               	andlw	-32
 12290  0C04  3818               	iorlw	24
 12291  0C05  009E               	movwf	30	;volatile
 12292  0C06  0008               	return
 12293  0C07                     __end_of_PIN_MANAGER_Initialize:	
 12294                           
 12295                           	psect	text10
 12296  0B6E                     __ptext10:	
 12297 ;; *************** function _I2C1_Initialize *****************
 12298 ;; Defined at:
 12299 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;		None
 12302 ;; Auto vars:     Size  Location     Type
 12303 ;;		None
 12304 ;; Return value:  Size  Location     Type
 12305 ;;                  1    wreg      void 
 12306 ;; Registers used:
 12307 ;;		wreg, status,2
 12308 ;; Tracked objects:
 12309 ;;		On entry : B1F/0
 12310 ;;		On exit  : B1F/1
 12311 ;;		Unchanged: B00/0
 12312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;Total ram usage:        0 bytes
 12318 ;; Hardware stack levels used:    1
 12319 ;; Hardware stack levels required when called:    7
 12320 ;; This function calls:
 12321 ;;		Nothing
 12322 ;; This function is called by:
 12323 ;;		_SYSTEM_Initialize
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           
 12328                           ;psect for function _I2C1_Initialize
 12329  0B6E                     _I2C1_Initialize:	
 12330                           
 12331                           ;i2c1.c: 78: SSP1STAT = 0x00;
 12332                           
 12333                           ;incstack = 0
 12334                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12335  0B6E  0024               	movlb	4	; select bank4
 12336  0B6F  0194               	clrf	20	;volatile
 12337                           
 12338                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 12339  0B70  3026               	movlw	38
 12340  0B71  0095               	movwf	21	;volatile
 12341                           
 12342                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 12343  0B72  0196               	clrf	22	;volatile
 12344                           
 12345                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 12346  0B73  0197               	clrf	23	;volatile
 12347                           
 12348                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 12349  0B74  30FE               	movlw	254
 12350  0B75  0093               	movwf	19	;volatile
 12351                           
 12352                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 12353  0B76  0020               	movlb	0	; select bank0
 12354  0B77  0853               	movf	_i2c_address,w	;volatile
 12355  0B78  0024               	movlb	4	; select bank4
 12356  0B79  0092               	movwf	18	;volatile
 12357                           
 12358                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 12359  0B7A  0020               	movlb	0	; select bank0
 12360  0B7B  1191               	bcf	17,3	;volatile
 12361                           
 12362                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 12363  0B7C  0021               	movlb	1	; select bank1
 12364  0B7D  1591               	bsf	17,3	;volatile
 12365  0B7E  0008               	return
 12366  0B7F                     __end_of_I2C1_Initialize:	
 12367                           
 12368                           	psect	text13
 12369  0B7F                     __ptext13:	
 12370 ;; *************** function _CLC1_Initialize *****************
 12371 ;; Defined at:
 12372 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;		None
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg, status,2
 12381 ;; Tracked objects:
 12382 ;;		On entry : B1F/0
 12383 ;;		On exit  : B1F/1
 12384 ;;		Unchanged: B00/0
 12385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;Total ram usage:        0 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    7
 12393 ;; This function calls:
 12394 ;;		Nothing
 12395 ;; This function is called by:
 12396 ;;		_SYSTEM_Initialize
 12397 ;; This function uses a non-reentrant model
 12398 ;;
 12399                           
 12400                           
 12401                           ;psect for function _CLC1_Initialize
 12402  0B7F                     _CLC1_Initialize:	
 12403                           
 12404                           ;clc1.c: 63: CLC1POL = 0x04;
 12405                           
 12406                           ;incstack = 0
 12407                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 12408  0B7F  3004               	movlw	4
 12409  0B80  003E               	movlb	30	; select bank30
 12410  0B81  0091               	movwf	17	;volatile
 12411                           
 12412                           ;clc1.c: 65: CLC1SEL0 = 0x00;
 12413  0B82  0192               	clrf	18	;volatile
 12414                           
 12415                           ;clc1.c: 67: CLC1SEL1 = 0x01;
 12416  0B83  3001               	movlw	1
 12417  0B84  0093               	movwf	19	;volatile
 12418                           
 12419                           ;clc1.c: 69: CLC1SEL2 = 0x01;
 12420  0B85  0094               	movwf	20	;volatile
 12421                           
 12422                           ;clc1.c: 71: CLC1SEL3 = 0x01;
 12423  0B86  0095               	movwf	21	;volatile
 12424                           
 12425                           ;clc1.c: 73: CLC1GLS0 = 0x02;
 12426  0B87  3002               	movlw	2
 12427  0B88  0096               	movwf	22	;volatile
 12428                           
 12429                           ;clc1.c: 75: CLC1GLS1 = 0xA8;
 12430  0B89  30A8               	movlw	168
 12431  0B8A  0097               	movwf	23	;volatile
 12432                           
 12433                           ;clc1.c: 77: CLC1GLS2 = 0xA8;
 12434  0B8B  0098               	movwf	24	;volatile
 12435                           
 12436                           ;clc1.c: 79: CLC1GLS3 = 0xA8;
 12437  0B8C  0099               	movwf	25	;volatile
 12438                           
 12439                           ;clc1.c: 81: CLC1CON = 0x95;
 12440  0B8D  3095               	movlw	149
 12441  0B8E  0090               	movwf	16	;volatile
 12442                           
 12443                           ;clc1.c: 84: PIR3bits.CLC1IF = 0;
 12444  0B8F  0020               	movlb	0	; select bank0
 12445  0B90  1013               	bcf	19,0	;volatile
 12446                           
 12447                           ;clc1.c: 86: PIE3bits.CLC1IE = 1;
 12448  0B91  0021               	movlb	1	; select bank1
 12449  0B92  1413               	bsf	19,0	;volatile
 12450  0B93  0008               	return
 12451  0B94                     __end_of_CLC1_Initialize:	
 12452                           
 12453                           	psect	swtext1
 12454  0850                     __pswtext1:	
 12455  0850                     S7395:	
 12456  0850  3181  296A         	ljmp	l6775
 12457  0852  3181  2981         	ljmp	l6789
 12458  0854  3181  298F         	ljmp	l1293
 12459  0856  3181  299E         	ljmp	l1296
 12460                           
 12461                           	psect	swtext2
 12462  0858                     __pswtext2:	
 12463  0858                     S7397:	
 12464  0858  3181  291A         	ljmp	l6727
 12465  085A  3181  2931         	ljmp	l6741
 12466  085C  3181  293F         	ljmp	l1277
 12467  085E  3181  294E         	ljmp	l1280
 12468                           
 12469                           	psect	swtext3
 12470  0860                     __pswtext3:	
 12471  0860                     S7399:	
 12472  0860  3180  28D3         	ljmp	l6681
 12473  0862  3180  28E6         	ljmp	l6695
 12474  0864  3180  28F4         	ljmp	l1262
 12475  0866  3181  2902         	ljmp	l1265
 12476                           
 12477                           	psect	swtext4
 12478  0844                     __pswtext4:	
 12479  0844                     S7401:	
 12480  0844  3181  29F7         	ljmp	l6911
 12481  0846  3182  2A01         	ljmp	l6917
 12482  0848  3182  2A09         	ljmp	l6921
 12483  084A  3182  2A11         	ljmp	l6925
 12484  084C  3182  2A20         	ljmp	l6933
 12485  084E  3182  2A2F         	ljmp	l6947
 12486                           
 12487                           	psect	intentry
 12488  0004                     __pintentry:	
 12489 ;; *************** function _INTERRUPT_InterruptManager *****************
 12490 ;; Defined at:
 12491 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;		None
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;		None
 12496 ;; Return value:  Size  Location     Type
 12497 ;;                  1    wreg      void 
 12498 ;; Registers used:
 12499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12500 ;; Tracked objects:
 12501 ;;		On entry : 0/0
 12502 ;;		On exit  : 0/0
 12503 ;;		Unchanged: 0/0
 12504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12509 ;;Total ram usage:        0 bytes
 12510 ;; Hardware stack levels used:    1
 12511 ;; Hardware stack levels required when called:    6
 12512 ;; This function calls:
 12513 ;;		_CLC1_ISR
 12514 ;;		_CLC2_ISR
 12515 ;;		_I2C1_ISR
 12516 ;;		_TMR3_ISR
 12517 ;; This function is called by:
 12518 ;;		Interrupt level 1
 12519 ;; This function uses a non-reentrant model
 12520 ;;
 12521                           
 12522  0004                     _INTERRUPT_InterruptManager:	
 12523                           
 12524                           ;incstack = 0
 12525  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12526                           
 12527                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12528  0005  3180               	pagesel	$
 12529                           
 12530                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 12531  0006  1F0B               	btfss	11,6	;volatile
 12532  0007  282E               	goto	i1l89
 12533                           
 12534                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 12535  0008  0021               	movlb	1	; select bank1
 12536  0009  1C93               	btfss	19,1	;volatile
 12537  000A  2812               	goto	i1l80
 12538  000B  0020               	movlb	0	; select bank0
 12539  000C  1C93               	btfss	19,1	;volatile
 12540  000D  2812               	goto	i1l80
 12541                           
 12542                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 12543  000E  3184  2430  3180   	fcall	_CLC2_ISR
 12544                           
 12545                           ;interrupt_manager.c: 60: }
 12546  0011  282E               	goto	i1l89
 12547  0012                     i1l80:	
 12548                           
 12549                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 12550  0012  0021               	movlb	1	; select bank1
 12551  0013  1C13               	btfss	19,0	;volatile
 12552  0014  281C               	goto	i1l82
 12553  0015  0020               	movlb	0	; select bank0
 12554  0016  1C13               	btfss	19,0	;volatile
 12555  0017  281C               	goto	i1l82
 12556                           
 12557                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 12558  0018  3184  2434  3180   	fcall	_CLC1_ISR
 12559                           
 12560                           ;interrupt_manager.c: 64: }
 12561  001B  282E               	goto	i1l89
 12562  001C                     i1l82:	
 12563                           
 12564                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 12565  001C  0021               	movlb	1	; select bank1
 12566  001D  1D91               	btfss	17,3	;volatile
 12567  001E  2826               	goto	i1l84
 12568  001F  0020               	movlb	0	; select bank0
 12569  0020  1D91               	btfss	17,3	;volatile
 12570  0021  2826               	goto	i1l84
 12571                           
 12572                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 12573  0022  318B  2394  3180   	fcall	_I2C1_ISR
 12574                           
 12575                           ;interrupt_manager.c: 68: }
 12576  0025  282E               	goto	i1l89
 12577  0026                     i1l84:	
 12578                           
 12579                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 12580  0026  0021               	movlb	1	; select bank1
 12581  0027  1E13               	btfss	19,4	;volatile
 12582  0028  282E               	goto	i1l89
 12583  0029  0020               	movlb	0	; select bank0
 12584  002A  1E13               	btfss	19,4	;volatile
 12585  002B  282E               	goto	i1l89
 12586                           
 12587                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 12588  002C  318B  23AE         	fcall	_TMR3_ISR
 12589  002E                     i1l89:	
 12590                           ;interrupt_manager.c: 72: }
 12591                           
 12592  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12593  002F  0009               	retfie
 12594  0030                     __end_of_INTERRUPT_InterruptManager:	
 12595                           
 12596                           	psect	text42
 12597  0BAE                     __ptext42:	
 12598 ;; *************** function _TMR3_ISR *****************
 12599 ;; Defined at:
 12600 ;;		line 157 in file "mcc_generated_files/tmr3.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;		None
 12603 ;; Auto vars:     Size  Location     Type
 12604 ;;		None
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  1    wreg      void 
 12607 ;; Registers used:
 12608 ;;		wreg, status,2, status,0, pclath, cstack
 12609 ;; Tracked objects:
 12610 ;;		On entry : 1F/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;Total ram usage:        0 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:    2
 12621 ;; This function calls:
 12622 ;;		_TMR3_CallBack
 12623 ;;		_TMR3_WriteTimer
 12624 ;; This function is called by:
 12625 ;;		_INTERRUPT_InterruptManager
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           
 12630                           ;psect for function _TMR3_ISR
 12631  0BAE                     _TMR3_ISR:	
 12632                           
 12633                           ;tmr3.c: 161: PIR3bits.TMR3IF = 0;
 12634                           
 12635                           ;incstack = 0
 12636                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 12637  0BAE  1213               	bcf	19,4	;volatile
 12638                           
 12639                           ;tmr3.c: 162: TMR3_WriteTimer(timer3ReloadVal);
 12640  0BAF  0021               	movlb	1	; select bank1
 12641  0BB0  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 12642  0BB1  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 12643  0BB2  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
 12644  0BB3  00F0               	movwf	TMR3_WriteTimer@timerVal
 12645  0BB4  23C2  318B         	fcall	_TMR3_WriteTimer
 12646                           
 12647                           ;tmr3.c: 166: TMR3_CallBack();
 12648  0BB6  2BB7               	ljmp	i1l5449
 12649  0BB7                     __end_of_TMR3_ISR:	
 12650  0BB7                     __ptext44:	
 12651 ;; *************** function _TMR3_CallBack *****************
 12652 ;; Defined at:
 12653 ;;		line 169 in file "mcc_generated_files/tmr3.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;		None
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;		None
 12658 ;; Return value:  Size  Location     Type
 12659 ;;                  1    wreg      void 
 12660 ;; Registers used:
 12661 ;;		wreg, status,2, status,0, pclath, cstack
 12662 ;; Tracked objects:
 12663 ;;		On entry : 1F/8
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12671 ;;Total ram usage:        0 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:    1
 12674 ;; This function calls:
 12675 ;;		Absolute function
 12676 ;;		_TMR3_DefaultInterruptHandler
 12677 ;;		_TimerInt
 12678 ;; This function is called by:
 12679 ;;		_TMR3_ISR
 12680 ;; This function uses a non-reentrant model
 12681 ;;
 12682                           
 12683                           
 12684                           ;psect for function _TMR3_CallBack
 12685  0BB7                     _TMR3_CallBack:	
 12686  0BB7                     i1l5449:	
 12687                           ;incstack = 0
 12688                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12689                           
 12690                           
 12691                           ;tmr3.c: 172: if(TMR3_InterruptHandler)
 12692  0BB7  0021               	movlb	1	; select bank1
 12693  0BB8  0826               	movf	_TMR3_InterruptHandler^(0+128),w
 12694  0BB9  0427               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 12695  0BBA  1903               	btfsc	3,2
 12696  0BBB  0008               	return
 12697                           
 12698                           ;tmr3.c: 173: {;tmr3.c: 174: TMR3_InterruptHandler();
 12699  0BBC  0827               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 12700  0BBD  008A               	movwf	10
 12701  0BBE  0826               	movf	_TMR3_InterruptHandler^(0+128),w
 12702  0BBF  000A               	callw
 12703  0BC0  318B               	pagesel	$
 12704  0BC1  0008               	return
 12705  0BC2                     __end_of_TMR3_CallBack:	
 12706  0BC2                     __ptext43:	
 12707 ;; *************** function _TMR3_WriteTimer *****************
 12708 ;; Defined at:
 12709 ;;		line 120 in file "mcc_generated_files/tmr3.c"
 12710 ;; Parameters:    Size  Location     Type
 12711 ;;  timerVal        2    0[COMMON] unsigned int 
 12712 ;; Auto vars:     Size  Location     Type
 12713 ;;		None
 12714 ;; Return value:  Size  Location     Type
 12715 ;;                  1    wreg      void 
 12716 ;; Registers used:
 12717 ;;		wreg
 12718 ;; Tracked objects:
 12719 ;;		On entry : 1F/1
 12720 ;;		On exit  : 1F/8
 12721 ;;		Unchanged: 0/0
 12722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12727 ;;Total ram usage:        2 bytes
 12728 ;; Hardware stack levels used:    1
 12729 ;; This function calls:
 12730 ;;		Nothing
 12731 ;; This function is called by:
 12732 ;;		_TMR3_ISR
 12733 ;; This function uses a non-reentrant model
 12734 ;;
 12735                           
 12736                           
 12737                           ;psect for function _TMR3_WriteTimer
 12738  0BC2                     _TMR3_WriteTimer:	
 12739                           
 12740                           ;tmr3.c: 122: if (T3CONbits.T3SYNC == 1)
 12741                           
 12742                           ;incstack = 0
 12743                           ; Regs used in _TMR3_WriteTimer: [wreg]
 12744  0BC2  0028               	movlb	8	; select bank8
 12745  0BC3  1D13               	btfss	19,2	;volatile
 12746  0BC4  2BCC               	goto	i1l5447
 12747                           
 12748                           ;tmr3.c: 123: {;tmr3.c: 125: T3CONbits.TMR3ON = 0;
 12749  0BC5  1013               	bcf	19,0	;volatile
 12750                           
 12751                           ;tmr3.c: 128: TMR3H = (timerVal >> 8);
 12752  0BC6  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 12753  0BC7  0092               	movwf	18	;volatile
 12754                           
 12755                           ;tmr3.c: 129: TMR3L = timerVal;
 12756  0BC8  0870               	movf	TMR3_WriteTimer@timerVal,w
 12757  0BC9  0091               	movwf	17	;volatile
 12758                           
 12759                           ;tmr3.c: 132: T3CONbits.TMR3ON =1;
 12760  0BCA  1413               	bsf	19,0	;volatile
 12761                           
 12762                           ;tmr3.c: 133: }
 12763  0BCB  0008               	return
 12764  0BCC                     i1l5447:	
 12765                           
 12766                           ;tmr3.c: 134: else;tmr3.c: 135: {;tmr3.c: 137: TMR3H = (timerVal >> 8);
 12767  0BCC  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 12768  0BCD  0092               	movwf	18	;volatile
 12769                           
 12770                           ;tmr3.c: 138: TMR3L = timerVal;
 12771  0BCE  0870               	movf	TMR3_WriteTimer@timerVal,w
 12772  0BCF  0091               	movwf	17	;volatile
 12773  0BD0  0008               	return
 12774  0BD1                     __end_of_TMR3_WriteTimer:	
 12775                           
 12776                           	psect	text45
 12777  07FE                     __ptext45:	
 12778 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 12779 ;; Defined at:
 12780 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 12781 ;; Parameters:    Size  Location     Type
 12782 ;;		None
 12783 ;; Auto vars:     Size  Location     Type
 12784 ;;		None
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  1    wreg      void 
 12787 ;; Registers used:
 12788 ;;		None
 12789 ;; Tracked objects:
 12790 ;;		On entry : 1F/1
 12791 ;;		On exit  : 1F/1
 12792 ;;		Unchanged: 1F/0
 12793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12798 ;;Total ram usage:        0 bytes
 12799 ;; Hardware stack levels used:    1
 12800 ;; This function calls:
 12801 ;;		Nothing
 12802 ;; This function is called by:
 12803 ;;		_TMR3_Initialize
 12804 ;;		_TMR3_CallBack
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           
 12809                           ;psect for function _TMR3_DefaultInterruptHandler
 12810  07FE                     _TMR3_DefaultInterruptHandler:	
 12811                           
 12812                           ;incstack = 0
 12813                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 12814  07FE  0008               	return
 12815  07FF                     __end_of_TMR3_DefaultInterruptHandler:	
 12816                           
 12817                           	psect	text46
 12818  0B48                     __ptext46:	
 12819 ;; *************** function _TimerInt *****************
 12820 ;; Defined at:
 12821 ;;		line 73 in file "main.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;		None
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;		None
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1    wreg      void 
 12828 ;; Registers used:
 12829 ;;		None
 12830 ;; Tracked objects:
 12831 ;;		On entry : 1F/1
 12832 ;;		On exit  : 1F/1
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12839 ;;Total ram usage:        0 bytes
 12840 ;; Hardware stack levels used:    1
 12841 ;; This function calls:
 12842 ;;		Nothing
 12843 ;; This function is called by:
 12844 ;;		_main
 12845 ;;		_TMR3_CallBack
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849                           
 12850                           ;psect for function _TimerInt
 12851  0B48                     _TimerInt:	
 12852                           
 12853                           ;main.c: 74: fsm_tmr = 1;
 12854                           
 12855                           ;incstack = 0
 12856                           ; Regs used in _TimerInt: []
 12857  0B48  01B5               	clrf	_fsm_tmr^(0+128)
 12858  0B49  0AB5               	incf	_fsm_tmr^(0+128),f
 12859  0B4A  0008               	return
 12860  0B4B                     __end_of_TimerInt:	
 12861                           
 12862                           	psect	text47
 12863  0B94                     __ptext47:	
 12864 ;; *************** function _I2C1_ISR *****************
 12865 ;; Defined at:
 12866 ;;		line 97 in file "mcc_generated_files/i2c1.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  i2c_data        1    9[COMMON] unsigned char 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 1F/0
 12877 ;;		On exit  : 1F/4
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;Total ram usage:        1 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    5
 12887 ;; This function calls:
 12888 ;;		_I2C1_StatusCallback
 12889 ;; This function is called by:
 12890 ;;		_INTERRUPT_InterruptManager
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           
 12895                           ;psect for function _I2C1_ISR
 12896  0B94                     _I2C1_ISR:	
 12897                           
 12898                           ;i2c1.c: 105: PIR1bits.SSP1IF = 0;
 12899                           
 12900                           ;incstack = 0
 12901                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12902  0B94  1191               	bcf	17,3	;volatile
 12903                           
 12904                           ;i2c1.c: 106: i2c_data = SSP1BUF;
 12905  0B95  0024               	movlb	4	; select bank4
 12906  0B96  0811               	movf	17,w	;volatile
 12907  0B97  00F9               	movwf	I2C1_ISR@i2c_data
 12908                           
 12909                           ;i2c1.c: 107: if(1 == SSP1STATbits.R_nW)
 12910  0B98  1D14               	btfss	20,2	;volatile
 12911  0B99  2BA1               	goto	i1l162
 12912                           
 12913                           ;i2c1.c: 108: {;i2c1.c: 109: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
 12914  0B9A  1A94               	btfsc	20,5	;volatile
 12915  0B9B  1F16               	btfss	22,6	;volatile
 12916  0B9C  2B9F               	goto	i1l5863
 12917                           
 12918                           ;i2c1.c: 110: {;i2c1.c: 112: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 12919  0B9D  3003               	movlw	3
 12920  0B9E  2BA9               	goto	L7
 12921  0B9F                     i1l5863:	
 12922                           ;i2c1.c: 113: }
 12923                           
 12924                           
 12925                           ;i2c1.c: 114: else;i2c1.c: 115: {;i2c1.c: 117: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUE
      +                          ST);
 12926  0B9F  3001               	movlw	1
 12927  0BA0  2BA9               	goto	L7
 12928  0BA1                     i1l162:	
 12929                           
 12930                           ;i2c1.c: 120: else if(0 == SSP1STATbits.D_nA)
 12931  0BA1  1A94               	btfsc	20,5	;volatile
 12932  0BA2  2BA5               	goto	i1l5867
 12933                           
 12934                           ;i2c1.c: 121: {;i2c1.c: 125: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 12935  0BA3  3000               	movlw	0
 12936  0BA4  2BA9               	goto	L7
 12937  0BA5                     i1l5867:	
 12938                           ;i2c1.c: 126: }
 12939                           
 12940                           
 12941                           ;i2c1.c: 127: else;i2c1.c: 128: {;i2c1.c: 129: I2C1_slaveWriteData = i2c_data;
 12942  0BA5  0879               	movf	I2C1_ISR@i2c_data,w
 12943  0BA6  0020               	movlb	0	; select bank0
 12944  0BA7  00E8               	movwf	_I2C1_slaveWriteData	;volatile
 12945                           
 12946                           ;i2c1.c: 132: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 12947  0BA8  3002               	movlw	2
 12948  0BA9                     L7:	
 12949  0BA9  318C  2407         	fcall	_I2C1_StatusCallback
 12950                           
 12951                           ;i2c1.c: 133: };i2c1.c: 135: SSP1CON1bits.CKP = 1;
 12952  0BAB  0024               	movlb	4	; select bank4
 12953  0BAC  1615               	bsf	21,4	;volatile
 12954  0BAD  0008               	return
 12955  0BAE                     __end_of_I2C1_ISR:	
 12956                           
 12957                           	psect	text48
 12958  0C07                     __ptext48:	
 12959 ;; *************** function _I2C1_StatusCallback *****************
 12960 ;; Defined at:
 12961 ;;		line 56 in file "i2c_register.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;  i2c_bus_stat    1    wreg     enum E66
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;  i2c_bus_stat    1    8[COMMON] enum E66
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1    wreg      void 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12970 ;; Tracked objects:
 12971 ;;		On entry : 1B/4
 12972 ;;		On exit  : 1A/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12979 ;;Total ram usage:        1 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:    4
 12982 ;; This function calls:
 12983 ;;		_Int2StatusClear
 12984 ;;		_RegisterRead
 12985 ;;		_RegisterWrite
 12986 ;;		_StatusClear
 12987 ;;		i1_ClearInterrupt
 12988 ;; This function is called by:
 12989 ;;		_I2C1_ISR
 12990 ;; This function uses a non-reentrant model
 12991 ;;
 12992                           
 12993                           
 12994                           ;psect for function _I2C1_StatusCallback
 12995  0C07                     _I2C1_StatusCallback:	
 12996                           
 12997                           ;incstack = 0
 12998                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12999                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 13000  0C07  00F8               	movwf	I2C1_StatusCallback@i2c_bus_state
 13001                           
 13002                           ;i2c_register.c: 57: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          59: switch (i2c_bus_state) {
 13003  0C08  2C3D               	goto	i1l5395
 13004  0C09                     i1l783:	
 13005                           ;i2c_register.c: 60: case I2C1_SLAVE_WRITE_REQUEST:
 13006                           
 13007                           
 13008                           ;i2c_register.c: 62: slaveWriteType = SLAVE_DATA_ADDRESS;
 13009  0C09  0021               	movlb	1	; select bank1
 13010  0C0A  01B3               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 13011  0C0B  0AB3               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 13012                           
 13013                           ;i2c_register.c: 63: break;
 13014  0C0C  0008               	return
 13015  0C0D                     i1l5361:	
 13016                           
 13017                           ;i2c_register.c: 70: EncoderReg = I2C1_slaveWriteData;
 13018  0C0D  0020               	movlb	0	; select bank0
 13019  0C0E  0868               	movf	_I2C1_slaveWriteData,w	;volatile
 13020  0C0F  00BB               	movwf	_EncoderReg	;volatile
 13021                           
 13022                           ;i2c_register.c: 71: break;
 13023  0C10  2C23               	goto	i1l5371
 13024  0C11                     i1l5363:	
 13025                           
 13026                           ;i2c_register.c: 75: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 13027  0C11  0020               	movlb	0	; select bank0
 13028  0C12  0868               	movf	_I2C1_slaveWriteData,w	;volatile
 13029  0C13  00F6               	movwf	RegisterWrite@data
 13030  0C14  083B               	movf	_EncoderReg,w	;volatile
 13031  0C15  2448  318C         	fcall	_RegisterWrite
 13032                           
 13033                           ;i2c_register.c: 76: EncoderReg++;
 13034  0C17  0020               	movlb	0	; select bank0
 13035  0C18  0ABB               	incf	_EncoderReg,f	;volatile
 13036                           
 13037                           ;i2c_register.c: 77: break;
 13038  0C19  2C23               	goto	i1l5371
 13039  0C1A                     i1l5369:	
 13040  0C1A  0021               	movlb	1	; select bank1
 13041  0C1B  0833               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 13042                           
 13043                           ; Switch size 1, requested type "speed"
 13044                           ; Number of cases is 2, Range of values is 0 to 1
 13045                           ; switch strategies available:
 13046                           ; Name         Instructions Cycles
 13047                           ; simple_byte            7     4 (average)
 13048                           ; direct_byte           10     6 (fixed)
 13049                           ; jumptable            260     6 (fixed)
 13050                           ;	Chosen strategy is simple_byte
 13051  0C1C  3A00               	xorlw	0	; case 0
 13052  0C1D  1903               	skipnz
 13053  0C1E  2C11               	goto	i1l5363
 13054  0C1F  3A01               	xorlw	1	; case 1
 13055  0C20  1903               	skipnz
 13056  0C21  2C0D               	goto	i1l5361
 13057  0C22  2C11               	goto	i1l5363
 13058  0C23                     i1l5371:	
 13059                           
 13060                           ;i2c_register.c: 81: slaveWriteType = SLAVE_NORMAL_DATA;
 13061  0C23  0021               	movlb	1	; select bank1
 13062  0C24  01B3               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 13063                           
 13064                           ;i2c_register.c: 82: break;
 13065  0C25  0008               	return
 13066  0C26                     i1l5373:	
 13067                           
 13068                           ;i2c_register.c: 85: SSP1BUF = RegisterRead(EncoderReg);
 13069  0C26  0020               	movlb	0	; select bank0
 13070  0C27  083B               	movf	_EncoderReg,w	;volatile
 13071  0C28  3187  2721         	fcall	_RegisterRead
 13072  0C2A  0024               	movlb	4	; select bank4
 13073  0C2B  0091               	movwf	17	;volatile
 13074                           
 13075                           ;i2c_register.c: 86: EncoderReg++;
 13076  0C2C  0020               	movlb	0	; select bank0
 13077  0C2D  0ABB               	incf	_EncoderReg,f	;volatile
 13078                           
 13079                           ;i2c_register.c: 87: break;
 13080  0C2E  0008               	return
 13081  0C2F                     i1l5377:	
 13082                           
 13083                           ;i2c_register.c: 90: if (intclear == 1) {
 13084  0C2F  0020               	movlb	0	; select bank0
 13085  0C30  0B3A               	decfsz	_intclear,w	;volatile
 13086  0C31  2C38               	goto	i1l5383
 13087                           
 13088                           ;i2c_register.c: 91: StatusClear();
 13089  0C32  27E3  318C         	fcall	_StatusClear
 13090                           
 13091                           ;i2c_register.c: 92: ClearInterrupt();
 13092  0C34  27E5  318C         	fcall	i1_ClearInterrupt
 13093                           
 13094                           ;i2c_register.c: 93: intclear = 0;
 13095  0C36  0020               	movlb	0	; select bank0
 13096  0C37  01BA               	clrf	_intclear	;volatile
 13097  0C38                     i1l5383:	
 13098                           
 13099                           ;i2c_register.c: 94: };i2c_register.c: 96: if (int2clear == 1) {
 13100  0C38  0B39               	decfsz	_int2clear,w	;volatile
 13101  0C39  0008               	return
 13102                           
 13103                           ;i2c_register.c: 97: Int2StatusClear();
 13104  0C3A  27E8               	fcall	_Int2StatusClear
 13105                           
 13106                           ;i2c_register.c: 98: int2clear = 0;
 13107  0C3B  01B9               	clrf	_int2clear	;volatile
 13108  0C3C  0008               	return
 13109  0C3D                     i1l5395:	
 13110  0C3D  0878               	movf	I2C1_StatusCallback@i2c_bus_state,w
 13111                           
 13112                           ; Switch size 1, requested type "speed"
 13113                           ; Number of cases is 4, Range of values is 0 to 3
 13114                           ; switch strategies available:
 13115                           ; Name         Instructions Cycles
 13116                           ; direct_byte           14     6 (fixed)
 13117                           ; simple_byte           13     7 (average)
 13118                           ; jumptable            260     6 (fixed)
 13119                           ;	Chosen strategy is direct_byte
 13120  0C3E  0084               	movwf	4
 13121  0C3F  3004               	movlw	4
 13122  0C40  0204               	subwf	4,w
 13123  0C41  1803               	skipnc
 13124  0C42  0008               	return
 13125  0C43  3188               	movlp	high i1S7403
 13126  0C44  3504               	lslf	4,w
 13127  0C45  3E68               	addlw	low i1S7403
 13128  0C46  0082               	movwf	2
 13129  0C47  0008               	return
 13130  0C48                     __end_of_I2C1_StatusCallback:	
 13131  0C48                     __ptext51:	
 13132 ;; *************** function _RegisterWrite *****************
 13133 ;; Defined at:
 13134 ;;		line 118 in file "i2c_register.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;  add             1    wreg     unsigned char 
 13137 ;;  data            1    6[COMMON] unsigned char 
 13138 ;; Auto vars:     Size  Location     Type
 13139 ;;  add             1    7[COMMON] unsigned char 
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1    wreg      void 
 13142 ;; Registers used:
 13143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13144 ;; Tracked objects:
 13145 ;;		On entry : 1F/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13149 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13153 ;;Total ram usage:        2 bytes
 13154 ;; Hardware stack levels used:    1
 13155 ;; Hardware stack levels required when called:    3
 13156 ;; This function calls:
 13157 ;;		_Config_GP1
 13158 ;;		_Config_GP2
 13159 ;;		_Config_GP3
 13160 ;;		_GeneralDataSet
 13161 ;;		_GeneralDataSplit
 13162 ;;		_UpdateOut_GP1
 13163 ;;		_UpdateOut_GP2
 13164 ;;		_UpdateOut_GP3
 13165 ;;		___wmul
 13166 ;;		_eeprom_write
 13167 ;; This function is called by:
 13168 ;;		_I2C1_StatusCallback
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           
 13173                           ;psect for function _RegisterWrite
 13174  0C48                     _RegisterWrite:	
 13175                           
 13176                           ;incstack = 0
 13177                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13178                           ;RegisterWrite@add stored from wreg
 13179  0C48  00F7               	movwf	RegisterWrite@add
 13180                           
 13181                           ;i2c_register.c: 120: switch (add) {
 13182  0C49  2CD6               	goto	i1l4975
 13183  0C4A                     i1l4887:	
 13184                           
 13185                           ;i2c_register.c: 122: GCONF = data;
 13186  0C4A  0876               	movf	RegisterWrite@data,w
 13187  0C4B  00FD               	movwf	_GCONF	;volatile
 13188                           
 13189                           ;i2c_register.c: 123: GeneralDataSplit();
 13190  0C4C  2752  318C         	fcall	_GeneralDataSplit
 13191                           
 13192                           ;i2c_register.c: 124: GeneralDataSet();
 13193  0C4E  269C  318C         	fcall	_GeneralDataSet
 13194                           
 13195                           ;i2c_register.c: 125: break;
 13196  0C50  2CE0               	goto	i1l4977
 13197  0C51                     i1l4893:	
 13198                           
 13199                           ;i2c_register.c: 128: GP1CONF = data;
 13200  0C51  0876               	movf	RegisterWrite@data,w
 13201  0C52  00FC               	movwf	_GP1CONF	;volatile
 13202                           
 13203                           ;i2c_register.c: 129: Config_GP1();
 13204  0C53  2506  318C         	fcall	_Config_GP1
 13205                           
 13206                           ;i2c_register.c: 130: break;
 13207  0C55  2CE0               	goto	i1l4977
 13208  0C56                     i1l4897:	
 13209                           
 13210                           ;i2c_register.c: 133: GP2CONF = data;
 13211  0C56  0876               	movf	RegisterWrite@data,w
 13212  0C57  00D0               	movwf	_GP2CONF	;volatile
 13213                           
 13214                           ;i2c_register.c: 134: Config_GP2();
 13215  0C58  2592  318C         	fcall	_Config_GP2
 13216                           
 13217                           ;i2c_register.c: 135: break;
 13218  0C5A  2CE0               	goto	i1l4977
 13219  0C5B                     i1l4901:	
 13220                           
 13221                           ;i2c_register.c: 138: if (C_ETYPE == 0) {
 13222  0C5B  0840               	movf	_C_ETYPE,w	;volatile
 13223  0C5C  1D03               	btfss	3,2
 13224  0C5D  2CE0               	goto	i1l4977
 13225                           
 13226                           ;i2c_register.c: 139: GP3CONF = data;
 13227  0C5E  0876               	movf	RegisterWrite@data,w
 13228  0C5F  00CF               	movwf	_GP3CONF	;volatile
 13229                           
 13230                           ;i2c_register.c: 140: Config_GP3();
 13231  0C60  2618  318C         	fcall	_Config_GP3
 13232  0C62  2CE0               	goto	i1l4977
 13233  0C63                     i1l4907:	
 13234                           
 13235                           ;i2c_register.c: 145: INTCONF = data;
 13236  0C63  0876               	movf	RegisterWrite@data,w
 13237  0C64  00D1               	movwf	_INTCONF	;volatile
 13238                           
 13239                           ;i2c_register.c: 146: break;
 13240  0C65  2CE0               	goto	i1l4977
 13241  0C66                     i1l4909:	
 13242                           
 13243                           ;i2c_register.c: 150: CVAL.bval[3] = data;
 13244  0C66  0876               	movf	RegisterWrite@data,w
 13245  0C67  00AF               	movwf	_CVAL+3	;volatile
 13246                           
 13247                           ;i2c_register.c: 151: break;
 13248  0C68  2CE0               	goto	i1l4977
 13249  0C69                     i1l4911:	
 13250                           
 13251                           ;i2c_register.c: 153: CVAL.bval[2] = data;
 13252  0C69  0876               	movf	RegisterWrite@data,w
 13253  0C6A  00AE               	movwf	_CVAL+2	;volatile
 13254                           
 13255                           ;i2c_register.c: 154: break;
 13256  0C6B  2CE0               	goto	i1l4977
 13257  0C6C                     i1l4913:	
 13258                           
 13259                           ;i2c_register.c: 156: CVAL.bval[1] = data;
 13260  0C6C  0876               	movf	RegisterWrite@data,w
 13261  0C6D  00AD               	movwf	_CVAL+1	;volatile
 13262                           
 13263                           ;i2c_register.c: 157: break;
 13264  0C6E  2CE0               	goto	i1l4977
 13265  0C6F                     i1l4915:	
 13266                           
 13267                           ;i2c_register.c: 159: CVAL.bval[0] = data;
 13268  0C6F  0876               	movf	RegisterWrite@data,w
 13269  0C70  00AC               	movwf	_CVAL	;volatile
 13270                           
 13271                           ;i2c_register.c: 160: break;
 13272  0C71  2CE0               	goto	i1l4977
 13273  0C72                     i1l4917:	
 13274                           
 13275                           ;i2c_register.c: 164: CMAX.bval[3] = data;
 13276  0C72  0876               	movf	RegisterWrite@data,w
 13277  0C73  00AB               	movwf	_CMAX+3	;volatile
 13278                           
 13279                           ;i2c_register.c: 165: break;
 13280  0C74  2CE0               	goto	i1l4977
 13281  0C75                     i1l4919:	
 13282                           
 13283                           ;i2c_register.c: 167: CMAX.bval[2] = data;
 13284  0C75  0876               	movf	RegisterWrite@data,w
 13285  0C76  00AA               	movwf	_CMAX+2	;volatile
 13286                           
 13287                           ;i2c_register.c: 168: break;
 13288  0C77  2CE0               	goto	i1l4977
 13289  0C78                     i1l4921:	
 13290                           
 13291                           ;i2c_register.c: 170: CMAX.bval[1] = data;
 13292  0C78  0876               	movf	RegisterWrite@data,w
 13293  0C79  00A9               	movwf	_CMAX+1	;volatile
 13294                           
 13295                           ;i2c_register.c: 171: break;
 13296  0C7A  2CE0               	goto	i1l4977
 13297  0C7B                     i1l4923:	
 13298                           
 13299                           ;i2c_register.c: 173: CMAX.bval[0] = data;
 13300  0C7B  0876               	movf	RegisterWrite@data,w
 13301  0C7C  00A8               	movwf	_CMAX	;volatile
 13302                           
 13303                           ;i2c_register.c: 174: break;
 13304  0C7D  2CE0               	goto	i1l4977
 13305  0C7E                     i1l4925:	
 13306                           
 13307                           ;i2c_register.c: 178: CMIN.bval[3] = data;
 13308  0C7E  0876               	movf	RegisterWrite@data,w
 13309  0C7F  00A7               	movwf	_CMIN+3	;volatile
 13310                           
 13311                           ;i2c_register.c: 179: break;
 13312  0C80  2CE0               	goto	i1l4977
 13313  0C81                     i1l4927:	
 13314                           
 13315                           ;i2c_register.c: 181: CMIN.bval[2] = data;
 13316  0C81  0876               	movf	RegisterWrite@data,w
 13317  0C82  00A6               	movwf	_CMIN+2	;volatile
 13318                           
 13319                           ;i2c_register.c: 182: break;
 13320  0C83  2CE0               	goto	i1l4977
 13321  0C84                     i1l4929:	
 13322                           
 13323                           ;i2c_register.c: 184: CMIN.bval[1] = data;
 13324  0C84  0876               	movf	RegisterWrite@data,w
 13325  0C85  00A5               	movwf	_CMIN+1	;volatile
 13326                           
 13327                           ;i2c_register.c: 185: break;
 13328  0C86  2CE0               	goto	i1l4977
 13329  0C87                     i1l4931:	
 13330                           
 13331                           ;i2c_register.c: 187: CMIN.bval[0] = data;
 13332  0C87  0876               	movf	RegisterWrite@data,w
 13333  0C88  00A4               	movwf	_CMIN	;volatile
 13334                           
 13335                           ;i2c_register.c: 188: break;
 13336  0C89  2CE0               	goto	i1l4977
 13337  0C8A                     i1l4933:	
 13338                           
 13339                           ;i2c_register.c: 192: ISTEP.bval[3] = data;
 13340  0C8A  0876               	movf	RegisterWrite@data,w
 13341  0C8B  00A3               	movwf	_ISTEP+3	;volatile
 13342                           
 13343                           ;i2c_register.c: 193: break;
 13344  0C8C  2CE0               	goto	i1l4977
 13345  0C8D                     i1l4935:	
 13346                           
 13347                           ;i2c_register.c: 195: ISTEP.bval[2] = data;
 13348  0C8D  0876               	movf	RegisterWrite@data,w
 13349  0C8E  00A2               	movwf	_ISTEP+2	;volatile
 13350                           
 13351                           ;i2c_register.c: 196: break;
 13352  0C8F  2CE0               	goto	i1l4977
 13353  0C90                     i1l4937:	
 13354                           
 13355                           ;i2c_register.c: 198: ISTEP.bval[1] = data;
 13356  0C90  0876               	movf	RegisterWrite@data,w
 13357  0C91  00A1               	movwf	_ISTEP+1	;volatile
 13358                           
 13359                           ;i2c_register.c: 199: break;
 13360  0C92  2CE0               	goto	i1l4977
 13361  0C93                     i1l4939:	
 13362                           
 13363                           ;i2c_register.c: 201: ISTEP.bval[0] = data;
 13364  0C93  0876               	movf	RegisterWrite@data,w
 13365  0C94  00A0               	movwf	_ISTEP	;volatile
 13366                           
 13367                           ;i2c_register.c: 202: break;
 13368  0C95  2CE0               	goto	i1l4977
 13369  0C96                     i1l4941:	
 13370                           
 13371                           ;i2c_register.c: 206: RLED = data;
 13372  0C96  0876               	movf	RegisterWrite@data,w
 13373  0C97  00CC               	movwf	_RLED	;volatile
 13374                           
 13375                           ;i2c_register.c: 208: break;
 13376  0C98  2CE0               	goto	i1l4977
 13377  0C99                     i1l4943:	
 13378                           
 13379                           ;i2c_register.c: 211: GLED = data;
 13380  0C99  0876               	movf	RegisterWrite@data,w
 13381  0C9A  00CB               	movwf	_GLED	;volatile
 13382                           
 13383                           ;i2c_register.c: 212: break;
 13384  0C9B  2CE0               	goto	i1l4977
 13385  0C9C                     i1l4945:	
 13386                           
 13387                           ;i2c_register.c: 215: BLED = data;
 13388  0C9C  0876               	movf	RegisterWrite@data,w
 13389  0C9D  00CA               	movwf	_BLED	;volatile
 13390                           
 13391                           ;i2c_register.c: 216: break;
 13392  0C9E  2CE0               	goto	i1l4977
 13393  0C9F                     i1l4947:	
 13394                           
 13395                           ;i2c_register.c: 220: GP1REG = data;
 13396  0C9F  0876               	movf	RegisterWrite@data,w
 13397  0CA0  00C9               	movwf	_GP1REG	;volatile
 13398                           
 13399                           ;i2c_register.c: 221: UpdateOut_GP1();
 13400  0CA1  2791  318C         	fcall	_UpdateOut_GP1
 13401                           
 13402                           ;i2c_register.c: 222: break;
 13403  0CA3  2CE0               	goto	i1l4977
 13404  0CA4                     i1l4951:	
 13405                           
 13406                           ;i2c_register.c: 225: GP2REG = data;
 13407  0CA4  0876               	movf	RegisterWrite@data,w
 13408  0CA5  00C8               	movwf	_GP2REG	;volatile
 13409                           
 13410                           ;i2c_register.c: 226: UpdateOut_GP2();
 13411  0CA6  27A2  318C         	fcall	_UpdateOut_GP2
 13412                           
 13413                           ;i2c_register.c: 227: break;
 13414  0CA8  2CE0               	goto	i1l4977
 13415  0CA9                     i1l4955:	
 13416                           
 13417                           ;i2c_register.c: 231: if (C_ETYPE == 0) {
 13418  0CA9  0840               	movf	_C_ETYPE,w	;volatile
 13419  0CAA  1D03               	btfss	3,2
 13420  0CAB  2CE0               	goto	i1l4977
 13421                           
 13422                           ;i2c_register.c: 232: GP3REG = data;
 13423  0CAC  0876               	movf	RegisterWrite@data,w
 13424  0CAD  00C7               	movwf	_GP3REG	;volatile
 13425                           
 13426                           ;i2c_register.c: 233: UpdateOut_GP3();
 13427  0CAE  27B3  318C         	fcall	_UpdateOut_GP3
 13428  0CB0  2CE0               	goto	i1l4977
 13429  0CB1                     i1l4961:	
 13430                           
 13431                           ;i2c_register.c: 240: ANTBOUNC = data;
 13432  0CB1  0876               	movf	RegisterWrite@data,w
 13433  0CB2  00C6               	movwf	_ANTBOUNC	;volatile
 13434                           
 13435                           ;i2c_register.c: 241: DEBOUNCE = (uint16_t) ANTBOUNC * 10;
 13436  0CB3  0846               	movf	_ANTBOUNC,w	;volatile
 13437  0CB4  00F0               	movwf	___wmul@multiplier
 13438  0CB5  300A               	movlw	10
 13439  0CB6  01F1               	clrf	___wmul@multiplier+1
 13440  0CB7  00F2               	movwf	___wmul@multiplicand
 13441  0CB8  01F3               	clrf	___wmul@multiplicand+1
 13442  0CB9  24F1  318C         	fcall	___wmul
 13443  0CBB  0871               	movf	?___wmul+1,w
 13444  0CBC  00B1               	movwf	_DEBOUNCE+1	;volatile
 13445  0CBD  0870               	movf	?___wmul,w
 13446  0CBE  00B0               	movwf	_DEBOUNCE	;volatile
 13447                           
 13448                           ;i2c_register.c: 242: break;
 13449  0CBF  2CE0               	goto	i1l4977
 13450  0CC0                     i1l4965:	
 13451                           
 13452                           ;i2c_register.c: 244: DPPERIOD = data;
 13453  0CC0  0876               	movf	RegisterWrite@data,w
 13454  0CC1  00C5               	movwf	_DPPERIOD	;volatile
 13455                           
 13456                           ;i2c_register.c: 245: DoublePush = (uint16_t) DPPERIOD * 10;
 13457  0CC2  0845               	movf	_DPPERIOD,w	;volatile
 13458  0CC3  00F0               	movwf	___wmul@multiplier
 13459  0CC4  300A               	movlw	10
 13460  0CC5  01F1               	clrf	___wmul@multiplier+1
 13461  0CC6  00F2               	movwf	___wmul@multiplicand
 13462  0CC7  01F3               	clrf	___wmul@multiplicand+1
 13463  0CC8  24F1  318C         	fcall	___wmul
 13464  0CCA  0871               	movf	?___wmul+1,w
 13465  0CCB  0021               	movlb	1	; select bank1
 13466  0CCC  00A5               	movwf	(_DoublePush+1)^(0+128)	;volatile
 13467  0CCD  0870               	movf	?___wmul,w
 13468  0CCE  00A4               	movwf	_DoublePush^(0+128)	;volatile
 13469                           
 13470                           ;i2c_register.c: 246: break;
 13471  0CCF  2CE0               	goto	i1l4977
 13472  0CD0                     i1l4969:	
 13473                           
 13474                           ;i2c_register.c: 249: FADERGB = data;
 13475  0CD0  0876               	movf	RegisterWrite@data,w
 13476  0CD1  00C4               	movwf	_FADERGB	;volatile
 13477                           
 13478                           ;i2c_register.c: 250: break;
 13479  0CD2  2CE0               	goto	i1l4977
 13480  0CD3                     i1l4971:	
 13481                           
 13482                           ;i2c_register.c: 253: FADEGP = data;
 13483  0CD3  0876               	movf	RegisterWrite@data,w
 13484  0CD4  00C3               	movwf	_FADEGP	;volatile
 13485                           
 13486                           ;i2c_register.c: 254: break;
 13487  0CD5  2CE0               	goto	i1l4977
 13488  0CD6                     i1l4975:	
 13489  0CD6  0877               	movf	RegisterWrite@add,w
 13490                           
 13491                           ; Switch size 1, requested type "speed"
 13492                           ; Number of cases is 31, Range of values is 0 to 33
 13493                           ; switch strategies available:
 13494                           ; Name         Instructions Cycles
 13495                           ; direct_byte           74     6 (fixed)
 13496                           ; simple_byte           94    48 (average)
 13497                           ; jumptable            260     6 (fixed)
 13498                           ;	Chosen strategy is direct_byte
 13499  0CD7  0084               	movwf	4
 13500  0CD8  3022               	movlw	34
 13501  0CD9  0204               	subwf	4,w
 13502  0CDA  1803               	skipnc
 13503  0CDB  2CE0               	goto	i1l4977
 13504  0CDC  3187               	movlp	high i1S7405
 13505  0CDD  3504               	lslf	4,w
 13506  0CDE  3E9E               	addlw	low i1S7405
 13507  0CDF  0082               	movwf	2
 13508  0CE0                     i1l4977:	
 13509                           
 13510                           ;i2c_register.c: 257: if (add >= REG_EEPROMS) {
 13511  0CE0  3080               	movlw	128
 13512  0CE1  0277               	subwf	RegisterWrite@add,w
 13513  0CE2  1C03               	skipc
 13514  0CE3  0008               	return
 13515                           
 13516                           ;i2c_register.c: 259: if (C_MBANK == 0) {
 13517  0CE4  0020               	movlb	0	; select bank0
 13518  0CE5  0841               	movf	_C_MBANK,w	;volatile
 13519  0CE6  1D03               	btfss	3,2
 13520  0CE7  2CED               	goto	i1l4983
 13521                           
 13522                           ;i2c_register.c: 260: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 13523  0CE8  0876               	movf	RegisterWrite@data,w
 13524  0CE9  00F0               	movwf	eeprom_write@value
 13525  0CEA  0877               	movf	RegisterWrite@add,w
 13526  0CEB  3E80               	addlw	128
 13527  0CEC  2FC7               	ljmp	_eeprom_write
 13528  0CED                     i1l4983:	
 13529                           ;i2c_register.c: 262: } else {
 13530                           
 13531                           
 13532                           ;i2c_register.c: 263: eeprom_write((uint8_t) add, (uint8_t) data);
 13533  0CED  0876               	movf	RegisterWrite@data,w
 13534  0CEE  00F0               	movwf	eeprom_write@value
 13535  0CEF  0877               	movf	RegisterWrite@add,w
 13536  0CF0  2FC7               	ljmp	_eeprom_write
 13537  0CF1                     __end_of_RegisterWrite:	
 13538  0CF1                     __ptext53:	
 13539 ;; *************** function ___wmul *****************
 13540 ;; Defined at:
 13541 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  multiplier      2    0[COMMON] unsigned int 
 13544 ;;  multiplicand    2    2[COMMON] unsigned int 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  product         2    4[COMMON] unsigned int 
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  2    0[COMMON] unsigned int 
 13549 ;; Registers used:
 13550 ;;		wreg, status,2, status,0
 13551 ;; Tracked objects:
 13552 ;;		On entry : 1F/0
 13553 ;;		On exit  : 1F/0
 13554 ;;		Unchanged: 1F/0
 13555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;Total ram usage:        6 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; This function calls:
 13563 ;;		Nothing
 13564 ;; This function is called by:
 13565 ;;		_RegisterWrite
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           
 13570                           ;psect for function ___wmul
 13571  0CF1                     ___wmul:	
 13572                           
 13573                           ;incstack = 0
 13574                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13575  0CF1  01F4               	clrf	___wmul@product
 13576  0CF2  01F5               	clrf	___wmul@product+1
 13577  0CF3                     i1l4657:	
 13578  0CF3  1C70               	btfss	___wmul@multiplier,0
 13579  0CF4  2CF9               	goto	i1l4661
 13580  0CF5  0872               	movf	___wmul@multiplicand,w
 13581  0CF6  07F4               	addwf	___wmul@product,f
 13582  0CF7  0873               	movf	___wmul@multiplicand+1,w
 13583  0CF8  3DF5               	addwfc	___wmul@product+1,f
 13584  0CF9                     i1l4661:	
 13585  0CF9  35F2               	lslf	___wmul@multiplicand,f
 13586  0CFA  0DF3               	rlf	___wmul@multiplicand+1,f
 13587  0CFB  36F1               	lsrf	___wmul@multiplier+1,f
 13588  0CFC  0CF0               	rrf	___wmul@multiplier,f
 13589  0CFD  0870               	movf	___wmul@multiplier,w
 13590  0CFE  0471               	iorwf	___wmul@multiplier+1,w
 13591  0CFF  1D03               	btfss	3,2
 13592  0D00  2CF3               	goto	i1l4657
 13593  0D01  0875               	movf	___wmul@product+1,w
 13594  0D02  00F1               	movwf	?___wmul+1
 13595  0D03  0874               	movf	___wmul@product,w
 13596  0D04  00F0               	movwf	?___wmul
 13597  0D05  0008               	return
 13598  0D06                     __end_of___wmul:	
 13599  0D06                     __ptext69:	
 13600 ;; *************** function _Config_GP1 *****************
 13601 ;; Defined at:
 13602 ;;		line 235 in file "GPports.c"
 13603 ;; Parameters:    Size  Location     Type
 13604 ;;		None
 13605 ;; Auto vars:     Size  Location     Type
 13606 ;;		None
 13607 ;; Return value:  Size  Location     Type
 13608 ;;                  1    wreg      void 
 13609 ;; Registers used:
 13610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13611 ;; Tracked objects:
 13612 ;;		On entry : 1F/0
 13613 ;;		On exit  : 0/0
 13614 ;;		Unchanged: 0/0
 13615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13620 ;;Total ram usage:        2 bytes
 13621 ;; Hardware stack levels used:    1
 13622 ;; Hardware stack levels required when called:    1
 13623 ;; This function calls:
 13624 ;;		_PWM5_Initialize
 13625 ;;		i1_GPort_GP1_PWM
 13626 ;; This function is called by:
 13627 ;;		_RegisterWrite
 13628 ;; This function uses a non-reentrant model
 13629 ;;
 13630                           
 13631                           
 13632                           ;psect for function _Config_GP1
 13633  0D06                     _Config_GP1:	
 13634                           
 13635                           ;GPports.c: 237: PWM5CON = 0;
 13636                           
 13637                           ;incstack = 0
 13638                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13639  0D06  002C               	movlb	12	; select bank12
 13640  0D07  0199               	clrf	25	;volatile
 13641                           
 13642                           ;GPports.c: 238: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13643  0D08  3055               	movlw	85
 13644  0D09  003C               	movlb	28	; select bank28
 13645  0D0A  008F               	movwf	15	;volsfr
 13646  0D0B  30AA               	movlw	170
 13647  0D0C  008F               	movwf	15	;volsfr
 13648  0D0D  100F               	bcf	15,0	;volsfr
 13649                           
 13650                           ;GPports.c: 239: RC7PPSbits.RC7PPS = 0x00;
 13651  0D0E  30E0               	movlw	-32
 13652  0D0F  003D               	movlb	29	; select bank29
 13653  0D10  05A7               	andwf	39,f	;volatile
 13654                           
 13655                           ;GPports.c: 240: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13656  0D11  3055               	movlw	85
 13657  0D12  003C               	movlb	28	; select bank28
 13658  0D13  008F               	movwf	15	;volsfr
 13659  0D14  30AA               	movlw	170
 13660  0D15  008F               	movwf	15	;volsfr
 13661  0D16  140F               	bsf	15,0	;volsfr
 13662                           
 13663                           ;GPports.c: 242: switch (GP1CONF & 0x03) {
 13664  0D17  2D45               	goto	i1l4467
 13665  0D18                     i1l1127:	
 13666                           ;GPports.c: 244: do { ANSELCbits.ANSC7 = 0; } while(0);
 13667                           
 13668  0D18  0023               	movlb	3	; select bank3
 13669  0D19  138E               	bcf	14,7	;volatile
 13670                           
 13671                           ;GPports.c: 245: do { LATCbits.LATC7 = 1; } while(0);
 13672  0D1A  0022               	movlb	2	; select bank2
 13673  0D1B  178E               	bsf	14,7	;volatile
 13674                           
 13675                           ;GPports.c: 246: do { TRISCbits.TRISC7 = 0; } while(0);
 13676  0D1C  0021               	movlb	1	; select bank1
 13677  0D1D  138E               	bcf	14,7	;volatile
 13678                           
 13679                           ;GPports.c: 247: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13680  0D1E  3055               	movlw	85
 13681  0D1F  003C               	movlb	28	; select bank28
 13682  0D20  008F               	movwf	15	;volsfr
 13683  0D21  30AA               	movlw	170
 13684  0D22  008F               	movwf	15	;volsfr
 13685  0D23  100F               	bcf	15,0	;volsfr
 13686                           
 13687                           ;GPports.c: 248: RC7PPSbits.RC7PPS = 0x02;
 13688  0D24  003D               	movlb	29	; select bank29
 13689  0D25  0827               	movf	39,w	;volatile
 13690  0D26  39E0               	andlw	-32
 13691  0D27  3802               	iorlw	2
 13692  0D28  00A7               	movwf	39	;volatile
 13693                           
 13694                           ;GPports.c: 249: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13695  0D29  3055               	movlw	85
 13696  0D2A  003C               	movlb	28	; select bank28
 13697  0D2B  008F               	movwf	15	;volsfr
 13698  0D2C  30AA               	movlw	170
 13699  0D2D  008F               	movwf	15	;volsfr
 13700  0D2E  140F               	bsf	15,0	;volsfr
 13701                           
 13702                           ;GPports.c: 250: PWM5_Initialize();
 13703  0D2F  2570  318C         	fcall	_PWM5_Initialize
 13704                           
 13705                           ;GPports.c: 251: GPort_GP1_PWM(0);
 13706  0D31  3000               	movlw	0
 13707  0D32  257A  318C         	fcall	i1_GPort_GP1_PWM
 13708                           
 13709                           ;GPports.c: 252: break;
 13710  0D34  2D5E               	goto	i1l4471
 13711  0D35                     i1l1135:	
 13712                           ;GPports.c: 255: do { ANSELCbits.ANSC7 = 0; } while(0);
 13713                           
 13714  0D35  0023               	movlb	3	; select bank3
 13715  0D36  138E               	bcf	14,7	;volatile
 13716                           
 13717                           ;GPports.c: 256: do { TRISCbits.TRISC7 = 0; } while(0);
 13718  0D37  0021               	movlb	1	; select bank1
 13719  0D38  138E               	bcf	14,7	;volatile
 13720                           
 13721                           ;GPports.c: 257: do { ODCONCbits.ODCC7 = 0; } while(0);
 13722  0D39  0025               	movlb	5	; select bank5
 13723  0D3A  138E               	bcf	14,7	;volatile
 13724  0D3B  2D5E               	goto	i1l4471
 13725  0D3C                     i1l1142:	
 13726                           ;GPports.c: 261: do { TRISCbits.TRISC7 = 1; } while(0);
 13727                           
 13728  0D3C  0021               	movlb	1	; select bank1
 13729  0D3D  178E               	bsf	14,7	;volatile
 13730                           
 13731                           ;GPports.c: 262: do { ANSELCbits.ANSC7 = 1; } while(0);
 13732  0D3E  0023               	movlb	3	; select bank3
 13733  0D3F  2D43               	goto	L12
 13734  0D40                     i1l1147:	
 13735                           ;GPports.c: 265: do { ANSELCbits.ANSC7 = 0; } while(0);
 13736                           
 13737  0D40  0023               	movlb	3	; select bank3
 13738  0D41  138E               	bcf	14,7	;volatile
 13739                           
 13740                           ;GPports.c: 266: do { TRISCbits.TRISC7 = 1; } while(0);
 13741  0D42  0021               	movlb	1	; select bank1
 13742  0D43                     L12:	
 13743  0D43  178E               	bsf	14,7	;volatile
 13744  0D44  2D5E               	goto	i1l4471
 13745  0D45                     i1l4467:	
 13746  0D45  087C               	movf	_GP1CONF,w	;volatile
 13747  0D46  3903               	andlw	3
 13748  0D47  00F2               	movwf	??_Config_GP1
 13749  0D48  01F3               	clrf	??_Config_GP1+1
 13750                           
 13751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13752                           ; Switch size 1, requested type "speed"
 13753                           ; Number of cases is 1, Range of values is 0 to 0
 13754                           ; switch strategies available:
 13755                           ; Name         Instructions Cycles
 13756                           ; simple_byte            4     3 (average)
 13757                           ; direct_byte            8     6 (fixed)
 13758                           ; jumptable            260     6 (fixed)
 13759                           ;	Chosen strategy is simple_byte
 13760  0D49  0873               	movf	??_Config_GP1+1,w
 13761  0D4A  3A00               	xorlw	0	; case 0
 13762  0D4B  1903               	skipnz
 13763  0D4C  2D4E               	goto	i1l7419
 13764  0D4D  2D5E               	goto	i1l4471
 13765  0D4E                     i1l7419:	
 13766                           
 13767                           ; Switch size 1, requested type "speed"
 13768                           ; Number of cases is 4, Range of values is 0 to 3
 13769                           ; switch strategies available:
 13770                           ; Name         Instructions Cycles
 13771                           ; direct_byte           14     6 (fixed)
 13772                           ; simple_byte           13     7 (average)
 13773                           ; jumptable            260     6 (fixed)
 13774                           ;	Chosen strategy is direct_byte
 13775  0D4E  0872               	movf	??_Config_GP1,w
 13776  0D4F  0084               	movwf	4
 13777  0D50  3004               	movlw	4
 13778  0D51  0204               	subwf	4,w
 13779  0D52  1803               	skipnc
 13780  0D53  2D5E               	goto	i1l4471
 13781  0D54  3188               	movlp	high i1S7421
 13782  0D55  3504               	lslf	4,w
 13783  0D56  3E80               	addlw	low i1S7421
 13784  0D57  0082               	movwf	2
 13785  0D58                     i1l1153:	
 13786                           ;GPports.c: 272: do { WPUCbits.WPUC7 = 0; } while(0);
 13787                           
 13788  0D58  0024               	movlb	4	; select bank4
 13789  0D59  138E               	bcf	14,7	;volatile
 13790  0D5A  0008               	return
 13791  0D5B                     i1l1157:	
 13792                           ;GPports.c: 275: do { WPUCbits.WPUC7 = 1; } while(0);
 13793                           
 13794  0D5B  0024               	movlb	4	; select bank4
 13795  0D5C  178E               	bsf	14,7	;volatile
 13796  0D5D  0008               	return
 13797  0D5E                     i1l4471:	
 13798  0D5E  087C               	movf	_GP1CONF,w	;volatile
 13799  0D5F  3904               	andlw	4
 13800  0D60  00F2               	movwf	??_Config_GP1
 13801  0D61  01F3               	clrf	??_Config_GP1+1
 13802                           
 13803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13804                           ; Switch size 1, requested type "speed"
 13805                           ; Number of cases is 1, Range of values is 0 to 0
 13806                           ; switch strategies available:
 13807                           ; Name         Instructions Cycles
 13808                           ; simple_byte            4     3 (average)
 13809                           ; direct_byte            8     6 (fixed)
 13810                           ; jumptable            260     6 (fixed)
 13811                           ;	Chosen strategy is simple_byte
 13812  0D62  0873               	movf	??_Config_GP1+1,w
 13813  0D63  3A00               	xorlw	0	; case 0
 13814  0D64  1903               	skipnz
 13815  0D65  2D67               	goto	i1l7423
 13816  0D66  2D6F               	goto	i1l1159
 13817  0D67                     i1l7423:	
 13818                           
 13819                           ; Switch size 1, requested type "speed"
 13820                           ; Number of cases is 2, Range of values is 0 to 4
 13821                           ; switch strategies available:
 13822                           ; Name         Instructions Cycles
 13823                           ; simple_byte            7     4 (average)
 13824                           ; direct_byte           16     6 (fixed)
 13825                           ; jumptable            260     6 (fixed)
 13826                           ;	Chosen strategy is simple_byte
 13827  0D67  0872               	movf	??_Config_GP1,w
 13828  0D68  3A00               	xorlw	0	; case 0
 13829  0D69  1903               	skipnz
 13830  0D6A  2D58               	goto	i1l1153
 13831  0D6B  3A04               	xorlw	4	; case 4
 13832  0D6C  1903               	skipnz
 13833  0D6D  2D5B               	goto	i1l1157
 13834  0D6E  2D6F               	goto	i1l1159
 13835  0D6F                     i1l1159:	
 13836  0D6F  0008               	return
 13837  0D70                     __end_of_Config_GP1:	
 13838  0D70                     __ptext71:	
 13839 ;; *************** function _PWM5_Initialize *****************
 13840 ;; Defined at:
 13841 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;		None
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  1    wreg      void 
 13848 ;; Registers used:
 13849 ;;		wreg, status,2, status,0
 13850 ;; Tracked objects:
 13851 ;;		On entry : 1F/1C
 13852 ;;		On exit  : 1F/C
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		_Config_GP1
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           
 13869                           ;psect for function _PWM5_Initialize
 13870  0D70                     _PWM5_Initialize:	
 13871                           
 13872                           ;pwm5.c: 62: PWM5CON = 0x90;
 13873                           
 13874                           ;incstack = 0
 13875                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 13876  0D70  3090               	movlw	144
 13877  0D71  002C               	movlb	12	; select bank12
 13878  0D72  0099               	movwf	25	;volatile
 13879                           
 13880                           ;pwm5.c: 65: PWM5DCH = 0x00;
 13881  0D73  0198               	clrf	24	;volatile
 13882                           
 13883                           ;pwm5.c: 68: PWM5DCL = 0x00;
 13884  0D74  0197               	clrf	23	;volatile
 13885                           
 13886                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 1;
 13887  0D75  081F               	movf	31,w	;volatile
 13888  0D76  39FC               	andlw	-4
 13889  0D77  3801               	iorlw	1
 13890  0D78  009F               	movwf	31	;volatile
 13891  0D79  0008               	return
 13892  0D7A                     __end_of_PWM5_Initialize:	
 13893  0D7A                     __ptext70:	
 13894 ;; *************** function i1_GPort_GP1_PWM *****************
 13895 ;; Defined at:
 13896 ;;		line 24 in file "GPports.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  duty            1    wreg     unsigned char 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  duty            1    1[COMMON] unsigned char 
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1    wreg      void 
 13903 ;; Registers used:
 13904 ;;		wreg, status,2, status,0
 13905 ;; Tracked objects:
 13906 ;;		On entry : 1F/C
 13907 ;;		On exit  : 1F/1
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;Total ram usage:        2 bytes
 13915 ;; Hardware stack levels used:    1
 13916 ;; This function calls:
 13917 ;;		Nothing
 13918 ;; This function is called by:
 13919 ;;		_Config_GP1
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           
 13924                           ;psect for function i1_GPort_GP1_PWM
 13925  0D7A                     i1_GPort_GP1_PWM:	
 13926                           
 13927                           ;incstack = 0
 13928                           ; Regs used in i1_GPort_GP1_PWM: [wreg+status,2+status,0]
 13929                           ;i1GPort_GP1_PWM@duty stored from wreg
 13930  0D7A  00F1               	movwf	i1GPort_GP1_PWM@duty
 13931                           
 13932                           ;GPports.c: 25: PWM5DCH = (duty & 0xFCU) >> 2U;
 13933  0D7B  00F0               	movwf	??i1_GPort_GP1_PWM
 13934  0D7C  36F0               	lsrf	??i1_GPort_GP1_PWM,f
 13935  0D7D  36F0               	lsrf	??i1_GPort_GP1_PWM,f
 13936  0D7E  0870               	movf	??i1_GPort_GP1_PWM,w
 13937  0D7F  393F               	andlw	63
 13938  0D80  0098               	movwf	24	;volatile
 13939                           
 13940                           ;GPports.c: 26: PWM5DCL = (duty & 0x03U) << 6U;
 13941  0D81  0871               	movf	i1GPort_GP1_PWM@duty,w
 13942  0D82  3903               	andlw	3
 13943  0D83  00F0               	movwf	??i1_GPort_GP1_PWM
 13944  0D84  0CF0               	rrf	??i1_GPort_GP1_PWM,f
 13945  0D85  0CF0               	rrf	??i1_GPort_GP1_PWM,f
 13946  0D86  0C70               	rrf	??i1_GPort_GP1_PWM,w
 13947  0D87  39C0               	andlw	192
 13948  0D88  0097               	movwf	23	;volatile
 13949                           
 13950                           ;GPports.c: 28: if (duty == 0) {
 13951  0D89  0871               	movf	i1GPort_GP1_PWM@duty,w
 13952  0D8A  1D03               	btfss	3,2
 13953  0D8B  2D8F               	goto	i1l1016
 13954                           
 13955                           ;GPports.c: 29: do { TRISCbits.TRISC7 = 1; } while(0);
 13956  0D8C  0021               	movlb	1	; select bank1
 13957  0D8D  178E               	bsf	14,7	;volatile
 13958  0D8E  0008               	return
 13959  0D8F                     i1l1016:	
 13960                           ;GPports.c: 31: do { TRISCbits.TRISC7 = 0; } while(0);
 13961                           
 13962  0D8F  0021               	movlb	1	; select bank1
 13963  0D90  138E               	bcf	14,7	;volatile
 13964  0D91  0008               	return
 13965  0D92                     __end_ofi1_GPort_GP1_PWM:	
 13966  0D92                     __ptext66:	
 13967 ;; *************** function _Config_GP2 *****************
 13968 ;; Defined at:
 13969 ;;		line 285 in file "GPports.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;		None
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;		None
 13974 ;; Return value:  Size  Location     Type
 13975 ;;                  1    wreg      void 
 13976 ;; Registers used:
 13977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13978 ;; Tracked objects:
 13979 ;;		On entry : 1F/0
 13980 ;;		On exit  : 1B/0
 13981 ;;		Unchanged: 0/0
 13982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13987 ;;Total ram usage:        2 bytes
 13988 ;; Hardware stack levels used:    1
 13989 ;; Hardware stack levels required when called:    1
 13990 ;; This function calls:
 13991 ;;		_PWM4_Initialize
 13992 ;;		i1_GPort_GP2_PWM
 13993 ;; This function is called by:
 13994 ;;		_RegisterWrite
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           
 13999                           ;psect for function _Config_GP2
 14000  0D92                     _Config_GP2:	
 14001                           
 14002                           ;GPports.c: 287: CCP4CON = 0;
 14003                           
 14004                           ;incstack = 0
 14005                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14006  0D92  0026               	movlb	6	; select bank6
 14007  0D93  0197               	clrf	23	;volatile
 14008                           
 14009                           ;GPports.c: 288: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14010  0D94  3055               	movlw	85
 14011  0D95  003C               	movlb	28	; select bank28
 14012  0D96  008F               	movwf	15	;volsfr
 14013  0D97  30AA               	movlw	170
 14014  0D98  008F               	movwf	15	;volsfr
 14015  0D99  100F               	bcf	15,0	;volsfr
 14016                           
 14017                           ;GPports.c: 289: RC6PPSbits.RC6PPS = 0x00;
 14018  0D9A  30E0               	movlw	-32
 14019  0D9B  003D               	movlb	29	; select bank29
 14020  0D9C  05A6               	andwf	38,f	;volatile
 14021                           
 14022                           ;GPports.c: 290: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14023  0D9D  3055               	movlw	85
 14024  0D9E  003C               	movlb	28	; select bank28
 14025  0D9F  008F               	movwf	15	;volsfr
 14026  0DA0  30AA               	movlw	170
 14027  0DA1  008F               	movwf	15	;volsfr
 14028  0DA2  140F               	bsf	15,0	;volsfr
 14029                           
 14030                           ;GPports.c: 292: switch (GP2CONF & 0x03) {
 14031  0DA3  2DD1               	goto	i1l4519
 14032  0DA4                     i1l1164:	
 14033                           ;GPports.c: 294: do { ANSELCbits.ANSC6 = 0; } while(0);
 14034                           
 14035  0DA4  0023               	movlb	3	; select bank3
 14036  0DA5  130E               	bcf	14,6	;volatile
 14037                           
 14038                           ;GPports.c: 295: do { LATCbits.LATC6 = 1; } while(0);
 14039  0DA6  0022               	movlb	2	; select bank2
 14040  0DA7  170E               	bsf	14,6	;volatile
 14041                           
 14042                           ;GPports.c: 296: do { TRISCbits.TRISC6 = 0; } while(0);
 14043  0DA8  0021               	movlb	1	; select bank1
 14044  0DA9  130E               	bcf	14,6	;volatile
 14045                           
 14046                           ;GPports.c: 297: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14047  0DAA  3055               	movlw	85
 14048  0DAB  003C               	movlb	28	; select bank28
 14049  0DAC  008F               	movwf	15	;volsfr
 14050  0DAD  30AA               	movlw	170
 14051  0DAE  008F               	movwf	15	;volsfr
 14052  0DAF  100F               	bcf	15,0	;volsfr
 14053                           
 14054                           ;GPports.c: 298: RC6PPSbits.RC6PPS = 0x0F;
 14055  0DB0  003D               	movlb	29	; select bank29
 14056  0DB1  0826               	movf	38,w	;volatile
 14057  0DB2  39E0               	andlw	-32
 14058  0DB3  380F               	iorlw	15
 14059  0DB4  00A6               	movwf	38	;volatile
 14060                           
 14061                           ;GPports.c: 299: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14062  0DB5  3055               	movlw	85
 14063  0DB6  003C               	movlb	28	; select bank28
 14064  0DB7  008F               	movwf	15	;volsfr
 14065  0DB8  30AA               	movlw	170
 14066  0DB9  008F               	movwf	15	;volsfr
 14067  0DBA  140F               	bsf	15,0	;volsfr
 14068                           
 14069                           ;GPports.c: 300: PWM4_Initialize();
 14070  0DBB  25FE  318C         	fcall	_PWM4_Initialize
 14071                           
 14072                           ;GPports.c: 301: GPort_GP2_PWM(0);
 14073  0DBD  3000               	movlw	0
 14074  0DBE  260A  318C         	fcall	i1_GPort_GP2_PWM
 14075                           
 14076                           ;GPports.c: 302: break;
 14077  0DC0  2DEB               	goto	i1l4523
 14078  0DC1                     i1l1172:	
 14079                           ;GPports.c: 305: do { ANSELCbits.ANSC6 = 0; } while(0);
 14080                           
 14081  0DC1  0023               	movlb	3	; select bank3
 14082  0DC2  130E               	bcf	14,6	;volatile
 14083                           
 14084                           ;GPports.c: 306: do { TRISCbits.TRISC6 = 0; } while(0);
 14085  0DC3  0021               	movlb	1	; select bank1
 14086  0DC4  130E               	bcf	14,6	;volatile
 14087                           
 14088                           ;GPports.c: 307: do { ODCONCbits.ODCC6 = 0; } while(0);
 14089  0DC5  0025               	movlb	5	; select bank5
 14090  0DC6  130E               	bcf	14,6	;volatile
 14091  0DC7  2DEB               	goto	i1l4523
 14092  0DC8                     i1l1179:	
 14093                           ;GPports.c: 311: do { TRISCbits.TRISC6 = 1; } while(0);
 14094                           
 14095  0DC8  0021               	movlb	1	; select bank1
 14096  0DC9  170E               	bsf	14,6	;volatile
 14097                           
 14098                           ;GPports.c: 312: do { ANSELCbits.ANSC6 = 1; } while(0);
 14099  0DCA  0023               	movlb	3	; select bank3
 14100  0DCB  2DCF               	goto	L11
 14101  0DCC                     i1l1184:	
 14102                           ;GPports.c: 316: do { ANSELCbits.ANSC6 = 0; } while(0);
 14103                           
 14104  0DCC  0023               	movlb	3	; select bank3
 14105  0DCD  130E               	bcf	14,6	;volatile
 14106                           
 14107                           ;GPports.c: 317: do { TRISCbits.TRISC6 = 1; } while(0);
 14108  0DCE  0021               	movlb	1	; select bank1
 14109  0DCF                     L11:	
 14110  0DCF  170E               	bsf	14,6	;volatile
 14111  0DD0  2DEB               	goto	i1l4523
 14112  0DD1                     i1l4519:	
 14113  0DD1  0020               	movlb	0	; select bank0
 14114  0DD2  0850               	movf	_GP2CONF,w	;volatile
 14115  0DD3  3903               	andlw	3
 14116  0DD4  00F1               	movwf	??_Config_GP2
 14117  0DD5  01F2               	clrf	??_Config_GP2+1
 14118                           
 14119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14120                           ; Switch size 1, requested type "speed"
 14121                           ; Number of cases is 1, Range of values is 0 to 0
 14122                           ; switch strategies available:
 14123                           ; Name         Instructions Cycles
 14124                           ; simple_byte            4     3 (average)
 14125                           ; direct_byte            8     6 (fixed)
 14126                           ; jumptable            260     6 (fixed)
 14127                           ;	Chosen strategy is simple_byte
 14128  0DD6  0872               	movf	??_Config_GP2+1,w
 14129  0DD7  3A00               	xorlw	0	; case 0
 14130  0DD8  1903               	skipnz
 14131  0DD9  2DDB               	goto	i1l7413
 14132  0DDA  2DEB               	goto	i1l4523
 14133  0DDB                     i1l7413:	
 14134                           
 14135                           ; Switch size 1, requested type "speed"
 14136                           ; Number of cases is 4, Range of values is 0 to 3
 14137                           ; switch strategies available:
 14138                           ; Name         Instructions Cycles
 14139                           ; direct_byte           14     6 (fixed)
 14140                           ; simple_byte           13     7 (average)
 14141                           ; jumptable            260     6 (fixed)
 14142                           ;	Chosen strategy is direct_byte
 14143  0DDB  0871               	movf	??_Config_GP2,w
 14144  0DDC  0084               	movwf	4
 14145  0DDD  3004               	movlw	4
 14146  0DDE  0204               	subwf	4,w
 14147  0DDF  1803               	skipnc
 14148  0DE0  2DEB               	goto	i1l4523
 14149  0DE1  3188               	movlp	high i1S7415
 14150  0DE2  3504               	lslf	4,w
 14151  0DE3  3E78               	addlw	low i1S7415
 14152  0DE4  0082               	movwf	2
 14153  0DE5                     i1l1190:	
 14154                           ;GPports.c: 323: do { WPUCbits.WPUC6 = 0; } while(0);
 14155                           
 14156  0DE5  0024               	movlb	4	; select bank4
 14157  0DE6  130E               	bcf	14,6	;volatile
 14158  0DE7  0008               	return
 14159  0DE8                     i1l1194:	
 14160                           ;GPports.c: 326: do { WPUCbits.WPUC6 = 1; } while(0);
 14161                           
 14162  0DE8  0024               	movlb	4	; select bank4
 14163  0DE9  170E               	bsf	14,6	;volatile
 14164  0DEA  0008               	return
 14165  0DEB                     i1l4523:	
 14166  0DEB  0020               	movlb	0	; select bank0
 14167  0DEC  0850               	movf	_GP2CONF,w	;volatile
 14168  0DED  3904               	andlw	4
 14169  0DEE  00F1               	movwf	??_Config_GP2
 14170  0DEF  01F2               	clrf	??_Config_GP2+1
 14171                           
 14172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14173                           ; Switch size 1, requested type "speed"
 14174                           ; Number of cases is 1, Range of values is 0 to 0
 14175                           ; switch strategies available:
 14176                           ; Name         Instructions Cycles
 14177                           ; simple_byte            4     3 (average)
 14178                           ; direct_byte            8     6 (fixed)
 14179                           ; jumptable            260     6 (fixed)
 14180                           ;	Chosen strategy is simple_byte
 14181  0DF0  0872               	movf	??_Config_GP2+1,w
 14182  0DF1  3A00               	xorlw	0	; case 0
 14183  0DF2  1903               	skipnz
 14184  0DF3  2DF5               	goto	i1l7417
 14185  0DF4  2DFD               	goto	i1l1196
 14186  0DF5                     i1l7417:	
 14187                           
 14188                           ; Switch size 1, requested type "speed"
 14189                           ; Number of cases is 2, Range of values is 0 to 4
 14190                           ; switch strategies available:
 14191                           ; Name         Instructions Cycles
 14192                           ; simple_byte            7     4 (average)
 14193                           ; direct_byte           16     6 (fixed)
 14194                           ; jumptable            260     6 (fixed)
 14195                           ;	Chosen strategy is simple_byte
 14196  0DF5  0871               	movf	??_Config_GP2,w
 14197  0DF6  3A00               	xorlw	0	; case 0
 14198  0DF7  1903               	skipnz
 14199  0DF8  2DE5               	goto	i1l1190
 14200  0DF9  3A04               	xorlw	4	; case 4
 14201  0DFA  1903               	skipnz
 14202  0DFB  2DE8               	goto	i1l1194
 14203  0DFC  2DFD               	goto	i1l1196
 14204  0DFD                     i1l1196:	
 14205  0DFD  0008               	return
 14206  0DFE                     __end_of_Config_GP2:	
 14207  0DFE                     __ptext68:	
 14208 ;; *************** function _PWM4_Initialize *****************
 14209 ;; Defined at:
 14210 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;		None
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;		None
 14215 ;; Return value:  Size  Location     Type
 14216 ;;                  1    wreg      void 
 14217 ;; Registers used:
 14218 ;;		wreg, status,2, status,0
 14219 ;; Tracked objects:
 14220 ;;		On entry : 1F/1C
 14221 ;;		On exit  : 1F/5
 14222 ;;		Unchanged: 0/0
 14223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;Total ram usage:        0 bytes
 14229 ;; Hardware stack levels used:    1
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		_Config_GP2
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           
 14238                           ;psect for function _PWM4_Initialize
 14239  0DFE                     _PWM4_Initialize:	
 14240                           
 14241                           ;pwm4.c: 69: CCP4CON = 0x8F;
 14242                           
 14243                           ;incstack = 0
 14244                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 14245  0DFE  308F               	movlw	143
 14246  0DFF  0026               	movlb	6	; select bank6
 14247  0E00  0097               	movwf	23	;volatile
 14248                           
 14249                           ;pwm4.c: 72: CCPR4H = 0x00;
 14250  0E01  0196               	clrf	22	;volatile
 14251                           
 14252                           ;pwm4.c: 75: CCPR4L = 0xFF;
 14253  0E02  30FF               	movlw	255
 14254  0E03  0095               	movwf	21	;volatile
 14255                           
 14256                           ;pwm4.c: 78: CCPTMRSbits.C4TSEL = 0x1;
 14257  0E04  0025               	movlb	5	; select bank5
 14258  0E05  081F               	movf	31,w	;volatile
 14259  0E06  393F               	andlw	-193
 14260  0E07  3840               	iorlw	64
 14261  0E08  009F               	movwf	31	;volatile
 14262  0E09  0008               	return
 14263  0E0A                     __end_of_PWM4_Initialize:	
 14264  0E0A                     __ptext67:	
 14265 ;; *************** function i1_GPort_GP2_PWM *****************
 14266 ;; Defined at:
 14267 ;;		line 38 in file "GPports.c"
 14268 ;; Parameters:    Size  Location     Type
 14269 ;;  duty            1    wreg     unsigned char 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  duty            1    0[COMMON] unsigned char 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  1    wreg      void 
 14274 ;; Registers used:
 14275 ;;		wreg, status,2, status,0
 14276 ;; Tracked objects:
 14277 ;;		On entry : 1F/5
 14278 ;;		On exit  : 1F/1
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;Total ram usage:        1 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; This function calls:
 14288 ;;		Nothing
 14289 ;; This function is called by:
 14290 ;;		_Config_GP2
 14291 ;; This function uses a non-reentrant model
 14292 ;;
 14293                           
 14294                           
 14295                           ;psect for function i1_GPort_GP2_PWM
 14296  0E0A                     i1_GPort_GP2_PWM:	
 14297                           
 14298                           ;incstack = 0
 14299                           ; Regs used in i1_GPort_GP2_PWM: [wreg+status,2+status,0]
 14300                           ;i1GPort_GP2_PWM@duty stored from wreg
 14301  0E0A  00F0               	movwf	i1GPort_GP2_PWM@duty
 14302                           
 14303                           ;GPports.c: 40: CCPR4H = 0x00;
 14304  0E0B  0026               	movlb	6	; select bank6
 14305  0E0C  0196               	clrf	22	;volatile
 14306                           
 14307                           ;GPports.c: 41: CCPR4L = 0xFFU - duty;
 14308  0E0D  0970               	comf	i1GPort_GP2_PWM@duty,w
 14309  0E0E  0095               	movwf	21	;volatile
 14310                           
 14311                           ;GPports.c: 43: if (duty == 0) {
 14312  0E0F  0870               	movf	i1GPort_GP2_PWM@duty,w
 14313  0E10  1D03               	btfss	3,2
 14314  0E11  2E15               	goto	i1l1025
 14315                           
 14316                           ;GPports.c: 44: do { TRISCbits.TRISC6 = 1; } while(0);
 14317  0E12  0021               	movlb	1	; select bank1
 14318  0E13  170E               	bsf	14,6	;volatile
 14319  0E14  0008               	return
 14320  0E15                     i1l1025:	
 14321                           ;GPports.c: 46: do { TRISCbits.TRISC6 = 0; } while(0);
 14322                           
 14323  0E15  0021               	movlb	1	; select bank1
 14324  0E16  130E               	bcf	14,6	;volatile
 14325  0E17  0008               	return
 14326  0E18                     __end_ofi1_GPort_GP2_PWM:	
 14327  0E18                     __ptext63:	
 14328 ;; *************** function _Config_GP3 *****************
 14329 ;; Defined at:
 14330 ;;		line 336 in file "GPports.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;		None
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;		None
 14335 ;; Return value:  Size  Location     Type
 14336 ;;                  1    wreg      void 
 14337 ;; Registers used:
 14338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14339 ;; Tracked objects:
 14340 ;;		On entry : 1F/0
 14341 ;;		On exit  : 1B/0
 14342 ;;		Unchanged: 0/0
 14343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;Total ram usage:        2 bytes
 14349 ;; Hardware stack levels used:    1
 14350 ;; Hardware stack levels required when called:    1
 14351 ;; This function calls:
 14352 ;;		_PWM1_Initialize
 14353 ;;		i1_GPort_GP3_PWM
 14354 ;; This function is called by:
 14355 ;;		_RegisterWrite
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           
 14360                           ;psect for function _Config_GP3
 14361  0E18                     _Config_GP3:	
 14362                           
 14363                           ;GPports.c: 337: CCP1CON = 0;
 14364                           
 14365                           ;incstack = 0
 14366                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14367  0E18  0025               	movlb	5	; select bank5
 14368  0E19  0193               	clrf	19	;volatile
 14369                           
 14370                           ;GPports.c: 338: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14371  0E1A  3055               	movlw	85
 14372  0E1B  003C               	movlb	28	; select bank28
 14373  0E1C  008F               	movwf	15	;volsfr
 14374  0E1D  30AA               	movlw	170
 14375  0E1E  008F               	movwf	15	;volsfr
 14376  0E1F  100F               	bcf	15,0	;volsfr
 14377                           
 14378                           ;GPports.c: 339: RC5PPSbits.RC5PPS = 0x00;
 14379  0E20  30E0               	movlw	-32
 14380  0E21  003D               	movlb	29	; select bank29
 14381  0E22  05A5               	andwf	37,f	;volatile
 14382                           
 14383                           ;GPports.c: 340: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14384  0E23  3055               	movlw	85
 14385  0E24  003C               	movlb	28	; select bank28
 14386  0E25  008F               	movwf	15	;volsfr
 14387  0E26  30AA               	movlw	170
 14388  0E27  008F               	movwf	15	;volsfr
 14389  0E28  140F               	bsf	15,0	;volsfr
 14390                           
 14391                           ;GPports.c: 342: switch (GP3CONF & 0x03) {
 14392  0E29  2E57               	goto	i1l4571
 14393  0E2A                     i1l1201:	
 14394                           ;GPports.c: 344: do { ANSELCbits.ANSC5 = 0; } while(0);
 14395                           
 14396  0E2A  0023               	movlb	3	; select bank3
 14397  0E2B  128E               	bcf	14,5	;volatile
 14398                           
 14399                           ;GPports.c: 345: do { LATCbits.LATC5 = 1; } while(0);
 14400  0E2C  0022               	movlb	2	; select bank2
 14401  0E2D  168E               	bsf	14,5	;volatile
 14402                           
 14403                           ;GPports.c: 346: do { TRISCbits.TRISC5 = 0; } while(0);
 14404  0E2E  0021               	movlb	1	; select bank1
 14405  0E2F  128E               	bcf	14,5	;volatile
 14406                           
 14407                           ;GPports.c: 347: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14408  0E30  3055               	movlw	85
 14409  0E31  003C               	movlb	28	; select bank28
 14410  0E32  008F               	movwf	15	;volsfr
 14411  0E33  30AA               	movlw	170
 14412  0E34  008F               	movwf	15	;volsfr
 14413  0E35  100F               	bcf	15,0	;volsfr
 14414                           
 14415                           ;GPports.c: 348: RC5PPSbits.RC5PPS = 0x0C;
 14416  0E36  003D               	movlb	29	; select bank29
 14417  0E37  0825               	movf	37,w	;volatile
 14418  0E38  39E0               	andlw	-32
 14419  0E39  380C               	iorlw	12
 14420  0E3A  00A5               	movwf	37	;volatile
 14421                           
 14422                           ;GPports.c: 349: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14423  0E3B  3055               	movlw	85
 14424  0E3C  003C               	movlb	28	; select bank28
 14425  0E3D  008F               	movwf	15	;volsfr
 14426  0E3E  30AA               	movlw	170
 14427  0E3F  008F               	movwf	15	;volsfr
 14428  0E40  140F               	bsf	15,0	;volsfr
 14429                           
 14430                           ;GPports.c: 350: PWM1_Initialize();
 14431  0E41  2684  318C         	fcall	_PWM1_Initialize
 14432                           
 14433                           ;GPports.c: 351: GPort_GP3_PWM(0);
 14434  0E43  3000               	movlw	0
 14435  0E44  268F  318C         	fcall	i1_GPort_GP3_PWM
 14436                           
 14437                           ;GPports.c: 352: break;
 14438  0E46  2E71               	goto	i1l4575
 14439  0E47                     i1l1209:	
 14440                           ;GPports.c: 355: do { ANSELCbits.ANSC5 = 0; } while(0);
 14441                           
 14442  0E47  0023               	movlb	3	; select bank3
 14443  0E48  128E               	bcf	14,5	;volatile
 14444                           
 14445                           ;GPports.c: 356: do { TRISCbits.TRISC5 = 0; } while(0);
 14446  0E49  0021               	movlb	1	; select bank1
 14447  0E4A  128E               	bcf	14,5	;volatile
 14448                           
 14449                           ;GPports.c: 357: do { ODCONCbits.ODCC5 = 0; } while(0);
 14450  0E4B  0025               	movlb	5	; select bank5
 14451  0E4C  128E               	bcf	14,5	;volatile
 14452  0E4D  2E71               	goto	i1l4575
 14453  0E4E                     i1l1216:	
 14454                           ;GPports.c: 361: do { TRISCbits.TRISC5 = 1; } while(0);
 14455                           
 14456  0E4E  0021               	movlb	1	; select bank1
 14457  0E4F  168E               	bsf	14,5	;volatile
 14458                           
 14459                           ;GPports.c: 362: do { ANSELCbits.ANSC5 = 1; } while(0);
 14460  0E50  0023               	movlb	3	; select bank3
 14461  0E51  2E55               	goto	L10
 14462  0E52                     i1l1221:	
 14463                           ;GPports.c: 366: do { ANSELCbits.ANSC5 = 0; } while(0);
 14464                           
 14465  0E52  0023               	movlb	3	; select bank3
 14466  0E53  128E               	bcf	14,5	;volatile
 14467                           
 14468                           ;GPports.c: 367: do { TRISCbits.TRISC5 = 1; } while(0);
 14469  0E54  0021               	movlb	1	; select bank1
 14470  0E55                     L10:	
 14471  0E55  168E               	bsf	14,5	;volatile
 14472  0E56  2E71               	goto	i1l4575
 14473  0E57                     i1l4571:	
 14474  0E57  0020               	movlb	0	; select bank0
 14475  0E58  084F               	movf	_GP3CONF,w	;volatile
 14476  0E59  3903               	andlw	3
 14477  0E5A  00F1               	movwf	??_Config_GP3
 14478  0E5B  01F2               	clrf	??_Config_GP3+1
 14479                           
 14480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14481                           ; Switch size 1, requested type "speed"
 14482                           ; Number of cases is 1, Range of values is 0 to 0
 14483                           ; switch strategies available:
 14484                           ; Name         Instructions Cycles
 14485                           ; simple_byte            4     3 (average)
 14486                           ; direct_byte            8     6 (fixed)
 14487                           ; jumptable            260     6 (fixed)
 14488                           ;	Chosen strategy is simple_byte
 14489  0E5C  0872               	movf	??_Config_GP3+1,w
 14490  0E5D  3A00               	xorlw	0	; case 0
 14491  0E5E  1903               	skipnz
 14492  0E5F  2E61               	goto	i1l7407
 14493  0E60  2E71               	goto	i1l4575
 14494  0E61                     i1l7407:	
 14495                           
 14496                           ; Switch size 1, requested type "speed"
 14497                           ; Number of cases is 4, Range of values is 0 to 3
 14498                           ; switch strategies available:
 14499                           ; Name         Instructions Cycles
 14500                           ; direct_byte           14     6 (fixed)
 14501                           ; simple_byte           13     7 (average)
 14502                           ; jumptable            260     6 (fixed)
 14503                           ;	Chosen strategy is direct_byte
 14504  0E61  0871               	movf	??_Config_GP3,w
 14505  0E62  0084               	movwf	4
 14506  0E63  3004               	movlw	4
 14507  0E64  0204               	subwf	4,w
 14508  0E65  1803               	skipnc
 14509  0E66  2E71               	goto	i1l4575
 14510  0E67  3188               	movlp	high i1S7409
 14511  0E68  3504               	lslf	4,w
 14512  0E69  3E70               	addlw	low i1S7409
 14513  0E6A  0082               	movwf	2
 14514  0E6B                     i1l1227:	
 14515                           ;GPports.c: 373: do { WPUCbits.WPUC5 = 0; } while(0);
 14516                           
 14517  0E6B  0024               	movlb	4	; select bank4
 14518  0E6C  128E               	bcf	14,5	;volatile
 14519  0E6D  0008               	return
 14520  0E6E                     i1l1231:	
 14521                           ;GPports.c: 376: do { WPUCbits.WPUC5 = 1; } while(0);
 14522                           
 14523  0E6E  0024               	movlb	4	; select bank4
 14524  0E6F  168E               	bsf	14,5	;volatile
 14525  0E70  0008               	return
 14526  0E71                     i1l4575:	
 14527  0E71  0020               	movlb	0	; select bank0
 14528  0E72  084F               	movf	_GP3CONF,w	;volatile
 14529  0E73  3904               	andlw	4
 14530  0E74  00F1               	movwf	??_Config_GP3
 14531  0E75  01F2               	clrf	??_Config_GP3+1
 14532                           
 14533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14534                           ; Switch size 1, requested type "speed"
 14535                           ; Number of cases is 1, Range of values is 0 to 0
 14536                           ; switch strategies available:
 14537                           ; Name         Instructions Cycles
 14538                           ; simple_byte            4     3 (average)
 14539                           ; direct_byte            8     6 (fixed)
 14540                           ; jumptable            260     6 (fixed)
 14541                           ;	Chosen strategy is simple_byte
 14542  0E76  0872               	movf	??_Config_GP3+1,w
 14543  0E77  3A00               	xorlw	0	; case 0
 14544  0E78  1903               	skipnz
 14545  0E79  2E7B               	goto	i1l7411
 14546  0E7A  2E83               	goto	i1l1233
 14547  0E7B                     i1l7411:	
 14548                           
 14549                           ; Switch size 1, requested type "speed"
 14550                           ; Number of cases is 2, Range of values is 0 to 4
 14551                           ; switch strategies available:
 14552                           ; Name         Instructions Cycles
 14553                           ; simple_byte            7     4 (average)
 14554                           ; direct_byte           16     6 (fixed)
 14555                           ; jumptable            260     6 (fixed)
 14556                           ;	Chosen strategy is simple_byte
 14557  0E7B  0871               	movf	??_Config_GP3,w
 14558  0E7C  3A00               	xorlw	0	; case 0
 14559  0E7D  1903               	skipnz
 14560  0E7E  2E6B               	goto	i1l1227
 14561  0E7F  3A04               	xorlw	4	; case 4
 14562  0E80  1903               	skipnz
 14563  0E81  2E6E               	goto	i1l1231
 14564  0E82  2E83               	goto	i1l1233
 14565  0E83                     i1l1233:	
 14566  0E83  0008               	return
 14567  0E84                     __end_of_Config_GP3:	
 14568  0E84                     __ptext65:	
 14569 ;; *************** function _PWM1_Initialize *****************
 14570 ;; Defined at:
 14571 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;		None
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;		None
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  1    wreg      void 
 14578 ;; Registers used:
 14579 ;;		wreg, status,2, status,0
 14580 ;; Tracked objects:
 14581 ;;		On entry : 2/1
 14582 ;;		On exit  : 1F/5
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;Total ram usage:        0 bytes
 14590 ;; Hardware stack levels used:    1
 14591 ;; This function calls:
 14592 ;;		Nothing
 14593 ;; This function is called by:
 14594 ;;		_RGB_EncoderMode
 14595 ;;		_Config_GP3
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           
 14600                           ;psect for function _PWM1_Initialize
 14601  0E84                     _PWM1_Initialize:	
 14602                           
 14603                           ;pwm1.c: 69: CCP1CON = 0x8F;
 14604                           
 14605                           ;incstack = 0
 14606                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 14607  0E84  308F               	movlw	143
 14608  0E85  0025               	movlb	5	; select bank5
 14609  0E86  0093               	movwf	19	;volatile
 14610                           
 14611                           ;pwm1.c: 72: CCPR1H = 0x00;
 14612  0E87  0192               	clrf	18	;volatile
 14613                           
 14614                           ;pwm1.c: 75: CCPR1L = 0xFF;
 14615  0E88  30FF               	movlw	255
 14616  0E89  0091               	movwf	17	;volatile
 14617                           
 14618                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 14619  0E8A  081F               	movf	31,w	;volatile
 14620  0E8B  39FC               	andlw	-4
 14621  0E8C  3801               	iorlw	1
 14622  0E8D  009F               	movwf	31	;volatile
 14623  0E8E  0008               	return
 14624  0E8F                     __end_of_PWM1_Initialize:	
 14625  0E8F                     __ptext64:	
 14626 ;; *************** function i1_GPort_GP3_PWM *****************
 14627 ;; Defined at:
 14628 ;;		line 53 in file "GPports.c"
 14629 ;; Parameters:    Size  Location     Type
 14630 ;;  duty            1    wreg     unsigned char 
 14631 ;; Auto vars:     Size  Location     Type
 14632 ;;  duty            1    0[COMMON] unsigned char 
 14633 ;; Return value:  Size  Location     Type
 14634 ;;                  1    wreg      void 
 14635 ;; Registers used:
 14636 ;;		wreg, status,2, status,0
 14637 ;; Tracked objects:
 14638 ;;		On entry : 1F/5
 14639 ;;		On exit  : 1F/1
 14640 ;;		Unchanged: 0/0
 14641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;Total ram usage:        1 bytes
 14647 ;; Hardware stack levels used:    1
 14648 ;; This function calls:
 14649 ;;		Nothing
 14650 ;; This function is called by:
 14651 ;;		_Config_GP3
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           
 14655                           
 14656                           ;psect for function i1_GPort_GP3_PWM
 14657  0E8F                     i1_GPort_GP3_PWM:	
 14658                           
 14659                           ;incstack = 0
 14660                           ; Regs used in i1_GPort_GP3_PWM: [wreg+status,2+status,0]
 14661                           ;i1GPort_GP3_PWM@duty stored from wreg
 14662  0E8F  00F0               	movwf	i1GPort_GP3_PWM@duty
 14663                           
 14664                           ;GPports.c: 55: CCPR1H = 0x00;
 14665  0E90  0192               	clrf	18	;volatile
 14666                           
 14667                           ;GPports.c: 56: CCPR1L = 0xFFU - duty;
 14668  0E91  0970               	comf	i1GPort_GP3_PWM@duty,w
 14669  0E92  0091               	movwf	17	;volatile
 14670                           
 14671                           ;GPports.c: 58: if (duty == 0) {
 14672  0E93  0870               	movf	i1GPort_GP3_PWM@duty,w
 14673  0E94  1D03               	btfss	3,2
 14674  0E95  2E99               	goto	i1l1034
 14675                           
 14676                           ;GPports.c: 59: do { TRISCbits.TRISC5 = 1; } while(0);
 14677  0E96  0021               	movlb	1	; select bank1
 14678  0E97  168E               	bsf	14,5	;volatile
 14679  0E98  0008               	return
 14680  0E99                     i1l1034:	
 14681                           ;GPports.c: 61: do { TRISCbits.TRISC5 = 0; } while(0);
 14682                           
 14683  0E99  0021               	movlb	1	; select bank1
 14684  0E9A  128E               	bcf	14,5	;volatile
 14685  0E9B  0008               	return
 14686  0E9C                     __end_ofi1_GPort_GP3_PWM:	
 14687  0E9C                     __ptext58:	
 14688 ;; *************** function _GeneralDataSet *****************
 14689 ;; Defined at:
 14690 ;;		line 435 in file "i2c_register.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;		None
 14693 ;; Auto vars:     Size  Location     Type
 14694 ;;		None
 14695 ;; Return value:  Size  Location     Type
 14696 ;;                  1    wreg      void 
 14697 ;; Registers used:
 14698 ;;		wreg, status,2, status,0, pclath, cstack
 14699 ;; Tracked objects:
 14700 ;;		On entry : 1F/0
 14701 ;;		On exit  : 0/0
 14702 ;;		Unchanged: 0/0
 14703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14708 ;;Total ram usage:        0 bytes
 14709 ;; Hardware stack levels used:    1
 14710 ;; Hardware stack levels required when called:    2
 14711 ;; This function calls:
 14712 ;;		_RGB_EncoderMode
 14713 ;;		_STD_EncoderMode
 14714 ;; This function is called by:
 14715 ;;		_RegisterWrite
 14716 ;; This function uses a non-reentrant model
 14717 ;;
 14718                           
 14719                           
 14720                           ;psect for function _GeneralDataSet
 14721  0E9C                     _GeneralDataSet:	
 14722                           
 14723                           ;i2c_register.c: 437: if (C_ETYPE == 1) {
 14724                           
 14725                           ;incstack = 0
 14726                           ; Regs used in _GeneralDataSet: [wreg+status,2+status,0+pclath+cstack]
 14727  0E9C  0B40               	decfsz	_C_ETYPE,w	;volatile
 14728  0E9D  2EA1               	goto	i1l4373
 14729                           
 14730                           ;i2c_register.c: 438: RGB_EncoderMode();
 14731  0E9E  2703  318C         	fcall	_RGB_EncoderMode
 14732                           
 14733                           ;i2c_register.c: 439: } else {
 14734  0EA0  2EA3               	goto	i1l4375
 14735  0EA1                     i1l4373:	
 14736                           
 14737                           ;i2c_register.c: 440: STD_EncoderMode();
 14738  0EA1  273B  318C         	fcall	_STD_EncoderMode
 14739  0EA3                     i1l4375:	
 14740                           
 14741                           ;i2c_register.c: 441: };i2c_register.c: 444: if (C_DIRE == 1) {
 14742  0EA3  0021               	movlb	1	; select bank1
 14743  0EA4  0B34               	decfsz	_C_DIRE^(0+128),w	;volatile
 14744  0EA5  2EBA               	goto	i1l4387
 14745                           
 14746                           ;i2c_register.c: 445: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14747  0EA6  3055               	movlw	85
 14748  0EA7  003C               	movlb	28	; select bank28
 14749  0EA8  008F               	movwf	15	;volsfr
 14750  0EA9  30AA               	movlw	170
 14751  0EAA  008F               	movwf	15	;volsfr
 14752  0EAB  100F               	bcf	15,0	;volsfr
 14753                           
 14754                           ;i2c_register.c: 446: CLCIN1PPSbits.CLCIN1PPS = 0x11;
 14755  0EAC  0829               	movf	41,w	;volatile
 14756  0EAD  39E0               	andlw	-32
 14757  0EAE  3811               	iorlw	17
 14758  0EAF  00A9               	movwf	41	;volatile
 14759                           
 14760                           ;i2c_register.c: 447: CLCIN0PPSbits.CLCIN0PPS = 0x10;
 14761  0EB0  0828               	movf	40,w	;volatile
 14762  0EB1  39E0               	andlw	-32
 14763  0EB2  3810               	iorlw	16
 14764  0EB3  00A8               	movwf	40	;volatile
 14765                           
 14766                           ;i2c_register.c: 448: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14767  0EB4  3055               	movlw	85
 14768  0EB5  008F               	movwf	15	;volsfr
 14769  0EB6  30AA               	movlw	170
 14770  0EB7  008F               	movwf	15	;volsfr
 14771  0EB8  140F               	bsf	15,0	;volsfr
 14772                           
 14773                           ;i2c_register.c: 449: } else {
 14774  0EB9  2ECD               	goto	i1l4397
 14775  0EBA                     i1l4387:	
 14776                           
 14777                           ;i2c_register.c: 450: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14778  0EBA  3055               	movlw	85
 14779  0EBB  003C               	movlb	28	; select bank28
 14780  0EBC  008F               	movwf	15	;volsfr
 14781  0EBD  30AA               	movlw	170
 14782  0EBE  008F               	movwf	15	;volsfr
 14783  0EBF  100F               	bcf	15,0	;volsfr
 14784                           
 14785                           ;i2c_register.c: 451: CLCIN1PPSbits.CLCIN1PPS = 0x10;
 14786  0EC0  0829               	movf	41,w	;volatile
 14787  0EC1  39E0               	andlw	-32
 14788  0EC2  3810               	iorlw	16
 14789  0EC3  00A9               	movwf	41	;volatile
 14790                           
 14791                           ;i2c_register.c: 452: CLCIN0PPSbits.CLCIN0PPS = 0x11;
 14792  0EC4  0828               	movf	40,w	;volatile
 14793  0EC5  39E0               	andlw	-32
 14794  0EC6  3811               	iorlw	17
 14795  0EC7  00A8               	movwf	40	;volatile
 14796                           
 14797                           ;i2c_register.c: 453: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14798  0EC8  3055               	movlw	85
 14799  0EC9  008F               	movwf	15	;volsfr
 14800  0ECA  30AA               	movlw	170
 14801  0ECB  008F               	movwf	15	;volsfr
 14802  0ECC  140F               	bsf	15,0	;volsfr
 14803  0ECD                     i1l4397:	
 14804                           
 14805                           ;i2c_register.c: 454: };i2c_register.c: 456: if (C_IPUD == 1) {
 14806  0ECD  0020               	movlb	0	; select bank0
 14807  0ECE  0B3E               	decfsz	_C_IPUD,w	;volatile
 14808  0ECF  2ED3               	goto	i1l898
 14809                           
 14810                           ;i2c_register.c: 457: do { WPUBbits.WPUB5 = 0; } while(0);
 14811  0ED0  0024               	movlb	4	; select bank4
 14812  0ED1  128D               	bcf	13,5	;volatile
 14813  0ED2  2ED5               	goto	i1l900
 14814  0ED3                     i1l898:	
 14815                           ;i2c_register.c: 460: do { WPUBbits.WPUB5 = 1; } while(0);
 14816                           
 14817                           ;i2c_register.c: 458: do { LATBbits.LATB5 = 1; } while(0);
 14818                           
 14819  0ED3  0024               	movlb	4	; select bank4
 14820  0ED4  168D               	bsf	13,5	;volatile
 14821  0ED5                     i1l900:	
 14822                           ;i2c_register.c: 461: do { LATBbits.LATB5 = 1; } while(0);
 14823                           
 14824  0ED5  0022               	movlb	2	; select bank2
 14825  0ED6  168D               	bsf	13,5	;volatile
 14826                           
 14827                           ;i2c_register.c: 463: };i2c_register.c: 465: if (C_RMOD == 1) {
 14828  0ED7  0020               	movlb	0	; select bank0
 14829  0ED8  0B3F               	decfsz	_C_RMOD,w	;volatile
 14830  0ED9  2EDF               	goto	i1l902
 14831                           
 14832                           ;i2c_register.c: 466: PIR3bits.CLC1IF = 0;
 14833  0EDA  1013               	bcf	19,0	;volatile
 14834                           
 14835                           ;i2c_register.c: 467: PIE3bits.CLC1IE = 0;
 14836  0EDB  0021               	movlb	1	; select bank1
 14837  0EDC  1013               	bcf	19,0	;volatile
 14838                           
 14839                           ;i2c_register.c: 468: CLC1CON = 0x9D;
 14840  0EDD  309D               	movlw	157
 14841  0EDE  2EE3               	goto	L9
 14842  0EDF                     i1l902:	
 14843                           ;i2c_register.c: 476: } else {
 14844                           
 14845                           ;i2c_register.c: 474: PIE3bits.CLC2IE = 1;
 14846                           
 14847                           ;i2c_register.c: 473: CLC2CON = 0x9D;
 14848                           
 14849                           ;i2c_register.c: 472: PIE3bits.CLC2IE = 0;
 14850                           
 14851                           ;i2c_register.c: 471: PIR3bits.CLC2IF = 0;
 14852                           
 14853                           ;i2c_register.c: 469: PIE3bits.CLC1IE = 1;
 14854                           
 14855                           
 14856                           ;i2c_register.c: 477: PIR3bits.CLC1IF = 0;
 14857  0EDF  1013               	bcf	19,0	;volatile
 14858                           
 14859                           ;i2c_register.c: 478: PIE3bits.CLC1IE = 0;
 14860  0EE0  0021               	movlb	1	; select bank1
 14861  0EE1  1013               	bcf	19,0	;volatile
 14862                           
 14863                           ;i2c_register.c: 479: CLC1CON = 0x95;
 14864  0EE2  3095               	movlw	149
 14865  0EE3                     L9:	
 14866  0EE3  003E               	movlb	30	; select bank30
 14867  0EE4  0090               	movwf	16	;volatile
 14868                           
 14869                           ;i2c_register.c: 480: PIE3bits.CLC1IE = 1;
 14870  0EE5  0021               	movlb	1	; select bank1
 14871  0EE6  1413               	bsf	19,0	;volatile
 14872                           
 14873                           ;i2c_register.c: 482: PIR3bits.CLC2IF = 0;
 14874  0EE7  0020               	movlb	0	; select bank0
 14875  0EE8  1093               	bcf	19,1	;volatile
 14876                           
 14877                           ;i2c_register.c: 483: PIE3bits.CLC2IE = 0;
 14878  0EE9  0021               	movlb	1	; select bank1
 14879  0EEA  1093               	bcf	19,1	;volatile
 14880                           
 14881                           ;i2c_register.c: 484: CLC2CON = 0x95;
 14882  0EEB  003E               	movlb	30	; select bank30
 14883  0EEC  009A               	movwf	26	;volatile
 14884                           
 14885                           ;i2c_register.c: 485: PIE3bits.CLC2IE = 1;
 14886  0EED  0021               	movlb	1	; select bank1
 14887  0EEE  1493               	bsf	19,1	;volatile
 14888                           
 14889                           ;i2c_register.c: 486: };i2c_register.c: 489: if (C_DTYPE == 0) {
 14890  0EEF  0020               	movlb	0	; select bank0
 14891  0EF0  083C               	movf	_C_DTYPE,w	;volatile
 14892  0EF1  1D03               	btfss	3,2
 14893  0EF2  2EF9               	goto	i1l4427
 14894                           
 14895                           ;i2c_register.c: 490: ISTEP.val = 1;
 14896  0EF3  3001               	movlw	1
 14897  0EF4  00A0               	movwf	_ISTEP	;volatile
 14898  0EF5  01A1               	clrf	_ISTEP+1	;volatile
 14899  0EF6  01A2               	clrf	_ISTEP+2	;volatile
 14900  0EF7  01A3               	clrf	_ISTEP+3	;volatile
 14901                           
 14902                           ;i2c_register.c: 491: } else {
 14903  0EF8  2EFF               	goto	i1l4429
 14904  0EF9                     i1l4427:	
 14905                           
 14906                           ;i2c_register.c: 492: ISTEP.fval = 1.0;
 14907  0EF9  303F               	movlw	63
 14908  0EFA  00A3               	movwf	_ISTEP+3	;volatile
 14909  0EFB  3080               	movlw	128
 14910  0EFC  00A2               	movwf	_ISTEP+2	;volatile
 14911  0EFD  01A1               	clrf	_ISTEP+1	;volatile
 14912  0EFE  01A0               	clrf	_ISTEP	;volatile
 14913  0EFF                     i1l4429:	
 14914                           
 14915                           ;i2c_register.c: 493: };i2c_register.c: 495: if (C_RESET == 1) {
 14916  0EFF  0B42               	decfsz	_C_RESET,w	;volatile
 14917  0F00  0008               	return
 14918  0F01  0001               	reset	;# 
 14919  0F02  0008               	return
 14920  0F03                     __end_of_GeneralDataSet:	
 14921  0F03                     __ptext60:	
 14922 ;; *************** function _RGB_EncoderMode *****************
 14923 ;; Defined at:
 14924 ;;		line 181 in file "GPports.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;		None
 14927 ;; Auto vars:     Size  Location     Type
 14928 ;;		None
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  1    wreg      void 
 14931 ;; Registers used:
 14932 ;;		wreg, status,2, status,0, pclath, cstack
 14933 ;; Tracked objects:
 14934 ;;		On entry : 1F/0
 14935 ;;		On exit  : 1F/5
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;Total ram usage:        0 bytes
 14943 ;; Hardware stack levels used:    1
 14944 ;; Hardware stack levels required when called:    1
 14945 ;; This function calls:
 14946 ;;		_PWM1_Initialize
 14947 ;;		_PWM2_Initialize
 14948 ;;		_PWM3_Initialize
 14949 ;; This function is called by:
 14950 ;;		_GeneralDataSet
 14951 ;; This function uses a non-reentrant model
 14952 ;;
 14953                           
 14954                           
 14955                           ;psect for function _RGB_EncoderMode
 14956  0F03                     _RGB_EncoderMode:	
 14957                           
 14958                           ;incstack = 0
 14959                           ; Regs used in _RGB_EncoderMode: [wreg+status,2+status,0+pclath+cstack]
 14960                           ;GPports.c: 183: do { ANSELCbits.ANSC3 = 0; } while(0);
 14961  0F03  0023               	movlb	3	; select bank3
 14962  0F04  118E               	bcf	14,3	;volatile
 14963                           
 14964                           ;GPports.c: 184: do { ODCONCbits.ODCC3 = 0; } while(0);
 14965  0F05  0025               	movlb	5	; select bank5
 14966  0F06  118E               	bcf	14,3	;volatile
 14967                           
 14968                           ;GPports.c: 185: do { WPUCbits.WPUC3 = 0; } while(0);
 14969  0F07  0024               	movlb	4	; select bank4
 14970  0F08  118E               	bcf	14,3	;volatile
 14971                           
 14972                           ;GPports.c: 186: do { TRISCbits.TRISC3 = 0; } while(0);
 14973  0F09  0021               	movlb	1	; select bank1
 14974  0F0A  118E               	bcf	14,3	;volatile
 14975                           
 14976                           ;GPports.c: 188: do { ANSELCbits.ANSC4 = 0; } while(0);
 14977  0F0B  0023               	movlb	3	; select bank3
 14978  0F0C  120E               	bcf	14,4	;volatile
 14979                           
 14980                           ;GPports.c: 189: do { ODCONCbits.ODCC4 = 0; } while(0);
 14981  0F0D  0025               	movlb	5	; select bank5
 14982  0F0E  120E               	bcf	14,4	;volatile
 14983                           
 14984                           ;GPports.c: 190: do { WPUCbits.WPUC4 = 0; } while(0);
 14985  0F0F  0024               	movlb	4	; select bank4
 14986  0F10  120E               	bcf	14,4	;volatile
 14987                           
 14988                           ;GPports.c: 191: do { TRISCbits.TRISC4 = 0; } while(0);
 14989  0F11  0021               	movlb	1	; select bank1
 14990  0F12  120E               	bcf	14,4	;volatile
 14991                           
 14992                           ;GPports.c: 193: do { ANSELCbits.ANSC5 = 0; } while(0);
 14993  0F13  0023               	movlb	3	; select bank3
 14994  0F14  128E               	bcf	14,5	;volatile
 14995                           
 14996                           ;GPports.c: 194: do { ODCONCbits.ODCC5 = 0; } while(0);
 14997  0F15  0025               	movlb	5	; select bank5
 14998  0F16  128E               	bcf	14,5	;volatile
 14999                           
 15000                           ;GPports.c: 195: do { TRISCbits.TRISC5 = 0; } while(0);
 15001  0F17  0021               	movlb	1	; select bank1
 15002  0F18  128E               	bcf	14,5	;volatile
 15003                           
 15004                           ;GPports.c: 197: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15005  0F19  3055               	movlw	85
 15006  0F1A  003C               	movlb	28	; select bank28
 15007  0F1B  008F               	movwf	15	;volsfr
 15008  0F1C  30AA               	movlw	170
 15009  0F1D  008F               	movwf	15	;volsfr
 15010  0F1E  100F               	bcf	15,0	;volsfr
 15011                           
 15012                           ;GPports.c: 198: RC5PPSbits.RC5PPS = 0x0C;
 15013  0F1F  003D               	movlb	29	; select bank29
 15014  0F20  0825               	movf	37,w	;volatile
 15015  0F21  39E0               	andlw	-32
 15016  0F22  380C               	iorlw	12
 15017  0F23  00A5               	movwf	37	;volatile
 15018                           
 15019                           ;GPports.c: 199: RC4PPSbits.RC4PPS = 0x0D;
 15020  0F24  0824               	movf	36,w	;volatile
 15021  0F25  39E0               	andlw	-32
 15022  0F26  380D               	iorlw	13
 15023  0F27  00A4               	movwf	36	;volatile
 15024                           
 15025                           ;GPports.c: 200: RC3PPSbits.RC3PPS = 0x0E;
 15026  0F28  0823               	movf	35,w	;volatile
 15027  0F29  39E0               	andlw	-32
 15028  0F2A  380E               	iorlw	14
 15029  0F2B  00A3               	movwf	35	;volatile
 15030                           
 15031                           ;GPports.c: 201: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15032  0F2C  3055               	movlw	85
 15033  0F2D  003C               	movlb	28	; select bank28
 15034  0F2E  008F               	movwf	15	;volsfr
 15035  0F2F  30AA               	movlw	170
 15036  0F30  008F               	movwf	15	;volsfr
 15037  0F31  140F               	bsf	15,0	;volsfr
 15038  0F32  0023               	movlb	3	; select bank3
 15039  0F33  110E               	bcf	14,2	;volatile
 15040  0F34  0021               	movlb	1	; select bank1
 15041  0F35  150E               	bsf	14,2	;volatile
 15042                           
 15043                           ;GPports.c: 206: PWM1_Initialize();
 15044  0F36  2684  318C         	fcall	_PWM1_Initialize
 15045                           
 15046                           ;GPports.c: 207: PWM2_Initialize();
 15047  0F38  27EA  318C         	fcall	_PWM2_Initialize
 15048                           
 15049                           ;GPports.c: 208: PWM3_Initialize();
 15050  0F3A  2FF4               	ljmp	i1l4243
 15051  0F3B                     __end_of_RGB_EncoderMode:	
 15052  0F3B                     __ptext59:	
 15053 ;; *************** function _STD_EncoderMode *****************
 15054 ;; Defined at:
 15055 ;;		line 214 in file "GPports.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;		None
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;		None
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		status,2
 15064 ;; Tracked objects:
 15065 ;;		On entry : 1F/0
 15066 ;;		On exit  : 1F/1
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;Total ram usage:        0 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; This function calls:
 15076 ;;		Nothing
 15077 ;; This function is called by:
 15078 ;;		_GeneralDataSet
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           
 15083                           ;psect for function _STD_EncoderMode
 15084  0F3B                     _STD_EncoderMode:	
 15085                           
 15086                           ;incstack = 0
 15087                           ; Regs used in _STD_EncoderMode: [status,2]
 15088                           ;GPports.c: 216: do { ANSELCbits.ANSC4 = 0; } while(0);
 15089  0F3B  0023               	movlb	3	; select bank3
 15090  0F3C  120E               	bcf	14,4	;volatile
 15091                           
 15092                           ;GPports.c: 217: do { WPUCbits.WPUC4 = 1; } while(0);
 15093  0F3D  0024               	movlb	4	; select bank4
 15094  0F3E  160E               	bsf	14,4	;volatile
 15095                           
 15096                           ;GPports.c: 218: do { TRISCbits.TRISC4 = 1; } while(0);
 15097  0F3F  0021               	movlb	1	; select bank1
 15098  0F40  160E               	bsf	14,4	;volatile
 15099                           
 15100                           ;GPports.c: 220: do { ANSELCbits.ANSC3 = 0; } while(0);
 15101  0F41  0023               	movlb	3	; select bank3
 15102  0F42  118E               	bcf	14,3	;volatile
 15103                           
 15104                           ;GPports.c: 221: do { ODCONCbits.ODCC3 = 0; } while(0);
 15105  0F43  0025               	movlb	5	; select bank5
 15106  0F44  118E               	bcf	14,3	;volatile
 15107                           
 15108                           ;GPports.c: 222: do { TRISCbits.TRISC3 = 0; } while(0);
 15109  0F45  0021               	movlb	1	; select bank1
 15110  0F46  118E               	bcf	14,3	;volatile
 15111                           
 15112                           ;GPports.c: 223: do { LATCbits.LATC3 = 0; } while(0);
 15113  0F47  0022               	movlb	2	; select bank2
 15114  0F48  118E               	bcf	14,3	;volatile
 15115                           
 15116                           ;GPports.c: 225: CCP2CON = 0x00;
 15117  0F49  0025               	movlb	5	; select bank5
 15118  0F4A  0197               	clrf	23	;volatile
 15119                           
 15120                           ;GPports.c: 226: CCP3CON = 0x00;
 15121  0F4B  0026               	movlb	6	; select bank6
 15122  0F4C  0193               	clrf	19	;volatile
 15123  0F4D  0023               	movlb	3	; select bank3
 15124  0F4E  110E               	bcf	14,2	;volatile
 15125  0F4F  0021               	movlb	1	; select bank1
 15126  0F50  150E               	bsf	14,2	;volatile
 15127  0F51  0008               	return
 15128  0F52                     __end_of_STD_EncoderMode:	
 15129  0F52                     __ptext57:	
 15130 ;; *************** function _GeneralDataSplit *****************
 15131 ;; Defined at:
 15132 ;;		line 92 in file "DataVariable.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;		None
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, status,2, status,0
 15141 ;; Tracked objects:
 15142 ;;		On entry : 1F/0
 15143 ;;		On exit  : 1F/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;Total ram usage:        1 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_RegisterWrite
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           
 15160                           ;psect for function _GeneralDataSplit
 15161  0F52                     _GeneralDataSplit:	
 15162                           
 15163                           ;DataVariable.c: 94: C_DTYPE = GCONF & 0x01U;
 15164                           
 15165                           ;incstack = 0
 15166                           ; Regs used in _GeneralDataSplit: [wreg+status,2+status,0]
 15167  0F52  087D               	movf	_GCONF,w	;volatile
 15168  0F53  00BC               	movwf	_C_DTYPE	;volatile
 15169  0F54  3001               	movlw	1
 15170  0F55  05BC               	andwf	_C_DTYPE,f	;volatile
 15171                           
 15172                           ;DataVariable.c: 95: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 15173  0F56  367D               	lsrf	_GCONF,w	;volatile
 15174  0F57  00BD               	movwf	_C_WRAPE	;volatile
 15175  0F58  3001               	movlw	1
 15176  0F59  05BD               	andwf	_C_WRAPE,f	;volatile
 15177                           
 15178                           ;DataVariable.c: 96: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 15179  0F5A  087D               	movf	_GCONF,w	;volatile
 15180  0F5B  00F0               	movwf	??_GeneralDataSplit
 15181  0F5C  36F0               	lsrf	??_GeneralDataSplit,f
 15182  0F5D  36F0               	lsrf	??_GeneralDataSplit,f
 15183  0F5E  0870               	movf	??_GeneralDataSplit,w
 15184  0F5F  0021               	movlb	1	; select bank1
 15185  0F60  00B4               	movwf	_C_DIRE^(0+128)	;volatile
 15186  0F61  3001               	movlw	1
 15187  0F62  05B4               	andwf	_C_DIRE^(0+128),f	;volatile
 15188                           
 15189                           ;DataVariable.c: 97: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 15190  0F63  087D               	movf	_GCONF,w	;volatile
 15191  0F64  00F0               	movwf	??_GeneralDataSplit
 15192  0F65  36F0               	lsrf	??_GeneralDataSplit,f
 15193  0F66  36F0               	lsrf	??_GeneralDataSplit,f
 15194  0F67  36F0               	lsrf	??_GeneralDataSplit,f
 15195  0F68  0870               	movf	??_GeneralDataSplit,w
 15196  0F69  0020               	movlb	0	; select bank0
 15197  0F6A  00BE               	movwf	_C_IPUD	;volatile
 15198  0F6B  3001               	movlw	1
 15199  0F6C  05BE               	andwf	_C_IPUD,f	;volatile
 15200                           
 15201                           ;DataVariable.c: 98: C_RMOD = (bool) (GCONF >> 4) & 0x01U;
 15202  0F6D  0E7D               	swapf	_GCONF,w	;volatile
 15203  0F6E  390F               	andlw	15
 15204  0F6F  00BF               	movwf	_C_RMOD	;volatile
 15205  0F70  3001               	movlw	1
 15206  0F71  05BF               	andwf	_C_RMOD,f	;volatile
 15207                           
 15208                           ;DataVariable.c: 99: C_ETYPE = (bool) (GCONF >> 5) & 0x01U;
 15209  0F72  087D               	movf	_GCONF,w	;volatile
 15210  0F73  00F0               	movwf	??_GeneralDataSplit
 15211  0F74  3005               	movlw	5
 15212  0F75                     u204_25:	
 15213  0F75  36F0               	lsrf	??_GeneralDataSplit,f
 15214  0F76  0B89               	decfsz	9,f
 15215  0F77  2F75               	goto	u204_25
 15216  0F78  0870               	movf	??_GeneralDataSplit,w
 15217  0F79  00C0               	movwf	_C_ETYPE	;volatile
 15218  0F7A  3001               	movlw	1
 15219  0F7B  05C0               	andwf	_C_ETYPE,f	;volatile
 15220                           
 15221                           ;DataVariable.c: 100: C_MBANK = (bool) (GCONF >> 6) & 0x01U;
 15222  0F7C  087D               	movf	_GCONF,w	;volatile
 15223  0F7D  00F0               	movwf	??_GeneralDataSplit
 15224  0F7E  3006               	movlw	6
 15225  0F7F                     u205_25:	
 15226  0F7F  36F0               	lsrf	??_GeneralDataSplit,f
 15227  0F80  0B89               	decfsz	9,f
 15228  0F81  2F7F               	goto	u205_25
 15229  0F82  0870               	movf	??_GeneralDataSplit,w
 15230  0F83  00C1               	movwf	_C_MBANK	;volatile
 15231  0F84  3001               	movlw	1
 15232  0F85  05C1               	andwf	_C_MBANK,f	;volatile
 15233                           
 15234                           ;DataVariable.c: 101: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 15235  0F86  087D               	movf	_GCONF,w	;volatile
 15236  0F87  00F0               	movwf	??_GeneralDataSplit
 15237  0F88  3007               	movlw	7
 15238  0F89                     u206_25:	
 15239  0F89  36F0               	lsrf	??_GeneralDataSplit,f
 15240  0F8A  0B89               	decfsz	9,f
 15241  0F8B  2F89               	goto	u206_25
 15242  0F8C  0870               	movf	??_GeneralDataSplit,w
 15243  0F8D  00C2               	movwf	_C_RESET	;volatile
 15244  0F8E  3001               	movlw	1
 15245  0F8F  05C2               	andwf	_C_RESET,f	;volatile
 15246  0F90  0008               	return
 15247  0F91                     __end_of_GeneralDataSplit:	
 15248  0F91                     __ptext56:	
 15249 ;; *************** function _UpdateOut_GP1 *****************
 15250 ;; Defined at:
 15251 ;;		line 385 in file "GPports.c"
 15252 ;; Parameters:    Size  Location     Type
 15253 ;;		None
 15254 ;; Auto vars:     Size  Location     Type
 15255 ;;		None
 15256 ;; Return value:  Size  Location     Type
 15257 ;;                  1    wreg      void 
 15258 ;; Registers used:
 15259 ;;		wreg, status,2, status,0
 15260 ;; Tracked objects:
 15261 ;;		On entry : 1F/0
 15262 ;;		On exit  : 1D/0
 15263 ;;		Unchanged: 0/0
 15264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;Total ram usage:        1 bytes
 15270 ;; Hardware stack levels used:    1
 15271 ;; This function calls:
 15272 ;;		Nothing
 15273 ;; This function is called by:
 15274 ;;		_RegisterWrite
 15275 ;; This function uses a non-reentrant model
 15276 ;;
 15277                           
 15278                           
 15279                           ;psect for function _UpdateOut_GP1
 15280  0F91                     _UpdateOut_GP1:	
 15281                           
 15282                           ;GPports.c: 386: if ((GP1CONF & 0x03) == 0x01) {
 15283                           
 15284                           ;incstack = 0
 15285                           ; Regs used in _UpdateOut_GP1: [wreg+status,2+status,0]
 15286  0F91  3003               	movlw	3
 15287  0F92  057C               	andwf	_GP1CONF,w	;volatile
 15288  0F93  00F0               	movwf	??_UpdateOut_GP1
 15289  0F94  0B70               	decfsz	??_UpdateOut_GP1,w
 15290  0F95  0008               	return
 15291                           
 15292                           ;GPports.c: 387: if (GP1REG == 0) {
 15293  0F96  0849               	movf	_GP1REG,w	;volatile
 15294  0F97  1D03               	btfss	3,2
 15295  0F98  2F9C               	goto	i1l1237
 15296                           
 15297                           ;GPports.c: 388: LATCbits.LATC7 = 0;
 15298  0F99  0022               	movlb	2	; select bank2
 15299  0F9A  138E               	bcf	14,7	;volatile
 15300                           
 15301                           ;GPports.c: 389: } else {
 15302  0F9B  0008               	return
 15303  0F9C                     i1l1237:	
 15304                           
 15305                           ;GPports.c: 390: LATCbits.LATC7 = 1;
 15306  0F9C  0022               	movlb	2	; select bank2
 15307  0F9D  178E               	bsf	14,7	;volatile
 15308                           
 15309                           ;GPports.c: 391: GP1REG = 1;
 15310  0F9E  3001               	movlw	1
 15311  0F9F  0020               	movlb	0	; select bank0
 15312  0FA0  00C9               	movwf	_GP1REG	;volatile
 15313  0FA1  0008               	return
 15314  0FA2                     __end_of_UpdateOut_GP1:	
 15315  0FA2                     __ptext55:	
 15316 ;; *************** function _UpdateOut_GP2 *****************
 15317 ;; Defined at:
 15318 ;;		line 400 in file "GPports.c"
 15319 ;; Parameters:    Size  Location     Type
 15320 ;;		None
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;		None
 15323 ;; Return value:  Size  Location     Type
 15324 ;;                  1    wreg      void 
 15325 ;; Registers used:
 15326 ;;		wreg, status,2, status,0
 15327 ;; Tracked objects:
 15328 ;;		On entry : 1F/0
 15329 ;;		On exit  : 1D/0
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;Total ram usage:        1 bytes
 15337 ;; Hardware stack levels used:    1
 15338 ;; This function calls:
 15339 ;;		Nothing
 15340 ;; This function is called by:
 15341 ;;		_RegisterWrite
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           
 15346                           ;psect for function _UpdateOut_GP2
 15347  0FA2                     _UpdateOut_GP2:	
 15348                           
 15349                           ;GPports.c: 401: if ((GP2CONF & 0x03) == 0x01) {
 15350                           
 15351                           ;incstack = 0
 15352                           ; Regs used in _UpdateOut_GP2: [wreg+status,2+status,0]
 15353  0FA2  3003               	movlw	3
 15354  0FA3  0550               	andwf	_GP2CONF,w	;volatile
 15355  0FA4  00F0               	movwf	??_UpdateOut_GP2
 15356  0FA5  0B70               	decfsz	??_UpdateOut_GP2,w
 15357  0FA6  0008               	return
 15358                           
 15359                           ;GPports.c: 402: if (GP2REG == 0) {
 15360  0FA7  0848               	movf	_GP2REG,w	;volatile
 15361  0FA8  1D03               	btfss	3,2
 15362  0FA9  2FAD               	goto	i1l1243
 15363                           
 15364                           ;GPports.c: 403: LATCbits.LATC6 = 0;
 15365  0FAA  0022               	movlb	2	; select bank2
 15366  0FAB  130E               	bcf	14,6	;volatile
 15367                           
 15368                           ;GPports.c: 404: } else {
 15369  0FAC  0008               	return
 15370  0FAD                     i1l1243:	
 15371                           
 15372                           ;GPports.c: 406: LATCbits.LATC6 = 1;
 15373  0FAD  0022               	movlb	2	; select bank2
 15374  0FAE  170E               	bsf	14,6	;volatile
 15375                           
 15376                           ;GPports.c: 407: GP2REG = 1;
 15377  0FAF  3001               	movlw	1
 15378  0FB0  0020               	movlb	0	; select bank0
 15379  0FB1  00C8               	movwf	_GP2REG	;volatile
 15380  0FB2  0008               	return
 15381  0FB3                     __end_of_UpdateOut_GP2:	
 15382  0FB3                     __ptext54:	
 15383 ;; *************** function _UpdateOut_GP3 *****************
 15384 ;; Defined at:
 15385 ;;		line 416 in file "GPports.c"
 15386 ;; Parameters:    Size  Location     Type
 15387 ;;		None
 15388 ;; Auto vars:     Size  Location     Type
 15389 ;;		None
 15390 ;; Return value:  Size  Location     Type
 15391 ;;                  1    wreg      void 
 15392 ;; Registers used:
 15393 ;;		wreg, status,2, status,0
 15394 ;; Tracked objects:
 15395 ;;		On entry : 1F/0
 15396 ;;		On exit  : 1D/0
 15397 ;;		Unchanged: 0/0
 15398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15403 ;;Total ram usage:        1 bytes
 15404 ;; Hardware stack levels used:    1
 15405 ;; This function calls:
 15406 ;;		Nothing
 15407 ;; This function is called by:
 15408 ;;		_RegisterWrite
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           
 15413                           ;psect for function _UpdateOut_GP3
 15414  0FB3                     _UpdateOut_GP3:	
 15415                           
 15416                           ;GPports.c: 417: if (C_ETYPE == 1)
 15417                           
 15418                           ;incstack = 0
 15419                           ; Regs used in _UpdateOut_GP3: [wreg+status,2+status,0]
 15420  0FB3  0B40               	decfsz	_C_ETYPE,w	;volatile
 15421  0FB4  2FB6               	goto	i1l4613
 15422  0FB5  0008               	return
 15423  0FB6                     i1l4613:	
 15424                           
 15425                           ;GPports.c: 420: if ((GP3CONF & 0x03) == 0x01) {
 15426  0FB6  3003               	movlw	3
 15427  0FB7  054F               	andwf	_GP3CONF,w	;volatile
 15428  0FB8  00F0               	movwf	??_UpdateOut_GP3
 15429  0FB9  0B70               	decfsz	??_UpdateOut_GP3,w
 15430  0FBA  0008               	return
 15431                           
 15432                           ;GPports.c: 421: if (GP3REG == 0) {
 15433  0FBB  0847               	movf	_GP3REG,w	;volatile
 15434  0FBC  1D03               	btfss	3,2
 15435  0FBD  2FC1               	goto	i1l1251
 15436                           
 15437                           ;GPports.c: 422: LATCbits.LATC5 = 0;
 15438  0FBE  0022               	movlb	2	; select bank2
 15439  0FBF  128E               	bcf	14,5	;volatile
 15440                           
 15441                           ;GPports.c: 423: } else {
 15442  0FC0  0008               	return
 15443  0FC1                     i1l1251:	
 15444                           
 15445                           ;GPports.c: 424: LATCbits.LATC5 = 1;
 15446  0FC1  0022               	movlb	2	; select bank2
 15447  0FC2  168E               	bsf	14,5	;volatile
 15448                           
 15449                           ;GPports.c: 425: GP3REG = 1;
 15450  0FC3  3001               	movlw	1
 15451  0FC4  0020               	movlb	0	; select bank0
 15452  0FC5  00C7               	movwf	_GP3REG	;volatile
 15453  0FC6  0008               	return
 15454  0FC7                     __end_of_UpdateOut_GP3:	
 15455  0FC7                     __ptext52:	
 15456 ;; *************** function _eeprom_write *****************
 15457 ;; Defined at:
 15458 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\pic\__eewrite.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  addr            1    wreg     unsigned char 
 15461 ;;  value           1    0[COMMON] unsigned char 
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;  addr            1    1[COMMON] unsigned char 
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  1    wreg      void 
 15466 ;; Registers used:
 15467 ;;		wreg, status,2
 15468 ;; Tracked objects:
 15469 ;;		On entry : 1F/0
 15470 ;;		On exit  : 1F/11
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15477 ;;Total ram usage:        2 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; This function calls:
 15480 ;;		Nothing
 15481 ;; This function is called by:
 15482 ;;		_RegisterWrite
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           
 15487                           ;psect for function _eeprom_write
 15488  0FC7                     _eeprom_write:	
 15489                           
 15490                           ;incstack = 0
 15491                           ; Regs used in _eeprom_write: [wreg+status,2]
 15492                           ;eeprom_write@addr stored from wreg
 15493  0FC7  00F1               	movwf	eeprom_write@addr
 15494  0FC8                     i1l1603:	
 15495                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFF; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFF; STATUSbits.C
      +                          ARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bits.
      +                          WRE
 15496                           
 15497  0FC8  0031               	movlb	17	; select bank17
 15498  0FC9  1895               	btfsc	21,1	;volsfr
 15499  0FCA  2FC8               	goto	i1l1603
 15500  0FCB  1715               	bsf	21,6	;volsfr
 15501  0FCC  0871               	movf	eeprom_write@addr,w
 15502  0FCD  0091               	movwf	17	;volatile
 15503  0FCE  3070               	movlw	112
 15504  0FCF  0092               	movwf	18	;volatile
 15505  0FD0  0194               	clrf	20	;volatile
 15506  0FD1  0870               	movf	eeprom_write@value,w
 15507  0FD2  0093               	movwf	19	;volatile
 15508  0FD3  1003               	bcf	3,0	;volatile
 15509  0FD4  1B8B               	btfsc	11,7	;volatile
 15510  0FD5  1403               	bsf	3,0	;volatile
 15511  0FD6  138B               	bcf	11,7	;volatile
 15512  0FD7  1515               	bsf	21,2	;volsfr
 15513  0FD8  3055               	movlw	85
 15514  0FD9  0096               	movwf	22	;volsfr
 15515  0FDA  30AA               	movlw	170
 15516  0FDB  0096               	movwf	22	;volsfr
 15517  0FDC  1495               	bsf	21,1	;volsfr
 15518  0FDD                     i1l1607:	
 15519  0FDD  1895               	btfsc	21,1	;volsfr
 15520  0FDE  2FDD               	goto	i1l1607
 15521  0FDF  1115               	bcf	21,2	;volsfr
 15522  0FE0  1803               	btfsc	3,0	;volatile
 15523  0FE1  178B               	bsf	11,7	;volatile
 15524  0FE2  0008               	return
 15525  0FE3                     __end_of_eeprom_write:	
 15526  0FE3                     __ptext50:	
 15527 ;; *************** function _StatusClear *****************
 15528 ;; Defined at:
 15529 ;;		line 126 in file "DataVariable.c"
 15530 ;; Parameters:    Size  Location     Type
 15531 ;;		None
 15532 ;; Auto vars:     Size  Location     Type
 15533 ;;		None
 15534 ;; Return value:  Size  Location     Type
 15535 ;;                  1    wreg      void 
 15536 ;; Registers used:
 15537 ;;		status,2
 15538 ;; Tracked objects:
 15539 ;;		On entry : 1F/0
 15540 ;;		On exit  : 1F/0
 15541 ;;		Unchanged: 0/0
 15542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;Total ram usage:        0 bytes
 15548 ;; Hardware stack levels used:    1
 15549 ;; This function calls:
 15550 ;;		Nothing
 15551 ;; This function is called by:
 15552 ;;		_I2C1_StatusCallback
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           
 15557                           ;psect for function _StatusClear
 15558  0FE3                     _StatusClear:	
 15559                           
 15560                           ;DataVariable.c: 127: ESTATUS = 0;
 15561                           
 15562                           ;incstack = 0
 15563                           ; Regs used in _StatusClear: [status,2]
 15564  0FE3  01D2               	clrf	_ESTATUS	;volatile
 15565  0FE4  0008               	return
 15566  0FE5                     __end_of_StatusClear:	
 15567  0FE5                     __ptext49:	
 15568 ;; *************** function i1_ClearInterrupt *****************
 15569 ;; Defined at:
 15570 ;;		line 66 in file "main.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;		None
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;		None
 15575 ;; Return value:  Size  Location     Type
 15576 ;;                  1    wreg      void 
 15577 ;; Registers used:
 15578 ;;		None
 15579 ;; Tracked objects:
 15580 ;;		On entry : 1F/0
 15581 ;;		On exit  : 1F/2
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15588 ;;Total ram usage:        0 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		_I2C1_StatusCallback
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           
 15598                           ;psect for function i1_ClearInterrupt
 15599  0FE5                     i1_ClearInterrupt:	
 15600                           
 15601                           ;incstack = 0
 15602                           ; Regs used in i1_ClearInterrupt: []
 15603                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
 15604  0FE5  0022               	movlb	2	; select bank2
 15605  0FE6  168D               	bsf	13,5	;volatile
 15606  0FE7  0008               	return
 15607  0FE8                     __end_ofi1_ClearInterrupt:	
 15608  0FE8                     __ptext74:	
 15609 ;; *************** function _Int2StatusClear *****************
 15610 ;; Defined at:
 15611 ;;		line 133 in file "DataVariable.c"
 15612 ;; Parameters:    Size  Location     Type
 15613 ;;		None
 15614 ;; Auto vars:     Size  Location     Type
 15615 ;;		None
 15616 ;; Return value:  Size  Location     Type
 15617 ;;                  1    wreg      void 
 15618 ;; Registers used:
 15619 ;;		status,2
 15620 ;; Tracked objects:
 15621 ;;		On entry : 1F/0
 15622 ;;		On exit  : 1F/0
 15623 ;;		Unchanged: 0/0
 15624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15629 ;;Total ram usage:        0 bytes
 15630 ;; Hardware stack levels used:    1
 15631 ;; This function calls:
 15632 ;;		Nothing
 15633 ;; This function is called by:
 15634 ;;		_I2C1_StatusCallback
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638                           
 15639                           ;psect for function _Int2StatusClear
 15640  0FE8                     _Int2StatusClear:	
 15641                           
 15642                           ;DataVariable.c: 134: I2STATUS = 0;
 15643                           
 15644                           ;incstack = 0
 15645                           ; Regs used in _Int2StatusClear: [status,2]
 15646  0FE8  01CE               	clrf	_I2STATUS	;volatile
 15647  0FE9  0008               	return
 15648  0FEA                     __end_of_Int2StatusClear:	
 15649  0FEA                     __ptext62:	
 15650 ;; *************** function _PWM2_Initialize *****************
 15651 ;; Defined at:
 15652 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 15653 ;; Parameters:    Size  Location     Type
 15654 ;;		None
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;		None
 15657 ;; Return value:  Size  Location     Type
 15658 ;;                  1    wreg      void 
 15659 ;; Registers used:
 15660 ;;		wreg, status,2, status,0
 15661 ;; Tracked objects:
 15662 ;;		On entry : 1F/5
 15663 ;;		On exit  : 1F/5
 15664 ;;		Unchanged: 0/0
 15665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15670 ;;Total ram usage:        0 bytes
 15671 ;; Hardware stack levels used:    1
 15672 ;; This function calls:
 15673 ;;		Nothing
 15674 ;; This function is called by:
 15675 ;;		_RGB_EncoderMode
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679                           
 15680                           ;psect for function _PWM2_Initialize
 15681  0FEA                     _PWM2_Initialize:	
 15682                           
 15683                           ;pwm2.c: 69: CCP2CON = 0x8F;
 15684                           
 15685                           ;incstack = 0
 15686                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 15687  0FEA  308F               	movlw	143
 15688  0FEB  0097               	movwf	23	;volatile
 15689                           
 15690                           ;pwm2.c: 72: CCPR2H = 0x00;
 15691  0FEC  0196               	clrf	22	;volatile
 15692                           
 15693                           ;pwm2.c: 75: CCPR2L = 0xFF;
 15694  0FED  30FF               	movlw	255
 15695  0FEE  0095               	movwf	21	;volatile
 15696                           
 15697                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 15698  0FEF  081F               	movf	31,w	;volatile
 15699  0FF0  39F3               	andlw	-13
 15700  0FF1  3804               	iorlw	4
 15701  0FF2  009F               	movwf	31	;volatile
 15702  0FF3  0008               	return
 15703  0FF4                     __end_of_PWM2_Initialize:	
 15704  0FF4                     __ptext61:	
 15705 ;; *************** function _PWM3_Initialize *****************
 15706 ;; Defined at:
 15707 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 15708 ;; Parameters:    Size  Location     Type
 15709 ;;		None
 15710 ;; Auto vars:     Size  Location     Type
 15711 ;;		None
 15712 ;; Return value:  Size  Location     Type
 15713 ;;                  1    wreg      void 
 15714 ;; Registers used:
 15715 ;;		wreg, status,2, status,0
 15716 ;; Tracked objects:
 15717 ;;		On entry : 1F/5
 15718 ;;		On exit  : 1F/5
 15719 ;;		Unchanged: 0/0
 15720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15725 ;;Total ram usage:        0 bytes
 15726 ;; Hardware stack levels used:    1
 15727 ;; This function calls:
 15728 ;;		Nothing
 15729 ;; This function is called by:
 15730 ;;		_RGB_EncoderMode
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           
 15735                           ;psect for function _PWM3_Initialize
 15736  0FF4                     _PWM3_Initialize:	
 15737  0FF4                     i1l4243:	
 15738                           ;incstack = 0
 15739                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 15740                           
 15741                           
 15742                           ;pwm3.c: 69: CCP3CON = 0x8F;
 15743  0FF4  308F               	movlw	143
 15744  0FF5  0026               	movlb	6	; select bank6
 15745  0FF6  0093               	movwf	19	;volatile
 15746                           
 15747                           ;pwm3.c: 72: CCPR3H = 0x00;
 15748  0FF7  0192               	clrf	18	;volatile
 15749                           
 15750                           ;pwm3.c: 75: CCPR3L = 0xFF;
 15751  0FF8  30FF               	movlw	255
 15752  0FF9  0091               	movwf	17	;volatile
 15753                           
 15754                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 15755  0FFA  0025               	movlb	5	; select bank5
 15756  0FFB  081F               	movf	31,w	;volatile
 15757  0FFC  39CF               	andlw	-49
 15758  0FFD  3810               	iorlw	16
 15759  0FFE  009F               	movwf	31	;volatile
 15760  0FFF  0008               	return
 15761  1000                     __end_of_PWM3_Initialize:	
 15762                           
 15763                           	psect	swtext5
 15764  0868                     __pswtext5:	
 15765  0868                     i1S7403:	
 15766  0868  318C  2C09         	ljmp	i1l783
 15767  086A  318C  2C26         	ljmp	i1l5373
 15768  086C  318C  2C1A         	ljmp	i1l5369
 15769  086E  318C  2C2F         	ljmp	i1l5377
 15770                           
 15771                           	psect	swtext6
 15772  079E                     __pswtext6:	
 15773  079E                     i1S7405:	
 15774  079E  318C  2C4A         	ljmp	i1l4887
 15775  07A0  318C  2C51         	ljmp	i1l4893
 15776  07A2  318C  2C56         	ljmp	i1l4897
 15777  07A4  318C  2C5B         	ljmp	i1l4901
 15778  07A6  318C  2C63         	ljmp	i1l4907
 15779  07A8  318C  2CE0         	ljmp	i1l4977
 15780  07AA  318C  2CE0         	ljmp	i1l4977
 15781  07AC  318C  2CE0         	ljmp	i1l4977
 15782  07AE  318C  2C66         	ljmp	i1l4909
 15783  07B0  318C  2C69         	ljmp	i1l4911
 15784  07B2  318C  2C6C         	ljmp	i1l4913
 15785  07B4  318C  2C6F         	ljmp	i1l4915
 15786  07B6  318C  2C72         	ljmp	i1l4917
 15787  07B8  318C  2C75         	ljmp	i1l4919
 15788  07BA  318C  2C78         	ljmp	i1l4921
 15789  07BC  318C  2C7B         	ljmp	i1l4923
 15790  07BE  318C  2C7E         	ljmp	i1l4925
 15791  07C0  318C  2C81         	ljmp	i1l4927
 15792  07C2  318C  2C84         	ljmp	i1l4929
 15793  07C4  318C  2C87         	ljmp	i1l4931
 15794  07C6  318C  2C8A         	ljmp	i1l4933
 15795  07C8  318C  2C8D         	ljmp	i1l4935
 15796  07CA  318C  2C90         	ljmp	i1l4937
 15797  07CC  318C  2C93         	ljmp	i1l4939
 15798  07CE  318C  2C96         	ljmp	i1l4941
 15799  07D0  318C  2C99         	ljmp	i1l4943
 15800  07D2  318C  2C9C         	ljmp	i1l4945
 15801  07D4  318C  2C9F         	ljmp	i1l4947
 15802  07D6  318C  2CA4         	ljmp	i1l4951
 15803  07D8  318C  2CA9         	ljmp	i1l4955
 15804  07DA  318C  2CB1         	ljmp	i1l4961
 15805  07DC  318C  2CC0         	ljmp	i1l4965
 15806  07DE  318C  2CD0         	ljmp	i1l4969
 15807  07E0  318C  2CD3         	ljmp	i1l4971
 15808                           
 15809                           	psect	swtext7
 15810  0870                     __pswtext7:	
 15811  0870                     i1S7409:	
 15812  0870  318E  2E2A         	ljmp	i1l1201
 15813  0872  318E  2E47         	ljmp	i1l1209
 15814  0874  318E  2E4E         	ljmp	i1l1216
 15815  0876  318E  2E52         	ljmp	i1l1221
 15816                           
 15817                           	psect	swtext8
 15818  0878                     __pswtext8:	
 15819  0878                     i1S7415:	
 15820  0878  318D  2DA4         	ljmp	i1l1164
 15821  087A  318D  2DC1         	ljmp	i1l1172
 15822  087C  318D  2DC8         	ljmp	i1l1179
 15823  087E  318D  2DCC         	ljmp	i1l1184
 15824                           
 15825                           	psect	swtext9
 15826  0880                     __pswtext9:	
 15827  0880                     i1S7421:	
 15828  0880  318D  2D18         	ljmp	i1l1127
 15829  0882  318D  2D35         	ljmp	i1l1135
 15830  0884  318D  2D3C         	ljmp	i1l1142
 15831  0886  318D  2D40         	ljmp	i1l1147
 15832                           
 15833                           	psect	text72
 15834  0721                     __ptext72:	
 15835 ;; *************** function _RegisterRead *****************
 15836 ;; Defined at:
 15837 ;;		line 274 in file "i2c_register.c"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;  add             1    wreg     unsigned char 
 15840 ;; Auto vars:     Size  Location     Type
 15841 ;;  add             1    1[COMMON] unsigned char 
 15842 ;;  return_value    1    2[COMMON] unsigned char 
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      unsigned char 
 15845 ;; Registers used:
 15846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15847 ;; Tracked objects:
 15848 ;;		On entry : 1F/0
 15849 ;;		On exit  : E/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;Total ram usage:        2 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; Hardware stack levels required when called:    1
 15859 ;; This function calls:
 15860 ;;		_eeprom_read
 15861 ;; This function is called by:
 15862 ;;		_I2C1_StatusCallback
 15863 ;; This function uses a non-reentrant model
 15864 ;;
 15865                           
 15866                           
 15867                           ;psect for function _RegisterRead
 15868  0721                     _RegisterRead:	
 15869                           
 15870                           ;incstack = 0
 15871                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15872                           ;RegisterRead@add stored from wreg
 15873  0721  00F1               	movwf	RegisterRead@add
 15874                           
 15875                           ;i2c_register.c: 277: switch (add) {
 15876  0722  2F76               	goto	i1l5071
 15877  0723                     i1l4991:	
 15878                           
 15879                           ;i2c_register.c: 279: return_value = GCONF;
 15880  0723  087D               	movf	_GCONF,w	;volatile
 15881  0724  2F74               	goto	L43
 15882  0725                     i1l4993:	
 15883                           ;i2c_register.c: 280: break;
 15884                           
 15885                           
 15886                           ;i2c_register.c: 283: return_value = GP1CONF;
 15887  0725  087C               	movf	_GP1CONF,w	;volatile
 15888  0726  2F74               	goto	L43
 15889  0727                     i1l4995:	
 15890                           ;i2c_register.c: 284: break;
 15891                           
 15892                           
 15893                           ;i2c_register.c: 287: return_value = GP2CONF;
 15894  0727  0850               	movf	_GP2CONF,w	;volatile
 15895  0728  2F74               	goto	L43
 15896  0729                     i1l4997:	
 15897                           ;i2c_register.c: 288: break;
 15898                           
 15899                           
 15900                           ;i2c_register.c: 291: if (C_ETYPE == 0) {
 15901  0729  0840               	movf	_C_ETYPE,w	;volatile
 15902  072A  1D03               	btfss	3,2
 15903  072B  2F2E               	goto	i1l5001
 15904                           
 15905                           ;i2c_register.c: 292: return_value = GP3CONF;
 15906  072C  084F               	movf	_GP3CONF,w	;volatile
 15907  072D  2F74               	goto	L43
 15908  072E                     i1l5001:	
 15909                           ;i2c_register.c: 293: } else {
 15910                           
 15911                           
 15912                           ;i2c_register.c: 294: return_value = 0;
 15913  072E  01F2               	clrf	RegisterRead@return_value
 15914  072F  2F80               	goto	i1l5073
 15915  0730                     i1l5003:	
 15916                           
 15917                           ;i2c_register.c: 299: return_value = INTCONF;
 15918  0730  0851               	movf	_INTCONF,w	;volatile
 15919  0731  2F74               	goto	L43
 15920  0732                     i1l5005:	
 15921                           ;i2c_register.c: 300: break;
 15922                           
 15923                           
 15924                           ;i2c_register.c: 303: return_value = ESTATUS;
 15925  0732  0852               	movf	_ESTATUS,w	;volatile
 15926  0733  00F2               	movwf	RegisterRead@return_value
 15927                           
 15928                           ;i2c_register.c: 304: intclear = 1;
 15929  0734  3001               	movlw	1
 15930  0735  00BA               	movwf	_intclear	;volatile
 15931                           
 15932                           ;i2c_register.c: 305: break;
 15933  0736  2F80               	goto	i1l5073
 15934  0737                     i1l5007:	
 15935                           
 15936                           ;i2c_register.c: 308: return_value = I2STATUS;
 15937  0737  084E               	movf	_I2STATUS,w	;volatile
 15938  0738  00F2               	movwf	RegisterRead@return_value
 15939                           
 15940                           ;i2c_register.c: 309: int2clear = 1;
 15941  0739  3001               	movlw	1
 15942  073A  00B9               	movwf	_int2clear	;volatile
 15943                           
 15944                           ;i2c_register.c: 310: break;
 15945  073B  2F80               	goto	i1l5073
 15946  073C                     i1l5009:	
 15947                           
 15948                           ;i2c_register.c: 313: return_value = FSTATUS;
 15949  073C  084D               	movf	_FSTATUS,w	;volatile
 15950  073D  2F74               	goto	L43
 15951  073E                     i1l5011:	
 15952                           ;i2c_register.c: 314: break;
 15953                           
 15954                           
 15955                           ;i2c_register.c: 318: return_value = CVAL.bval[3];
 15956  073E  082F               	movf	_CVAL+3,w	;volatile
 15957  073F  2F74               	goto	L43
 15958  0740                     i1l5013:	
 15959                           ;i2c_register.c: 319: break;
 15960                           
 15961                           
 15962                           ;i2c_register.c: 321: return_value = CVAL.bval[2];
 15963  0740  082E               	movf	_CVAL+2,w	;volatile
 15964  0741  2F74               	goto	L43
 15965  0742                     i1l5015:	
 15966                           ;i2c_register.c: 322: break;
 15967                           
 15968                           
 15969                           ;i2c_register.c: 324: return_value = CVAL.bval[1];
 15970  0742  082D               	movf	_CVAL+1,w	;volatile
 15971  0743  2F74               	goto	L43
 15972  0744                     i1l5017:	
 15973                           ;i2c_register.c: 325: break;
 15974                           
 15975                           
 15976                           ;i2c_register.c: 327: return_value = CVAL.bval[0];
 15977  0744  082C               	movf	_CVAL,w	;volatile
 15978  0745  2F74               	goto	L43
 15979  0746                     i1l5019:	
 15980                           ;i2c_register.c: 328: break;
 15981                           
 15982                           
 15983                           ;i2c_register.c: 332: return_value = CMAX.bval[3];
 15984  0746  082B               	movf	_CMAX+3,w	;volatile
 15985  0747  2F74               	goto	L43
 15986  0748                     i1l5021:	
 15987                           ;i2c_register.c: 333: break;
 15988                           
 15989                           
 15990                           ;i2c_register.c: 335: return_value = CMAX.bval[2];
 15991  0748  082A               	movf	_CMAX+2,w	;volatile
 15992  0749  2F74               	goto	L43
 15993  074A                     i1l5023:	
 15994                           ;i2c_register.c: 336: break;
 15995                           
 15996                           
 15997                           ;i2c_register.c: 338: return_value = CMAX.bval[1];
 15998  074A  0829               	movf	_CMAX+1,w	;volatile
 15999  074B  2F74               	goto	L43
 16000  074C                     i1l5025:	
 16001                           ;i2c_register.c: 339: break;
 16002                           
 16003                           
 16004                           ;i2c_register.c: 341: return_value = CMAX.bval[0];
 16005  074C  0828               	movf	_CMAX,w	;volatile
 16006  074D  2F74               	goto	L43
 16007  074E                     i1l5027:	
 16008                           ;i2c_register.c: 342: break;
 16009                           
 16010                           
 16011                           ;i2c_register.c: 346: return_value = CMIN.bval[3];
 16012  074E  0827               	movf	_CMIN+3,w	;volatile
 16013  074F  2F74               	goto	L43
 16014  0750                     i1l5029:	
 16015                           ;i2c_register.c: 347: break;
 16016                           
 16017                           
 16018                           ;i2c_register.c: 349: return_value = CMIN.bval[2];
 16019  0750  0826               	movf	_CMIN+2,w	;volatile
 16020  0751  2F74               	goto	L43
 16021  0752                     i1l5031:	
 16022                           ;i2c_register.c: 350: break;
 16023                           
 16024                           
 16025                           ;i2c_register.c: 352: return_value = CMIN.bval[1];
 16026  0752  0825               	movf	_CMIN+1,w	;volatile
 16027  0753  2F74               	goto	L43
 16028  0754                     i1l5033:	
 16029                           ;i2c_register.c: 353: break;
 16030                           
 16031                           
 16032                           ;i2c_register.c: 355: return_value = CMIN.bval[0];
 16033  0754  0824               	movf	_CMIN,w	;volatile
 16034  0755  2F74               	goto	L43
 16035  0756                     i1l5035:	
 16036                           ;i2c_register.c: 356: break;
 16037                           
 16038                           
 16039                           ;i2c_register.c: 360: return_value = ISTEP.bval[3];
 16040  0756  0823               	movf	_ISTEP+3,w	;volatile
 16041  0757  2F74               	goto	L43
 16042  0758                     i1l5037:	
 16043                           ;i2c_register.c: 361: break;
 16044                           
 16045                           
 16046                           ;i2c_register.c: 363: return_value = ISTEP.bval[2];
 16047  0758  0822               	movf	_ISTEP+2,w	;volatile
 16048  0759  2F74               	goto	L43
 16049  075A                     i1l5039:	
 16050                           ;i2c_register.c: 364: break;
 16051                           
 16052                           
 16053                           ;i2c_register.c: 366: return_value = ISTEP.bval[1];
 16054  075A  0821               	movf	_ISTEP+1,w	;volatile
 16055  075B  2F74               	goto	L43
 16056  075C                     i1l5041:	
 16057                           ;i2c_register.c: 367: break;
 16058                           
 16059                           
 16060                           ;i2c_register.c: 369: return_value = ISTEP.bval[0];
 16061  075C  0820               	movf	_ISTEP,w	;volatile
 16062  075D  2F74               	goto	L43
 16063  075E                     i1l5043:	
 16064                           ;i2c_register.c: 370: break;
 16065                           
 16066                           
 16067                           ;i2c_register.c: 374: return_value = RLED;
 16068  075E  084C               	movf	_RLED,w	;volatile
 16069  075F  2F74               	goto	L43
 16070  0760                     i1l5045:	
 16071                           ;i2c_register.c: 375: break;
 16072                           
 16073                           
 16074                           ;i2c_register.c: 378: return_value = GLED;
 16075  0760  084B               	movf	_GLED,w	;volatile
 16076  0761  2F74               	goto	L43
 16077  0762                     i1l5047:	
 16078                           ;i2c_register.c: 379: break;
 16079                           
 16080                           
 16081                           ;i2c_register.c: 382: return_value = BLED;
 16082  0762  084A               	movf	_BLED,w	;volatile
 16083  0763  2F74               	goto	L43
 16084  0764                     i1l5049:	
 16085                           ;i2c_register.c: 383: break;
 16086                           
 16087                           
 16088                           ;i2c_register.c: 386: return_value = GP1REG;
 16089  0764  0849               	movf	_GP1REG,w	;volatile
 16090  0765  2F74               	goto	L43
 16091  0766                     i1l5051:	
 16092                           ;i2c_register.c: 387: break;
 16093                           
 16094                           
 16095                           ;i2c_register.c: 390: return_value = GP2REG;
 16096  0766  0848               	movf	_GP2REG,w	;volatile
 16097  0767  2F74               	goto	L43
 16098  0768                     i1l5053:	
 16099                           ;i2c_register.c: 391: break;
 16100                           
 16101                           
 16102                           ;i2c_register.c: 394: if (C_ETYPE == 0) {
 16103  0768  0840               	movf	_C_ETYPE,w	;volatile
 16104  0769  1D03               	btfss	3,2
 16105  076A  2F2E               	goto	i1l5001
 16106                           
 16107                           ;i2c_register.c: 395: return_value = GP3REG;
 16108  076B  0847               	movf	_GP3REG,w	;volatile
 16109  076C  2F74               	goto	L43
 16110  076D                     i1l5059:	
 16111                           ;i2c_register.c: 396: } else {
 16112                           
 16113                           
 16114                           ;i2c_register.c: 402: return_value = ANTBOUNC;
 16115  076D  0846               	movf	_ANTBOUNC,w	;volatile
 16116  076E  2F74               	goto	L43
 16117  076F                     i1l5061:	
 16118                           ;i2c_register.c: 403: break;
 16119                           
 16120                           
 16121                           ;i2c_register.c: 406: return_value = DPPERIOD;
 16122  076F  0845               	movf	_DPPERIOD,w	;volatile
 16123  0770  2F74               	goto	L43
 16124  0771                     i1l5063:	
 16125                           ;i2c_register.c: 407: break;
 16126                           
 16127                           
 16128                           ;i2c_register.c: 410: return_value = FADERGB;
 16129  0771  0844               	movf	_FADERGB,w	;volatile
 16130  0772  2F74               	goto	L43
 16131  0773                     i1l5065:	
 16132                           ;i2c_register.c: 411: break;
 16133                           
 16134                           
 16135                           ;i2c_register.c: 414: return_value = FADEGP;
 16136  0773  0843               	movf	_FADEGP,w	;volatile
 16137  0774                     L43:	
 16138  0774  00F2               	movwf	RegisterRead@return_value
 16139                           
 16140                           ;i2c_register.c: 415: break;
 16141  0775  2F80               	goto	i1l5073
 16142  0776                     i1l5071:	
 16143  0776  0871               	movf	RegisterRead@add,w
 16144                           
 16145                           ; Switch size 1, requested type "speed"
 16146                           ; Number of cases is 34, Range of values is 0 to 33
 16147                           ; switch strategies available:
 16148                           ; Name         Instructions Cycles
 16149                           ; direct_byte           74     6 (fixed)
 16150                           ; simple_byte          103    52 (average)
 16151                           ; jumptable            260     6 (fixed)
 16152                           ;	Chosen strategy is direct_byte
 16153  0777  0084               	movwf	4
 16154  0778  3022               	movlw	34
 16155  0779  0204               	subwf	4,w
 16156  077A  1803               	skipnc
 16157  077B  2F2E               	goto	i1l5001
 16158  077C  3188               	movlp	high i1S7425
 16159  077D  3504               	lslf	4,w
 16160  077E  3E00               	addlw	low i1S7425
 16161  077F  0082               	movwf	2
 16162  0780                     i1l5073:	
 16163                           
 16164                           ;i2c_register.c: 422: if (add >= REG_EEPROMS) {
 16165  0780  3080               	movlw	128
 16166  0781  0271               	subwf	RegisterRead@add,w
 16167  0782  1C03               	skipc
 16168  0783  2F8D               	goto	i1l5081
 16169                           
 16170                           ;i2c_register.c: 423: if (C_MBANK == 0) {
 16171  0784  0841               	movf	_C_MBANK,w	;volatile
 16172  0785  1D03               	btfss	3,2
 16173  0786  2F8A               	goto	i1l5079
 16174                           
 16175                           ;i2c_register.c: 424: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 16176  0787  0871               	movf	RegisterRead@add,w
 16177  0788  3E80               	addlw	128
 16178  0789  2F8B               	goto	L44
 16179  078A                     i1l5079:	
 16180                           ;i2c_register.c: 425: } else {
 16181                           
 16182                           
 16183                           ;i2c_register.c: 426: return_value = eeprom_read(add);
 16184  078A  0871               	movf	RegisterRead@add,w
 16185  078B                     L44:	
 16186  078B  278F               	fcall	_eeprom_read
 16187  078C  00F2               	movwf	RegisterRead@return_value
 16188  078D                     i1l5081:	
 16189                           
 16190                           ;i2c_register.c: 427: };i2c_register.c: 428: };i2c_register.c: 429: return return_value;
 16191  078D  0872               	movf	RegisterRead@return_value,w
 16192  078E  0008               	return
 16193  078F                     __end_of_RegisterRead:	
 16194  078F                     __ptext73:	
 16195 ;; *************** function _eeprom_read *****************
 16196 ;; Defined at:
 16197 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\pic\__eeread.c"
 16198 ;; Parameters:    Size  Location     Type
 16199 ;;  addr            1    wreg     unsigned char 
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;  addr            1    0[COMMON] unsigned char 
 16202 ;; Return value:  Size  Location     Type
 16203 ;;                  1    wreg      unsigned char 
 16204 ;; Registers used:
 16205 ;;		wreg
 16206 ;; Tracked objects:
 16207 ;;		On entry : 1F/0
 16208 ;;		On exit  : 1F/11
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16215 ;;Total ram usage:        1 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; This function calls:
 16218 ;;		Nothing
 16219 ;; This function is called by:
 16220 ;;		_RegisterRead
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           
 16225                           ;psect for function _eeprom_read
 16226  078F                     _eeprom_read:	
 16227                           
 16228                           ;incstack = 0
 16229                           ; Regs used in _eeprom_read: [wreg]
 16230                           ;eeprom_read@addr stored from wreg
 16231  078F  00F0               	movwf	eeprom_read@addr
 16232  0790  2F92               	goto	i1l1581
 16233  0791                     u224_21:	
 16234  0791  0020               	movlb	0	; select bank0
 16235  0792                     i1l1581:	
 16236                           ;__eeread.c: 8: do
 16237                           
 16238  0792  0064               	clrwdt	;# 
 16239                           
 16240                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 16241  0793  0031               	movlb	17	; select bank17
 16242  0794  1895               	btfsc	21,1	;volsfr
 16243  0795  2F91               	goto	u224_21
 16244                           
 16245                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFF, NVMADRH = 0x
      +                          70, NVMCON1bits.RD = 1, NVMDATL);
 16246  0796  1715               	bsf	21,6	;volsfr
 16247  0797  0870               	movf	eeprom_read@addr,w
 16248  0798  0091               	movwf	17	;volatile
 16249  0799  3070               	movlw	112
 16250  079A  0092               	movwf	18	;volatile
 16251  079B  1415               	bsf	21,0	;volsfr
 16252  079C  0813               	movf	19,w	;volatile
 16253  079D  0008               	return
 16254  079E                     __end_of_eeprom_read:	
 16255                           
 16256                           	psect	swtext10
 16257  0800                     __pswtext10:	
 16258  0800                     i1S7425:	
 16259  0800  3187  2F23         	ljmp	i1l4991
 16260  0802  3187  2F25         	ljmp	i1l4993
 16261  0804  3187  2F27         	ljmp	i1l4995
 16262  0806  3187  2F29         	ljmp	i1l4997
 16263  0808  3187  2F30         	ljmp	i1l5003
 16264  080A  3187  2F32         	ljmp	i1l5005
 16265  080C  3187  2F37         	ljmp	i1l5007
 16266  080E  3187  2F3C         	ljmp	i1l5009
 16267  0810  3187  2F3E         	ljmp	i1l5011
 16268  0812  3187  2F40         	ljmp	i1l5013
 16269  0814  3187  2F42         	ljmp	i1l5015
 16270  0816  3187  2F44         	ljmp	i1l5017
 16271  0818  3187  2F46         	ljmp	i1l5019
 16272  081A  3187  2F48         	ljmp	i1l5021
 16273  081C  3187  2F4A         	ljmp	i1l5023
 16274  081E  3187  2F4C         	ljmp	i1l5025
 16275  0820  3187  2F4E         	ljmp	i1l5027
 16276  0822  3187  2F50         	ljmp	i1l5029
 16277  0824  3187  2F52         	ljmp	i1l5031
 16278  0826  3187  2F54         	ljmp	i1l5033
 16279  0828  3187  2F56         	ljmp	i1l5035
 16280  082A  3187  2F58         	ljmp	i1l5037
 16281  082C  3187  2F5A         	ljmp	i1l5039
 16282  082E  3187  2F5C         	ljmp	i1l5041
 16283  0830  3187  2F5E         	ljmp	i1l5043
 16284  0832  3187  2F60         	ljmp	i1l5045
 16285  0834  3187  2F62         	ljmp	i1l5047
 16286  0836  3187  2F64         	ljmp	i1l5049
 16287  0838  3187  2F66         	ljmp	i1l5051
 16288  083A  3187  2F68         	ljmp	i1l5053
 16289  083C  3187  2F6D         	ljmp	i1l5059
 16290  083E  3187  2F6F         	ljmp	i1l5061
 16291  0840  3187  2F71         	ljmp	i1l5063
 16292  0842  3187  2F73         	ljmp	i1l5065
 16293                           
 16294                           	psect	text75
 16295  0430                     __ptext75:	
 16296 ;; *************** function _CLC2_ISR *****************
 16297 ;; Defined at:
 16298 ;;		line 89 in file "mcc_generated_files/clc2.c"
 16299 ;; Parameters:    Size  Location     Type
 16300 ;;		None
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;		None
 16303 ;; Return value:  Size  Location     Type
 16304 ;;                  1    wreg      void 
 16305 ;; Registers used:
 16306 ;;		wreg, status,2, status,0, pclath, cstack
 16307 ;; Tracked objects:
 16308 ;;		On entry : 1F/0
 16309 ;;		On exit  : 1F/0
 16310 ;;		Unchanged: 0/0
 16311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16316 ;;Total ram usage:        0 bytes
 16317 ;; Hardware stack levels used:    1
 16318 ;; Hardware stack levels required when called:    3
 16319 ;; This function calls:
 16320 ;;		_CLC_2_Interrupt
 16321 ;; This function is called by:
 16322 ;;		_INTERRUPT_InterruptManager
 16323 ;; This function uses a non-reentrant model
 16324 ;;
 16325                           
 16326                           
 16327                           ;psect for function _CLC2_ISR
 16328  0430                     _CLC2_ISR:	
 16329                           
 16330                           ;clc2.c: 91: CLC_2_Interrupt();
 16331                           
 16332                           ;incstack = 0
 16333                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16334  0430  24C0               	fcall	_CLC_2_Interrupt
 16335                           
 16336                           ;clc2.c: 93: PIR3bits.CLC2IF = 0;
 16337  0431  0020               	movlb	0	; select bank0
 16338  0432  1093               	bcf	19,1	;volatile
 16339  0433  0008               	return
 16340  0434                     __end_of_CLC2_ISR:	
 16341  0434                     __ptext78:	
 16342 ;; *************** function _CLC1_ISR *****************
 16343 ;; Defined at:
 16344 ;;		line 89 in file "mcc_generated_files/clc1.c"
 16345 ;; Parameters:    Size  Location     Type
 16346 ;;		None
 16347 ;; Auto vars:     Size  Location     Type
 16348 ;;		None
 16349 ;; Return value:  Size  Location     Type
 16350 ;;                  1    wreg      void 
 16351 ;; Registers used:
 16352 ;;		wreg, status,2, status,0, pclath, cstack
 16353 ;; Tracked objects:
 16354 ;;		On entry : 1F/0
 16355 ;;		On exit  : 1F/0
 16356 ;;		Unchanged: 0/0
 16357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16362 ;;Total ram usage:        0 bytes
 16363 ;; Hardware stack levels used:    1
 16364 ;; Hardware stack levels required when called:    2
 16365 ;; This function calls:
 16366 ;;		_CLC_1_Interrupt
 16367 ;; This function is called by:
 16368 ;;		_INTERRUPT_InterruptManager
 16369 ;; This function uses a non-reentrant model
 16370 ;;
 16371                           
 16372                           
 16373                           ;psect for function _CLC1_ISR
 16374  0434                     _CLC1_ISR:	
 16375                           
 16376                           ;clc1.c: 91: CLC_1_Interrupt();
 16377                           
 16378                           ;incstack = 0
 16379                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16380  0434  2438               	fcall	_CLC_1_Interrupt
 16381                           
 16382                           ;clc1.c: 93: PIR3bits.CLC1IF = 0;
 16383  0435  0020               	movlb	0	; select bank0
 16384  0436  1013               	bcf	19,0	;volatile
 16385  0437  0008               	return
 16386  0438                     __end_of_CLC1_ISR:	
 16387  0438                     __ptext79:	
 16388 ;; *************** function _CLC_1_Interrupt *****************
 16389 ;; Defined at:
 16390 ;;		line 61 in file "Encoder.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;		None
 16393 ;; Auto vars:     Size  Location     Type
 16394 ;;		None
 16395 ;; Return value:  Size  Location     Type
 16396 ;;                  1    wreg      void 
 16397 ;; Registers used:
 16398 ;;		wreg, status,2, status,0, pclath, cstack
 16399 ;; Tracked objects:
 16400 ;;		On entry : 1F/0
 16401 ;;		On exit  : 1C/0
 16402 ;;		Unchanged: 0/0
 16403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16406 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;Total ram usage:        4 bytes
 16409 ;; Hardware stack levels used:    1
 16410 ;; Hardware stack levels required when called:    1
 16411 ;; This function calls:
 16412 ;;		___fladd
 16413 ;;		___flge
 16414 ;;		i1_EncoderStatusUpdate
 16415 ;;		i1_SetInterrupt
 16416 ;; This function is called by:
 16417 ;;		_CLC1_ISR
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421                           
 16422                           ;psect for function _CLC_1_Interrupt
 16423  0438                     _CLC_1_Interrupt:	
 16424                           
 16425                           ;Encoder.c: 63: if (en_prev == 1)
 16426                           
 16427                           ;incstack = 0
 16428                           ; Regs used in _CLC_1_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 16429  0438  0021               	movlb	1	; select bank1
 16430  0439  0B2B               	decfsz	_en_prev^(0+128),w
 16431  043A  2C47               	goto	i1l5409
 16432                           
 16433                           ;Encoder.c: 64: if (en_deb < DEBOUNCE)
 16434  043B  0020               	movlb	0	; select bank0
 16435  043C  0831               	movf	_DEBOUNCE+1,w	;volatile
 16436  043D  0021               	movlb	1	; select bank1
 16437  043E  0221               	subwf	(_en_deb+1)^(0+128),w
 16438  043F  1D03               	skipz
 16439  0440  2C45               	goto	u308_25
 16440  0441  0020               	movlb	0	; select bank0
 16441  0442  0830               	movf	_DEBOUNCE,w	;volatile
 16442  0443  0021               	movlb	1	; select bank1
 16443  0444  0220               	subwf	_en_deb^(0+128),w
 16444  0445                     u308_25:	
 16445  0445  1C03               	btfss	3,0
 16446  0446  0008               	return
 16447  0447                     i1l5409:	
 16448                           
 16449                           ;Encoder.c: 68: en_deb = 0;
 16450  0447  01A0               	clrf	_en_deb^(0+128)
 16451  0448  01A1               	clrf	(_en_deb+1)^(0+128)
 16452                           
 16453                           ;Encoder.c: 69: en_prev = 0;
 16454  0449  01AB               	clrf	_en_prev^(0+128)
 16455                           
 16456                           ;Encoder.c: 71: if (C_DTYPE == 0) {
 16457  044A  0020               	movlb	0	; select bank0
 16458  044B  083C               	movf	_C_DTYPE,w	;volatile
 16459  044C  1D03               	btfss	3,2
 16460  044D  2C77               	goto	i1l5427
 16461                           
 16462                           ;Encoder.c: 72: CVAL.val = CVAL.val + ISTEP.val;
 16463  044E  082C               	movf	_CVAL,w	;volatile
 16464  044F  0720               	addwf	_ISTEP,w	;volatile
 16465  0450  00DC               	movwf	??_CLC_1_Interrupt
 16466  0451  082D               	movf	_CVAL+1,w	;volatile
 16467  0452  3D21               	addwfc	_ISTEP+1,w	;volatile
 16468  0453  00DD               	movwf	??_CLC_1_Interrupt+1
 16469  0454  082E               	movf	_CVAL+2,w	;volatile
 16470  0455  3D22               	addwfc	_ISTEP+2,w	;volatile
 16471  0456  00DE               	movwf	??_CLC_1_Interrupt+2
 16472  0457  082F               	movf	_CVAL+3,w	;volatile
 16473  0458  3D23               	addwfc	_ISTEP+3,w	;volatile
 16474  0459  00DF               	movwf	??_CLC_1_Interrupt+3
 16475  045A  00AF               	movwf	_CVAL+3	;volatile
 16476  045B  085E               	movf	??_CLC_1_Interrupt+2,w
 16477  045C  00AE               	movwf	_CVAL+2	;volatile
 16478  045D  085D               	movf	??_CLC_1_Interrupt+1,w
 16479  045E  00AD               	movwf	_CVAL+1	;volatile
 16480  045F  085C               	movf	??_CLC_1_Interrupt,w
 16481  0460  00AC               	movwf	_CVAL	;volatile
 16482                           
 16483                           ;Encoder.c: 73: EncoderStatusUpdate(S_RINC);
 16484  0461  3008               	movlw	8
 16485  0462  2549  3184         	fcall	i1_EncoderStatusUpdate
 16486                           
 16487                           ;Encoder.c: 74: if (CVAL.val > CMAX.val) {
 16488  0464  082B               	movf	_CMAX+3,w	;volatile
 16489  0465  3A80               	xorlw	128
 16490  0466  00DC               	movwf	??_CLC_1_Interrupt
 16491  0467  082F               	movf	_CVAL+3,w	;volatile
 16492  0468  3A80               	xorlw	128
 16493  0469  025C               	subwf	??_CLC_1_Interrupt,w
 16494  046A  1D03               	skipz
 16495  046B  2CA7               	goto	L48
 16496  046C  082E               	movf	_CVAL+2,w	;volatile
 16497  046D  022A               	subwf	_CMAX+2,w	;volatile
 16498  046E  1D03               	skipz
 16499  046F  2CA7               	goto	L48
 16500  0470  082D               	movf	_CVAL+1,w	;volatile
 16501  0471  0229               	subwf	_CMAX+1,w	;volatile
 16502  0472  1D03               	skipz
 16503  0473  2CA7               	goto	L48
 16504  0474  082C               	movf	_CVAL,w	;volatile
 16505  0475  0228               	subwf	_CMAX,w	;volatile
 16506  0476  2CA7               	goto	L48
 16507  0477                     i1l5427:	
 16508                           ;Encoder.c: 79: CVAL.val = CMAX.val;
 16509                           
 16510                           ;Encoder.c: 78: } else {
 16511                           
 16512                           ;Encoder.c: 77: CVAL.val = CMIN.val;
 16513                           
 16514                           ;Encoder.c: 76: if (C_WRAPE == 1) {
 16515                           
 16516                           ;Encoder.c: 75: EncoderStatusUpdate(S_RMAX);
 16517                           
 16518                           
 16519                           ;Encoder.c: 83: CVAL.fval = CVAL.fval + ISTEP.fval;
 16520  0477  0823               	movf	_ISTEP+3,w	;volatile
 16521  0478  00F3               	movwf	___fladd@b+3
 16522  0479  0822               	movf	_ISTEP+2,w	;volatile
 16523  047A  00F2               	movwf	___fladd@b+2
 16524  047B  0821               	movf	_ISTEP+1,w	;volatile
 16525  047C  00F1               	movwf	___fladd@b+1
 16526  047D  0820               	movf	_ISTEP,w	;volatile
 16527  047E  00F0               	movwf	___fladd@b
 16528  047F  082F               	movf	_CVAL+3,w	;volatile
 16529  0480  00F7               	movwf	___fladd@a+3
 16530  0481  082E               	movf	_CVAL+2,w	;volatile
 16531  0482  00F6               	movwf	___fladd@a+2
 16532  0483  082D               	movf	_CVAL+1,w	;volatile
 16533  0484  00F5               	movwf	___fladd@a+1
 16534  0485  082C               	movf	_CVAL,w	;volatile
 16535  0486  00F4               	movwf	___fladd@a
 16536  0487  25AE  3184         	fcall	___fladd
 16537  0489  0873               	movf	?___fladd+3,w
 16538  048A  0020               	movlb	0	; select bank0
 16539  048B  00AF               	movwf	_CVAL+3	;volatile
 16540  048C  0872               	movf	?___fladd+2,w
 16541  048D  00AE               	movwf	_CVAL+2	;volatile
 16542  048E  0871               	movf	?___fladd+1,w
 16543  048F  00AD               	movwf	_CVAL+1	;volatile
 16544  0490  0870               	movf	?___fladd,w
 16545  0491  00AC               	movwf	_CVAL	;volatile
 16546                           
 16547                           ;Encoder.c: 84: EncoderStatusUpdate(S_RINC);
 16548  0492  3008               	movlw	8
 16549  0493  2549  3184         	fcall	i1_EncoderStatusUpdate
 16550                           
 16551                           ;Encoder.c: 85: if (CVAL.fval > CMAX.fval) {
 16552  0495  082B               	movf	_CMAX+3,w	;volatile
 16553  0496  00F3               	movwf	___flge@ff1+3
 16554  0497  082A               	movf	_CMAX+2,w	;volatile
 16555  0498  00F2               	movwf	___flge@ff1+2
 16556  0499  0829               	movf	_CMAX+1,w	;volatile
 16557  049A  00F1               	movwf	___flge@ff1+1
 16558  049B  0828               	movf	_CMAX,w	;volatile
 16559  049C  00F0               	movwf	___flge@ff1
 16560  049D  082F               	movf	_CVAL+3,w	;volatile
 16561  049E  00F7               	movwf	___flge@ff2+3
 16562  049F  082E               	movf	_CVAL+2,w	;volatile
 16563  04A0  00F6               	movwf	___flge@ff2+2
 16564  04A1  082D               	movf	_CVAL+1,w	;volatile
 16565  04A2  00F5               	movwf	___flge@ff2+1
 16566  04A3  082C               	movf	_CVAL,w	;volatile
 16567  04A4  00F4               	movwf	___flge@ff2
 16568  04A5  254C  3184         	fcall	___flge
 16569  04A7                     L48:	
 16570  04A7  1803               	btfsc	3,0
 16571  04A8  2CBE               	goto	i1l5437
 16572                           
 16573                           ;Encoder.c: 86: EncoderStatusUpdate(S_RMAX);
 16574  04A9  3020               	movlw	32
 16575  04AA  2549  3184         	fcall	i1_EncoderStatusUpdate
 16576                           
 16577                           ;Encoder.c: 87: if (C_WRAPE == 1) {
 16578  04AC  0B3D               	decfsz	_C_WRAPE,w	;volatile
 16579  04AD  2CB6               	goto	i1l5435
 16580                           
 16581                           ;Encoder.c: 88: CVAL.fval = CMIN.fval;
 16582  04AE  0827               	movf	_CMIN+3,w	;volatile
 16583  04AF  00AF               	movwf	_CVAL+3	;volatile
 16584  04B0  0826               	movf	_CMIN+2,w	;volatile
 16585  04B1  00AE               	movwf	_CVAL+2	;volatile
 16586  04B2  0825               	movf	_CMIN+1,w	;volatile
 16587  04B3  00AD               	movwf	_CVAL+1	;volatile
 16588  04B4  0824               	movf	_CMIN,w	;volatile
 16589  04B5  2CBD               	goto	L47
 16590  04B6                     i1l5435:	
 16591                           ;Encoder.c: 89: } else {
 16592                           
 16593                           
 16594                           ;Encoder.c: 90: CVAL.fval = CMAX.fval;
 16595  04B6  082B               	movf	_CMAX+3,w	;volatile
 16596  04B7  00AF               	movwf	_CVAL+3	;volatile
 16597  04B8  082A               	movf	_CMAX+2,w	;volatile
 16598  04B9  00AE               	movwf	_CVAL+2	;volatile
 16599  04BA  0829               	movf	_CMAX+1,w	;volatile
 16600  04BB  00AD               	movwf	_CVAL+1	;volatile
 16601  04BC  0828               	movf	_CMAX,w	;volatile
 16602  04BD                     L47:	
 16603  04BD  00AC               	movwf	_CVAL	;volatile
 16604  04BE                     i1l5437:	
 16605                           
 16606                           ;Encoder.c: 91: };Encoder.c: 92: };Encoder.c: 93: };Encoder.c: 96: SetInterrupt();
 16607  04BE  26FD               	fcall	i1_SetInterrupt
 16608  04BF  0008               	return
 16609  04C0                     __end_of_CLC_1_Interrupt:	
 16610  04C0                     __ptext76:	
 16611 ;; *************** function _CLC_2_Interrupt *****************
 16612 ;; Defined at:
 16613 ;;		line 103 in file "Encoder.c"
 16614 ;; Parameters:    Size  Location     Type
 16615 ;;		None
 16616 ;; Auto vars:     Size  Location     Type
 16617 ;;		None
 16618 ;; Return value:  Size  Location     Type
 16619 ;;                  1    wreg      void 
 16620 ;; Registers used:
 16621 ;;		wreg, status,2, status,0, pclath, cstack
 16622 ;; Tracked objects:
 16623 ;;		On entry : 1F/0
 16624 ;;		On exit  : 1C/0
 16625 ;;		Unchanged: 0/0
 16626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16630 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16631 ;;Total ram usage:        4 bytes
 16632 ;; Hardware stack levels used:    1
 16633 ;; Hardware stack levels required when called:    2
 16634 ;; This function calls:
 16635 ;;		___flge
 16636 ;;		___flsub
 16637 ;;		i1_EncoderStatusUpdate
 16638 ;;		i1_SetInterrupt
 16639 ;; This function is called by:
 16640 ;;		_CLC2_ISR
 16641 ;; This function uses a non-reentrant model
 16642 ;;
 16643                           
 16644                           
 16645                           ;psect for function _CLC_2_Interrupt
 16646  04C0                     _CLC_2_Interrupt:	
 16647                           
 16648                           ;Encoder.c: 105: if (en_prev == 0)
 16649                           
 16650                           ;incstack = 0
 16651                           ; Regs used in _CLC_2_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 16652  04C0  0021               	movlb	1	; select bank1
 16653  04C1  082B               	movf	_en_prev^(0+128),w
 16654  04C2  1D03               	btfss	3,2
 16655  04C3  2CD0               	goto	i1l5327
 16656                           
 16657                           ;Encoder.c: 106: if (en_deb < DEBOUNCE)
 16658  04C4  0020               	movlb	0	; select bank0
 16659  04C5  0831               	movf	_DEBOUNCE+1,w	;volatile
 16660  04C6  0021               	movlb	1	; select bank1
 16661  04C7  0221               	subwf	(_en_deb+1)^(0+128),w
 16662  04C8  1D03               	skipz
 16663  04C9  2CCE               	goto	u299_25
 16664  04CA  0020               	movlb	0	; select bank0
 16665  04CB  0830               	movf	_DEBOUNCE,w	;volatile
 16666  04CC  0021               	movlb	1	; select bank1
 16667  04CD  0220               	subwf	_en_deb^(0+128),w
 16668  04CE                     u299_25:	
 16669  04CE  1C03               	btfss	3,0
 16670  04CF  0008               	return
 16671  04D0                     i1l5327:	
 16672                           
 16673                           ;Encoder.c: 109: en_deb = 0;
 16674  04D0  01A0               	clrf	_en_deb^(0+128)
 16675  04D1  01A1               	clrf	(_en_deb+1)^(0+128)
 16676                           
 16677                           ;Encoder.c: 110: en_prev = 1;
 16678  04D2  01AB               	clrf	_en_prev^(0+128)
 16679  04D3  0AAB               	incf	_en_prev^(0+128),f
 16680                           
 16681                           ;Encoder.c: 112: if (C_DTYPE == 0) {
 16682  04D4  0020               	movlb	0	; select bank0
 16683  04D5  083C               	movf	_C_DTYPE,w	;volatile
 16684  04D6  1D03               	btfss	3,2
 16685  04D7  2D01               	goto	i1l5347
 16686                           
 16687                           ;Encoder.c: 114: CVAL.val = CVAL.val - ISTEP.val;
 16688  04D8  0820               	movf	_ISTEP,w	;volatile
 16689  04D9  022C               	subwf	_CVAL,w	;volatile
 16690  04DA  00E4               	movwf	??_CLC_2_Interrupt
 16691  04DB  0821               	movf	_ISTEP+1,w	;volatile
 16692  04DC  3B2D               	subwfb	_CVAL+1,w	;volatile
 16693  04DD  00E5               	movwf	??_CLC_2_Interrupt+1
 16694  04DE  0822               	movf	_ISTEP+2,w	;volatile
 16695  04DF  3B2E               	subwfb	_CVAL+2,w	;volatile
 16696  04E0  00E6               	movwf	??_CLC_2_Interrupt+2
 16697  04E1  0823               	movf	_ISTEP+3,w	;volatile
 16698  04E2  3B2F               	subwfb	_CVAL+3,w	;volatile
 16699  04E3  00E7               	movwf	??_CLC_2_Interrupt+3
 16700  04E4  00AF               	movwf	_CVAL+3	;volatile
 16701  04E5  0866               	movf	??_CLC_2_Interrupt+2,w
 16702  04E6  00AE               	movwf	_CVAL+2	;volatile
 16703  04E7  0865               	movf	??_CLC_2_Interrupt+1,w
 16704  04E8  00AD               	movwf	_CVAL+1	;volatile
 16705  04E9  0864               	movf	??_CLC_2_Interrupt,w
 16706  04EA  00AC               	movwf	_CVAL	;volatile
 16707                           
 16708                           ;Encoder.c: 115: EncoderStatusUpdate(S_RDEC);
 16709  04EB  3010               	movlw	16
 16710  04EC  2549  3184         	fcall	i1_EncoderStatusUpdate
 16711                           
 16712                           ;Encoder.c: 116: if (CVAL.val < CMIN.val) {
 16713  04EE  082F               	movf	_CVAL+3,w	;volatile
 16714  04EF  3A80               	xorlw	128
 16715  04F0  00E4               	movwf	??_CLC_2_Interrupt
 16716  04F1  0827               	movf	_CMIN+3,w	;volatile
 16717  04F2  3A80               	xorlw	128
 16718  04F3  0264               	subwf	??_CLC_2_Interrupt,w
 16719  04F4  1D03               	skipz
 16720  04F5  2D30               	goto	L46
 16721  04F6  0826               	movf	_CMIN+2,w	;volatile
 16722  04F7  022E               	subwf	_CVAL+2,w	;volatile
 16723  04F8  1D03               	skipz
 16724  04F9  2D30               	goto	L46
 16725  04FA  0825               	movf	_CMIN+1,w	;volatile
 16726  04FB  022D               	subwf	_CVAL+1,w	;volatile
 16727  04FC  1D03               	skipz
 16728  04FD  2D30               	goto	L46
 16729  04FE  0824               	movf	_CMIN,w	;volatile
 16730  04FF  022C               	subwf	_CVAL,w	;volatile
 16731  0500  2D30               	goto	L46
 16732  0501                     i1l5347:	
 16733                           ;Encoder.c: 121: CVAL.val = CMIN.val;
 16734                           
 16735                           ;Encoder.c: 120: } else {
 16736                           
 16737                           ;Encoder.c: 119: CVAL.val = CMAX.val;
 16738                           
 16739                           ;Encoder.c: 118: if (C_WRAPE == 1) {
 16740                           
 16741                           ;Encoder.c: 117: EncoderStatusUpdate(S_RMIN);
 16742                           
 16743                           
 16744                           ;Encoder.c: 125: CVAL.fval = CVAL.fval - ISTEP.fval;
 16745  0501  0823               	movf	_ISTEP+3,w	;volatile
 16746  0502  00DF               	movwf	___flsub@a+3
 16747  0503  0822               	movf	_ISTEP+2,w	;volatile
 16748  0504  00DE               	movwf	___flsub@a+2
 16749  0505  0821               	movf	_ISTEP+1,w	;volatile
 16750  0506  00DD               	movwf	___flsub@a+1
 16751  0507  0820               	movf	_ISTEP,w	;volatile
 16752  0508  00DC               	movwf	___flsub@a
 16753  0509  082F               	movf	_CVAL+3,w	;volatile
 16754  050A  00E3               	movwf	___flsub@b+3
 16755  050B  082E               	movf	_CVAL+2,w	;volatile
 16756  050C  00E2               	movwf	___flsub@b+2
 16757  050D  082D               	movf	_CVAL+1,w	;volatile
 16758  050E  00E1               	movwf	___flsub@b+1
 16759  050F  082C               	movf	_CVAL,w	;volatile
 16760  0510  00E0               	movwf	___flsub@b
 16761  0511  2704  3184         	fcall	___flsub
 16762  0513  085F               	movf	?___flsub+3,w
 16763  0514  00AF               	movwf	_CVAL+3	;volatile
 16764  0515  085E               	movf	?___flsub+2,w
 16765  0516  00AE               	movwf	_CVAL+2	;volatile
 16766  0517  085D               	movf	?___flsub+1,w
 16767  0518  00AD               	movwf	_CVAL+1	;volatile
 16768  0519  085C               	movf	?___flsub,w
 16769  051A  00AC               	movwf	_CVAL	;volatile
 16770                           
 16771                           ;Encoder.c: 126: EncoderStatusUpdate(S_RDEC);
 16772  051B  3010               	movlw	16
 16773  051C  2549  3184         	fcall	i1_EncoderStatusUpdate
 16774                           
 16775                           ;Encoder.c: 127: if (CVAL.fval < CMIN.fval) {
 16776  051E  082F               	movf	_CVAL+3,w	;volatile
 16777  051F  00F3               	movwf	___flge@ff1+3
 16778  0520  082E               	movf	_CVAL+2,w	;volatile
 16779  0521  00F2               	movwf	___flge@ff1+2
 16780  0522  082D               	movf	_CVAL+1,w	;volatile
 16781  0523  00F1               	movwf	___flge@ff1+1
 16782  0524  082C               	movf	_CVAL,w	;volatile
 16783  0525  00F0               	movwf	___flge@ff1
 16784  0526  0827               	movf	_CMIN+3,w	;volatile
 16785  0527  00F7               	movwf	___flge@ff2+3
 16786  0528  0826               	movf	_CMIN+2,w	;volatile
 16787  0529  00F6               	movwf	___flge@ff2+2
 16788  052A  0825               	movf	_CMIN+1,w	;volatile
 16789  052B  00F5               	movwf	___flge@ff2+1
 16790  052C  0824               	movf	_CMIN,w	;volatile
 16791  052D  00F4               	movwf	___flge@ff2
 16792  052E  254C  3184         	fcall	___flge
 16793  0530                     L46:	
 16794  0530  1803               	btfsc	3,0
 16795  0531  2D47               	goto	i1l5357
 16796                           
 16797                           ;Encoder.c: 128: EncoderStatusUpdate(S_RMIN);
 16798  0532  3040               	movlw	64
 16799  0533  2549  3184         	fcall	i1_EncoderStatusUpdate
 16800                           
 16801                           ;Encoder.c: 129: if (C_WRAPE == 1) {
 16802  0535  0B3D               	decfsz	_C_WRAPE,w	;volatile
 16803  0536  2D3F               	goto	i1l5355
 16804                           
 16805                           ;Encoder.c: 130: CVAL.fval = CMAX.fval;
 16806  0537  082B               	movf	_CMAX+3,w	;volatile
 16807  0538  00AF               	movwf	_CVAL+3	;volatile
 16808  0539  082A               	movf	_CMAX+2,w	;volatile
 16809  053A  00AE               	movwf	_CVAL+2	;volatile
 16810  053B  0829               	movf	_CMAX+1,w	;volatile
 16811  053C  00AD               	movwf	_CVAL+1	;volatile
 16812  053D  0828               	movf	_CMAX,w	;volatile
 16813  053E  2D46               	goto	L45
 16814  053F                     i1l5355:	
 16815                           ;Encoder.c: 131: } else {
 16816                           
 16817                           
 16818                           ;Encoder.c: 133: CVAL.fval = CMIN.fval;
 16819  053F  0827               	movf	_CMIN+3,w	;volatile
 16820  0540  00AF               	movwf	_CVAL+3	;volatile
 16821  0541  0826               	movf	_CMIN+2,w	;volatile
 16822  0542  00AE               	movwf	_CVAL+2	;volatile
 16823  0543  0825               	movf	_CMIN+1,w	;volatile
 16824  0544  00AD               	movwf	_CVAL+1	;volatile
 16825  0545  0824               	movf	_CMIN,w	;volatile
 16826  0546                     L45:	
 16827  0546  00AC               	movwf	_CVAL	;volatile
 16828  0547                     i1l5357:	
 16829                           
 16830                           ;Encoder.c: 134: };Encoder.c: 135: };Encoder.c: 136: };Encoder.c: 138: SetInterrupt();
 16831  0547  26FD               	fcall	i1_SetInterrupt
 16832  0548  0008               	return
 16833  0549                     __end_of_CLC_2_Interrupt:	
 16834  0549                     __ptext81:	
 16835 ;; *************** function i1_EncoderStatusUpdate *****************
 16836 ;; Defined at:
 16837 ;;		line 109 in file "DataVariable.c"
 16838 ;; Parameters:    Size  Location     Type
 16839 ;;  stat            1    wreg     enum E69
 16840 ;; Auto vars:     Size  Location     Type
 16841 ;;  stat            1    0[COMMON] enum E69
 16842 ;; Return value:  Size  Location     Type
 16843 ;;                  1    wreg      void 
 16844 ;; Registers used:
 16845 ;;		wreg, status,2, status,0
 16846 ;; Tracked objects:
 16847 ;;		On entry : 1F/0
 16848 ;;		On exit  : 1F/0
 16849 ;;		Unchanged: 0/0
 16850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16855 ;;Total ram usage:        1 bytes
 16856 ;; Hardware stack levels used:    1
 16857 ;; This function calls:
 16858 ;;		Nothing
 16859 ;; This function is called by:
 16860 ;;		_CLC_1_Interrupt
 16861 ;;		_CLC_2_Interrupt
 16862 ;; This function uses a non-reentrant model
 16863 ;;
 16864                           
 16865                           
 16866                           ;psect for function i1_EncoderStatusUpdate
 16867  0549                     i1_EncoderStatusUpdate:	
 16868                           
 16869                           ;incstack = 0
 16870                           ; Regs used in i1_EncoderStatusUpdate: [wreg+status,2+status,0]
 16871                           ;i1EncoderStatusUpdate@stat stored from wreg
 16872  0549  00F0               	movwf	i1EncoderStatusUpdate@stat
 16873                           
 16874                           ;DataVariable.c: 110: ESTATUS |= (uint8_t) stat;
 16875  054A  04D2               	iorwf	_ESTATUS,f	;volatile
 16876  054B  0008               	return
 16877  054C                     __end_ofi1_EncoderStatusUpdate:	
 16878  054C                     __ptext82:	
 16879 ;; *************** function ___flge *****************
 16880 ;; Defined at:
 16881 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 16882 ;; Parameters:    Size  Location     Type
 16883 ;;  ff1             4    0[COMMON] void 
 16884 ;;  ff2             4    4[COMMON] void 
 16885 ;; Auto vars:     Size  Location     Type
 16886 ;;		None
 16887 ;; Return value:  Size  Location     Type
 16888 ;;		None               void
 16889 ;; Registers used:
 16890 ;;		wreg, status,2, status,0
 16891 ;; Tracked objects:
 16892 ;;		On entry : 1F/0
 16893 ;;		On exit  : 1F/0
 16894 ;;		Unchanged: 1F/0
 16895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16898 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16899 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16900 ;;Total ram usage:       12 bytes
 16901 ;; Hardware stack levels used:    1
 16902 ;; This function calls:
 16903 ;;		Nothing
 16904 ;; This function is called by:
 16905 ;;		_CLC_1_Interrupt
 16906 ;;		_CLC_2_Interrupt
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           
 16911                           ;psect for function ___flge
 16912  054C                     ___flge:	
 16913                           
 16914                           ;incstack = 0
 16915                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16916  054C  3080               	movlw	128
 16917  054D  01F8               	clrf	??___flge
 16918  054E  01F9               	clrf	??___flge+1
 16919  054F  0572               	andwf	___flge@ff1+2,w
 16920  0550  00FA               	movwf	??___flge+2
 16921  0551  307F               	movlw	127
 16922  0552  0573               	andwf	___flge@ff1+3,w
 16923  0553  00FB               	movwf	??___flge+3
 16924  0554  047A               	iorwf	??___flge+2,w
 16925  0555  0479               	iorwf	??___flge+1,w
 16926  0556  0478               	iorwf	??___flge,w
 16927  0557  1D03               	skipz
 16928  0558  2D5D               	goto	i1l5141
 16929  0559  01F0               	clrf	___flge@ff1
 16930  055A  01F1               	clrf	___flge@ff1+1
 16931  055B  01F2               	clrf	___flge@ff1+2
 16932  055C  01F3               	clrf	___flge@ff1+3
 16933  055D                     i1l5141:	
 16934  055D  3080               	movlw	128
 16935  055E  01F8               	clrf	??___flge
 16936  055F  01F9               	clrf	??___flge+1
 16937  0560  0576               	andwf	___flge@ff2+2,w
 16938  0561  00FA               	movwf	??___flge+2
 16939  0562  307F               	movlw	127
 16940  0563  0577               	andwf	___flge@ff2+3,w
 16941  0564  00FB               	movwf	??___flge+3
 16942  0565  047A               	iorwf	??___flge+2,w
 16943  0566  0479               	iorwf	??___flge+1,w
 16944  0567  0478               	iorwf	??___flge,w
 16945  0568  1D03               	skipz
 16946  0569  2D6E               	goto	i1l1796
 16947  056A  01F4               	clrf	___flge@ff2
 16948  056B  01F5               	clrf	___flge@ff2+1
 16949  056C  01F6               	clrf	___flge@ff2+2
 16950  056D  01F7               	clrf	___flge@ff2+3
 16951  056E                     i1l1796:	
 16952  056E  1FF3               	btfss	___flge@ff1+3,7
 16953  056F  2D85               	goto	i1l5147
 16954  0570  3080               	movlw	128
 16955  0571  01F8               	clrf	??___flge
 16956  0572  01F9               	clrf	??___flge+1
 16957  0573  01FA               	clrf	??___flge+2
 16958  0574  00FB               	movwf	??___flge+3
 16959  0575  0870               	movf	___flge@ff1,w
 16960  0576  02F8               	subwf	??___flge,f
 16961  0577  0871               	movf	___flge@ff1+1,w
 16962  0578  3BF9               	subwfb	??___flge+1,f
 16963  0579  0872               	movf	___flge@ff1+2,w
 16964  057A  3BFA               	subwfb	??___flge+2,f
 16965  057B  0873               	movf	___flge@ff1+3,w
 16966  057C  3BFB               	subwfb	??___flge+3,f
 16967  057D  087B               	movf	??___flge+3,w
 16968  057E  00F3               	movwf	___flge@ff1+3
 16969  057F  087A               	movf	??___flge+2,w
 16970  0580  00F2               	movwf	___flge@ff1+2
 16971  0581  0879               	movf	??___flge+1,w
 16972  0582  00F1               	movwf	___flge@ff1+1
 16973  0583  0878               	movf	??___flge,w
 16974  0584  00F0               	movwf	___flge@ff1
 16975  0585                     i1l5147:	
 16976  0585  1FF7               	btfss	___flge@ff2+3,7
 16977  0586  2D9C               	goto	i1l1798
 16978  0587  3080               	movlw	128
 16979  0588  01F8               	clrf	??___flge
 16980  0589  01F9               	clrf	??___flge+1
 16981  058A  01FA               	clrf	??___flge+2
 16982  058B  00FB               	movwf	??___flge+3
 16983  058C  0874               	movf	___flge@ff2,w
 16984  058D  02F8               	subwf	??___flge,f
 16985  058E  0875               	movf	___flge@ff2+1,w
 16986  058F  3BF9               	subwfb	??___flge+1,f
 16987  0590  0876               	movf	___flge@ff2+2,w
 16988  0591  3BFA               	subwfb	??___flge+2,f
 16989  0592  0877               	movf	___flge@ff2+3,w
 16990  0593  3BFB               	subwfb	??___flge+3,f
 16991  0594  087B               	movf	??___flge+3,w
 16992  0595  00F7               	movwf	___flge@ff2+3
 16993  0596  087A               	movf	??___flge+2,w
 16994  0597  00F6               	movwf	___flge@ff2+2
 16995  0598  0879               	movf	??___flge+1,w
 16996  0599  00F5               	movwf	___flge@ff2+1
 16997  059A  0878               	movf	??___flge,w
 16998  059B  00F4               	movwf	___flge@ff2
 16999  059C                     i1l1798:	
 17000  059C  3080               	movlw	128
 17001  059D  06F3               	xorwf	___flge@ff1+3,f
 17002  059E  06F7               	xorwf	___flge@ff2+3,f
 17003  059F  0877               	movf	___flge@ff2+3,w
 17004  05A0  0273               	subwf	___flge@ff1+3,w
 17005  05A1  1D03               	skipz
 17006  05A2  0008               	return
 17007  05A3  0876               	movf	___flge@ff2+2,w
 17008  05A4  0272               	subwf	___flge@ff1+2,w
 17009  05A5  1D03               	skipz
 17010  05A6  0008               	return
 17011  05A7  0875               	movf	___flge@ff2+1,w
 17012  05A8  0271               	subwf	___flge@ff1+1,w
 17013  05A9  1D03               	skipz
 17014  05AA  0008               	return
 17015  05AB  0874               	movf	___flge@ff2,w
 17016  05AC  0270               	subwf	___flge@ff1,w
 17017  05AD  0008               	return
 17018  05AE                     __end_of___flge:	
 17019  05AE                     __ptext83:	
 17020 ;; *************** function ___fladd *****************
 17021 ;; Defined at:
 17022 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 17023 ;; Parameters:    Size  Location     Type
 17024 ;;  b               4    0[COMMON] void 
 17025 ;;  a               4    4[COMMON] void 
 17026 ;; Auto vars:     Size  Location     Type
 17027 ;;  grs             1   11[COMMON] unsigned char 
 17028 ;;  bexp            1   10[COMMON] unsigned char 
 17029 ;;  aexp            1    9[COMMON] unsigned char 
 17030 ;;  signs           1    8[COMMON] unsigned char 
 17031 ;; Return value:  Size  Location     Type
 17032 ;;                  4    0[COMMON] unsigned char 
 17033 ;; Registers used:
 17034 ;;		wreg, status,2, status,0
 17035 ;; Tracked objects:
 17036 ;;		On entry : 1F/0
 17037 ;;		On exit  : 0/0
 17038 ;;		Unchanged: 0/0
 17039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17040 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;Total ram usage:       20 bytes
 17045 ;; Hardware stack levels used:    1
 17046 ;; This function calls:
 17047 ;;		Nothing
 17048 ;; This function is called by:
 17049 ;;		_CLC_1_Interrupt
 17050 ;;		___flsub
 17051 ;; This function uses a non-reentrant model
 17052 ;;
 17053                           
 17054                           
 17055                           ;psect for function ___fladd
 17056  05AE                     ___fladd:	
 17057                           
 17058                           ;incstack = 0
 17059                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17060  05AE  0873               	movf	___fladd@b+3,w
 17061  05AF  00F8               	movwf	___fladd@signs
 17062  05B0  3080               	movlw	128
 17063  05B1  05F8               	andwf	___fladd@signs,f
 17064  05B2  3573               	lslf	___fladd@b+3,w
 17065  05B3  00FA               	movwf	___fladd@bexp
 17066  05B4  1BF2               	btfsc	___fladd@b+2,7
 17067  05B5  147A               	bsf	___fladd@bexp,0
 17068  05B6  087A               	movf	___fladd@bexp,w
 17069  05B7  1903               	btfsc	3,2
 17070  05B8  2DC1               	goto	i1l1907
 17071  05B9  0F7A               	incfsz	___fladd@bexp,w
 17072  05BA  2DBF               	goto	i1l1908
 17073  05BB  01F0               	clrf	___fladd@b
 17074  05BC  01F1               	clrf	___fladd@b+1
 17075  05BD  01F2               	clrf	___fladd@b+2
 17076  05BE  01F3               	clrf	___fladd@b+3
 17077  05BF                     i1l1908:	
 17078  05BF  17F2               	bsf	___fladd@b+2,7
 17079  05C0  2DC4               	goto	L50
 17080  05C1                     i1l1907:	
 17081  05C1  01F0               	clrf	___fladd@b
 17082  05C2  01F1               	clrf	___fladd@b+1
 17083  05C3  01F2               	clrf	___fladd@b+2
 17084  05C4                     L50:	
 17085  05C4  01F3               	clrf	___fladd@b+3
 17086  05C5  0877               	movf	___fladd@a+3,w
 17087  05C6  00F9               	movwf	___fladd@aexp
 17088  05C7  3080               	movlw	128
 17089  05C8  05F9               	andwf	___fladd@aexp,f
 17090  05C9  0879               	movf	___fladd@aexp,w
 17091  05CA  0678               	xorwf	___fladd@signs,w
 17092  05CB  1D03               	btfss	3,2
 17093  05CC  1778               	bsf	___fladd@signs,6
 17094  05CD  3577               	lslf	___fladd@a+3,w
 17095  05CE  00F9               	movwf	___fladd@aexp
 17096  05CF  1BF6               	btfsc	___fladd@a+2,7
 17097  05D0  1479               	bsf	___fladd@aexp,0
 17098  05D1  0879               	movf	___fladd@aexp,w
 17099  05D2  1903               	btfsc	3,2
 17100  05D3  2DDC               	goto	i1l1912
 17101  05D4  0F79               	incfsz	___fladd@aexp,w
 17102  05D5  2DDA               	goto	i1l1913
 17103  05D6  01F4               	clrf	___fladd@a
 17104  05D7  01F5               	clrf	___fladd@a+1
 17105  05D8  01F6               	clrf	___fladd@a+2
 17106  05D9  01F7               	clrf	___fladd@a+3
 17107  05DA                     i1l1913:	
 17108  05DA  17F6               	bsf	___fladd@a+2,7
 17109  05DB  2DDF               	goto	L51
 17110  05DC                     i1l1912:	
 17111  05DC  01F4               	clrf	___fladd@a
 17112  05DD  01F5               	clrf	___fladd@a+1
 17113  05DE  01F6               	clrf	___fladd@a+2
 17114  05DF                     L51:	
 17115  05DF  01F7               	clrf	___fladd@a+3
 17116  05E0  087A               	movf	___fladd@bexp,w
 17117  05E1  0279               	subwf	___fladd@aexp,w
 17118  05E2  1803               	skipnc
 17119  05E3  2E06               	goto	i1l4747
 17120  05E4  1F78               	btfss	___fladd@signs,6
 17121  05E5  2DE8               	goto	i1l4717
 17122  05E6  3080               	movlw	128
 17123  05E7  06F8               	xorwf	___fladd@signs,f
 17124  05E8                     i1l4717:	
 17125  05E8  087A               	movf	___fladd@bexp,w
 17126  05E9  00FB               	movwf	___fladd@grs
 17127  05EA  0879               	movf	___fladd@aexp,w
 17128  05EB  00FA               	movwf	___fladd@bexp
 17129  05EC  087B               	movf	___fladd@grs,w
 17130  05ED  00F9               	movwf	___fladd@aexp
 17131  05EE  0870               	movf	___fladd@b,w
 17132  05EF  00FB               	movwf	___fladd@grs
 17133  05F0  0874               	movf	___fladd@a,w
 17134  05F1  00F0               	movwf	___fladd@b
 17135  05F2  087B               	movf	___fladd@grs,w
 17136  05F3  00F4               	movwf	___fladd@a
 17137  05F4  0871               	movf	___fladd@b+1,w
 17138  05F5  00FB               	movwf	___fladd@grs
 17139  05F6  0875               	movf	___fladd@a+1,w
 17140  05F7  00F1               	movwf	___fladd@b+1
 17141  05F8  087B               	movf	___fladd@grs,w
 17142  05F9  00F5               	movwf	___fladd@a+1
 17143  05FA  0872               	movf	___fladd@b+2,w
 17144  05FB  00FB               	movwf	___fladd@grs
 17145  05FC  0876               	movf	___fladd@a+2,w
 17146  05FD  00F2               	movwf	___fladd@b+2
 17147  05FE  087B               	movf	___fladd@grs,w
 17148  05FF  00F6               	movwf	___fladd@a+2
 17149  0600  0873               	movf	___fladd@b+3,w
 17150  0601  00FB               	movwf	___fladd@grs
 17151  0602  0877               	movf	___fladd@a+3,w
 17152  0603  00F3               	movwf	___fladd@b+3
 17153  0604  087B               	movf	___fladd@grs,w
 17154  0605  00F7               	movwf	___fladd@a+3
 17155  0606                     i1l4747:	
 17156  0606  01FB               	clrf	___fladd@grs
 17157  0607  0879               	movf	___fladd@aexp,w
 17158  0608  00D4               	movwf	??___fladd
 17159  0609  01D5               	clrf	??___fladd+1
 17160  060A  0855               	movf	??___fladd+1,w
 17161  060B  00D7               	movwf	??___fladd+3
 17162  060C  087A               	movf	___fladd@bexp,w
 17163  060D  0254               	subwf	??___fladd,w
 17164  060E  00D6               	movwf	??___fladd+2
 17165  060F  1C03               	skipc
 17166  0610  03D7               	decf	??___fladd+3,f
 17167  0611  0857               	movf	??___fladd+3,w
 17168  0612  3A80               	xorlw	128
 17169  0613  00D8               	movwf	??___fladd+4
 17170  0614  3080               	movlw	128
 17171  0615  0258               	subwf	??___fladd+4,w
 17172  0616  1D03               	skipz
 17173  0617  2E1A               	goto	u237_25
 17174  0618  301A               	movlw	26
 17175  0619  0256               	subwf	??___fladd+2,w
 17176  061A                     u237_25:	
 17177  061A  1C03               	skipc
 17178  061B  2E3B               	goto	i1l4761
 17179  061C  0873               	movf	___fladd@b+3,w
 17180  061D  0472               	iorwf	___fladd@b+2,w
 17181  061E  0471               	iorwf	___fladd@b+1,w
 17182  061F  0470               	iorwf	___fladd@b,w
 17183  0620  1903               	btfsc	3,2
 17184  0621  2E24               	goto	u238_20
 17185  0622  3001               	movlw	1
 17186  0623  2E25               	goto	u239_20
 17187  0624                     u238_20:	
 17188  0624  3000               	movlw	0
 17189  0625                     u239_20:	
 17190  0625  00FB               	movwf	___fladd@grs
 17191  0626  01F0               	clrf	___fladd@b
 17192  0627  01F1               	clrf	___fladd@b+1
 17193  0628  01F2               	clrf	___fladd@b+2
 17194  0629  01F3               	clrf	___fladd@b+3
 17195  062A  0879               	movf	___fladd@aexp,w
 17196  062B  00FA               	movwf	___fladd@bexp
 17197  062C  2E3F               	goto	i1l1918
 17198  062D                     i1l1920:	
 17199  062D  1C7B               	btfss	___fladd@grs,0
 17200  062E  2E33               	goto	i1l1921
 17201  062F  367B               	lsrf	___fladd@grs,w
 17202  0630  3801               	iorlw	1
 17203  0631  00FB               	movwf	___fladd@grs
 17204  0632  2E34               	goto	i1l1922
 17205  0633                     i1l1921:	
 17206  0633  36FB               	lsrf	___fladd@grs,f
 17207  0634                     i1l1922:	
 17208  0634  1870               	btfsc	___fladd@b,0
 17209  0635  17FB               	bsf	___fladd@grs,7
 17210  0636  37F3               	asrf	___fladd@b+3,f
 17211  0637  0CF2               	rrf	___fladd@b+2,f
 17212  0638  0CF1               	rrf	___fladd@b+1,f
 17213  0639  0CF0               	rrf	___fladd@b,f
 17214  063A  0AFA               	incf	___fladd@bexp,f
 17215  063B                     i1l4761:	
 17216  063B  0879               	movf	___fladd@aexp,w
 17217  063C  027A               	subwf	___fladd@bexp,w
 17218  063D  1C03               	skipc
 17219  063E  2E2D               	goto	i1l1920
 17220  063F                     i1l1918:	
 17221  063F  1B78               	btfsc	___fladd@signs,6
 17222  0640  2E62               	goto	i1l4779
 17223  0641  087A               	movf	___fladd@bexp,w
 17224  0642  1D03               	btfss	3,2
 17225  0643  2E49               	goto	i1l4767
 17226  0644  01F0               	clrf	?___fladd
 17227  0645  01F1               	clrf	?___fladd+1
 17228  0646  01F2               	clrf	?___fladd+2
 17229  0647  01F3               	clrf	?___fladd+3
 17230  0648  0008               	return
 17231  0649                     i1l4767:	
 17232  0649  0874               	movf	___fladd@a,w
 17233  064A  07F0               	addwf	___fladd@b,f
 17234  064B  0875               	movf	___fladd@a+1,w
 17235  064C  3DF1               	addwfc	___fladd@b+1,f
 17236  064D  0876               	movf	___fladd@a+2,w
 17237  064E  3DF2               	addwfc	___fladd@b+2,f
 17238  064F  0877               	movf	___fladd@a+3,w
 17239  0650  3DF3               	addwfc	___fladd@b+3,f
 17240  0651  1C73               	btfss	___fladd@b+3,0
 17241  0652  2ECB               	goto	i1l4809
 17242  0653  1C7B               	btfss	___fladd@grs,0
 17243  0654  2E59               	goto	i1l1929
 17244  0655  367B               	lsrf	___fladd@grs,w
 17245  0656  3801               	iorlw	1
 17246  0657  00FB               	movwf	___fladd@grs
 17247  0658  2E5A               	goto	i1l1930
 17248  0659                     i1l1929:	
 17249  0659  36FB               	lsrf	___fladd@grs,f
 17250  065A                     i1l1930:	
 17251  065A  1870               	btfsc	___fladd@b,0
 17252  065B  17FB               	bsf	___fladd@grs,7
 17253  065C  37F3               	asrf	___fladd@b+3,f
 17254  065D  0CF2               	rrf	___fladd@b+2,f
 17255  065E  0CF1               	rrf	___fladd@b+1,f
 17256  065F  0CF0               	rrf	___fladd@b,f
 17257  0660  0AFA               	incf	___fladd@bexp,f
 17258  0661  2ECB               	goto	i1l4809
 17259  0662                     i1l4779:	
 17260  0662  0873               	movf	___fladd@b+3,w
 17261  0663  3A80               	xorlw	128
 17262  0664  0020               	movlb	0	; select bank0
 17263  0665  00D4               	movwf	??___fladd
 17264  0666  0877               	movf	___fladd@a+3,w
 17265  0667  3A80               	xorlw	128
 17266  0668  0254               	subwf	??___fladd,w
 17267  0669  1D03               	skipz
 17268  066A  2E75               	goto	u248_23
 17269  066B  0876               	movf	___fladd@a+2,w
 17270  066C  0272               	subwf	___fladd@b+2,w
 17271  066D  1D03               	skipz
 17272  066E  2E75               	goto	u248_23
 17273  066F  0875               	movf	___fladd@a+1,w
 17274  0670  0271               	subwf	___fladd@b+1,w
 17275  0671  1D03               	skipz
 17276  0672  2E75               	goto	u248_23
 17277  0673  0874               	movf	___fladd@a,w
 17278  0674  0270               	subwf	___fladd@b,w
 17279  0675                     u248_23:	
 17280  0675  1803               	skipnc
 17281  0676  2EA4               	goto	i1l4789
 17282  0677  30FF               	movlw	255
 17283  0678  00D4               	movwf	??___fladd
 17284  0679  00D5               	movwf	??___fladd+1
 17285  067A  00D6               	movwf	??___fladd+2
 17286  067B  00D7               	movwf	??___fladd+3
 17287  067C  0870               	movf	___fladd@b,w
 17288  067D  0274               	subwf	___fladd@a,w
 17289  067E  00D8               	movwf	??___fladd+4
 17290  067F  0871               	movf	___fladd@b+1,w
 17291  0680  3B75               	subwfb	___fladd@a+1,w
 17292  0681  00D9               	movwf	??___fladd+5
 17293  0682  0872               	movf	___fladd@b+2,w
 17294  0683  3B76               	subwfb	___fladd@a+2,w
 17295  0684  00DA               	movwf	??___fladd+6
 17296  0685  0873               	movf	___fladd@b+3,w
 17297  0686  3B77               	subwfb	___fladd@a+3,w
 17298  0687  00DB               	movwf	??___fladd+7
 17299  0688  0858               	movf	??___fladd+4,w
 17300  0689  07D4               	addwf	??___fladd,f
 17301  068A  0859               	movf	??___fladd+5,w
 17302  068B  3DD5               	addwfc	??___fladd+1,f
 17303  068C  085A               	movf	??___fladd+6,w
 17304  068D  3DD6               	addwfc	??___fladd+2,f
 17305  068E  085B               	movf	??___fladd+7,w
 17306  068F  3DD7               	addwfc	??___fladd+3,f
 17307  0690  0857               	movf	??___fladd+3,w
 17308  0691  00F3               	movwf	___fladd@b+3
 17309  0692  0856               	movf	??___fladd+2,w
 17310  0693  00F2               	movwf	___fladd@b+2
 17311  0694  0855               	movf	??___fladd+1,w
 17312  0695  00F1               	movwf	___fladd@b+1
 17313  0696  0854               	movf	??___fladd,w
 17314  0697  00F0               	movwf	___fladd@b
 17315  0698  3080               	movlw	128
 17316  0699  06F8               	xorwf	___fladd@signs,f
 17317  069A  09FB               	comf	___fladd@grs,f
 17318  069B  0FFB               	incfsz	___fladd@grs,f
 17319  069C  2EAC               	goto	i1l1935
 17320  069D  3001               	movlw	1
 17321  069E  07F0               	addwf	___fladd@b,f
 17322  069F  3000               	movlw	0
 17323  06A0  3DF1               	addwfc	___fladd@b+1,f
 17324  06A1  3DF2               	addwfc	___fladd@b+2,f
 17325  06A2  3DF3               	addwfc	___fladd@b+3,f
 17326  06A3  2EAC               	goto	i1l1935
 17327  06A4                     i1l4789:	
 17328  06A4  0874               	movf	___fladd@a,w
 17329  06A5  02F0               	subwf	___fladd@b,f
 17330  06A6  0875               	movf	___fladd@a+1,w
 17331  06A7  3BF1               	subwfb	___fladd@b+1,f
 17332  06A8  0876               	movf	___fladd@a+2,w
 17333  06A9  3BF2               	subwfb	___fladd@b+2,f
 17334  06AA  0877               	movf	___fladd@a+3,w
 17335  06AB  3BF3               	subwfb	___fladd@b+3,f
 17336  06AC                     i1l1935:	
 17337  06AC  0873               	movf	___fladd@b+3,w
 17338  06AD  0472               	iorwf	___fladd@b+2,w
 17339  06AE  0471               	iorwf	___fladd@b+1,w
 17340  06AF  0470               	iorwf	___fladd@b,w
 17341  06B0  1D03               	skipz
 17342  06B1  2EC9               	goto	i1l4807
 17343  06B2  087B               	movf	___fladd@grs,w
 17344  06B3  1D03               	btfss	3,2
 17345  06B4  2EC9               	goto	i1l4807
 17346  06B5  01F0               	clrf	?___fladd
 17347  06B6  01F1               	clrf	?___fladd+1
 17348  06B7  01F2               	clrf	?___fladd+2
 17349  06B8  01F3               	clrf	?___fladd+3
 17350  06B9  0008               	return
 17351  06BA                     i1l4795:	
 17352  06BA  35F0               	lslf	___fladd@b,f
 17353  06BB  0DF1               	rlf	___fladd@b+1,f
 17354  06BC  0DF2               	rlf	___fladd@b+2,f
 17355  06BD  0DF3               	rlf	___fladd@b+3,f
 17356  06BE  1BFB               	btfsc	___fladd@grs,7
 17357  06BF  1470               	bsf	___fladd@b,0
 17358  06C0  1C7B               	btfss	___fladd@grs,0
 17359  06C1  2EC5               	goto	i1l1940
 17360  06C2  1403               	setc
 17361  06C3  0DFB               	rlf	___fladd@grs,f
 17362  06C4  2EC6               	goto	i1l4803
 17363  06C5                     i1l1940:	
 17364  06C5  35FB               	lslf	___fladd@grs,f
 17365  06C6                     i1l4803:	
 17366  06C6  087A               	movf	___fladd@bexp,w
 17367  06C7  1D03               	btfss	3,2
 17368  06C8  03FA               	decf	___fladd@bexp,f
 17369  06C9                     i1l4807:	
 17370  06C9  1FF2               	btfss	___fladd@b+2,7
 17371  06CA  2EBA               	goto	i1l4795
 17372  06CB                     i1l4809:	
 17373  06CB  01F9               	clrf	___fladd@aexp
 17374  06CC  1FFB               	btfss	___fladd@grs,7
 17375  06CD  2ED6               	goto	i1l4819
 17376  06CE  087B               	movf	___fladd@grs,w
 17377  06CF  397F               	andlw	127
 17378  06D0  1903               	btfsc	3,2
 17379  06D1  1870               	btfsc	___fladd@b,0
 17380  06D2  2ED4               	goto	i1l4815
 17381  06D3  2ED6               	goto	i1l4819
 17382  06D4                     i1l4815:	
 17383  06D4  01F9               	clrf	___fladd@aexp
 17384  06D5  0AF9               	incf	___fladd@aexp,f
 17385  06D6                     i1l4819:	
 17386  06D6  0879               	movf	___fladd@aexp,w
 17387  06D7  1903               	btfsc	3,2
 17388  06D8  2EE7               	goto	i1l4831
 17389  06D9  3001               	movlw	1
 17390  06DA  07F0               	addwf	___fladd@b,f
 17391  06DB  3000               	movlw	0
 17392  06DC  3DF1               	addwfc	___fladd@b+1,f
 17393  06DD  3DF2               	addwfc	___fladd@b+2,f
 17394  06DE  3DF3               	addwfc	___fladd@b+3,f
 17395  06DF  1C73               	btfss	___fladd@b+3,0
 17396  06E0  2EE7               	goto	i1l4831
 17397  06E1  37F3               	asrf	___fladd@b+3,f
 17398  06E2  0CF2               	rrf	___fladd@b+2,f
 17399  06E3  0CF1               	rrf	___fladd@b+1,f
 17400  06E4  0CF0               	rrf	___fladd@b,f
 17401  06E5  0F7A               	incfsz	___fladd@bexp,w
 17402  06E6  0AFA               	incf	___fladd@bexp,f
 17403  06E7                     i1l4831:	
 17404  06E7  0A7A               	incf	___fladd@bexp,w
 17405  06E8  1D03               	btfss	3,2
 17406  06E9  087A               	movf	___fladd@bexp,w
 17407  06EA  1D03               	btfss	3,2
 17408  06EB  2EF3               	goto	i1l4839
 17409  06EC  01F0               	clrf	___fladd@b
 17410  06ED  01F1               	clrf	___fladd@b+1
 17411  06EE  01F2               	clrf	___fladd@b+2
 17412  06EF  01F3               	clrf	___fladd@b+3
 17413  06F0  087A               	movf	___fladd@bexp,w
 17414  06F1  1903               	btfsc	3,2
 17415  06F2  01F8               	clrf	___fladd@signs
 17416  06F3                     i1l4839:	
 17417  06F3  1C7A               	btfss	___fladd@bexp,0
 17418  06F4  2EF7               	goto	i1l1955
 17419  06F5  17F2               	bsf	___fladd@b+2,7
 17420  06F6  2EF8               	goto	i1l4843
 17421  06F7                     i1l1955:	
 17422  06F7  13F2               	bcf	___fladd@b+2,7
 17423  06F8                     i1l4843:	
 17424  06F8  367A               	lsrf	___fladd@bexp,w
 17425  06F9  00F3               	movwf	___fladd@b+3
 17426  06FA  1BF8               	btfsc	___fladd@signs,7
 17427  06FB  17F3               	bsf	___fladd@b+3,7
 17428  06FC  0008               	return
 17429  06FD                     __end_of___fladd:	
 17430  007E                     btemp	set	126	;btemp
 17431  007E                     int$flags	set	126
 17432  007E                     wtemp0	set	126
 17433  06FD                     __ptext80:	
 17434 ;; *************** function i1_SetInterrupt *****************
 17435 ;; Defined at:
 17436 ;;		line 56 in file "main.c"
 17437 ;; Parameters:    Size  Location     Type
 17438 ;;		None
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;		None
 17441 ;; Return value:  Size  Location     Type
 17442 ;;                  1    wreg      void 
 17443 ;; Registers used:
 17444 ;;		wreg, status,2, status,0
 17445 ;; Tracked objects:
 17446 ;;		On entry : 1F/0
 17447 ;;		On exit  : 1D/0
 17448 ;;		Unchanged: 0/0
 17449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17454 ;;Total ram usage:        0 bytes
 17455 ;; Hardware stack levels used:    1
 17456 ;; This function calls:
 17457 ;;		Nothing
 17458 ;; This function is called by:
 17459 ;;		_CLC_1_Interrupt
 17460 ;;		_CLC_2_Interrupt
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           
 17465                           ;psect for function i1_SetInterrupt
 17466  06FD                     i1_SetInterrupt:	
 17467                           
 17468                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 17469                           
 17470                           ;incstack = 0
 17471                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 17472  06FD  0852               	movf	_ESTATUS,w	;volatile
 17473  06FE  0551               	andwf	_INTCONF,w	;volatile
 17474  06FF  1903               	btfsc	3,2
 17475  0700  0008               	return
 17476                           
 17477                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 17478  0701  0022               	movlb	2	; select bank2
 17479  0702  128D               	bcf	13,5	;volatile
 17480  0703  0008               	return
 17481  0704                     __end_ofi1_SetInterrupt:	
 17482  0704                     __ptext77:	
 17483 ;; *************** function ___flsub *****************
 17484 ;; Defined at:
 17485 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  a               4    8[BANK0 ] void 
 17488 ;;  b               4   12[BANK0 ] void 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;		None
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  4    8[BANK0 ] void 
 17493 ;; Registers used:
 17494 ;;		wreg, status,2, status,0, pclath, cstack
 17495 ;; Tracked objects:
 17496 ;;		On entry : 1F/0
 17497 ;;		On exit  : 1F/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17500 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17503 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17504 ;;Total ram usage:        8 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:    1
 17507 ;; This function calls:
 17508 ;;		___fladd
 17509 ;; This function is called by:
 17510 ;;		_CLC_2_Interrupt
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514                           
 17515                           ;psect for function ___flsub
 17516  0704                     ___flsub:	
 17517                           
 17518                           ;incstack = 0
 17519                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 17520  0704  3080               	movlw	128
 17521  0705  06DF               	xorwf	___flsub@a+3,f
 17522  0706  0863               	movf	___flsub@b+3,w
 17523  0707  00F3               	movwf	___fladd@b+3
 17524  0708  0862               	movf	___flsub@b+2,w
 17525  0709  00F2               	movwf	___fladd@b+2
 17526  070A  0861               	movf	___flsub@b+1,w
 17527  070B  00F1               	movwf	___fladd@b+1
 17528  070C  0860               	movf	___flsub@b,w
 17529  070D  00F0               	movwf	___fladd@b
 17530  070E  085F               	movf	___flsub@a+3,w
 17531  070F  00F7               	movwf	___fladd@a+3
 17532  0710  085E               	movf	___flsub@a+2,w
 17533  0711  00F6               	movwf	___fladd@a+2
 17534  0712  085D               	movf	___flsub@a+1,w
 17535  0713  00F5               	movwf	___fladd@a+1
 17536  0714  085C               	movf	___flsub@a,w
 17537  0715  00F4               	movwf	___fladd@a
 17538  0716  25AE               	fcall	___fladd
 17539  0717  0873               	movf	?___fladd+3,w
 17540  0718  0020               	movlb	0	; select bank0
 17541  0719  00DF               	movwf	?___flsub+3
 17542  071A  0872               	movf	?___fladd+2,w
 17543  071B  00DE               	movwf	?___flsub+2
 17544  071C  0871               	movf	?___fladd+1,w
 17545  071D  00DD               	movwf	?___flsub+1
 17546  071E  0870               	movf	?___fladd,w
 17547  071F  00DC               	movwf	?___flsub
 17548  0720  0008               	return
 17549  0721                     __end_of___flsub:	


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     20      73
    BANK1            80      7      29
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->___wmul
    _Config_GP3->i1_GPort_GP3_PWM
    _Config_GP2->i1_GPort_GP2_PWM
    _Config_GP1->i1_GPort_GP1_PWM
    _RegisterRead->_eeprom_read
    _CLC_2_Interrupt->___flge
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd
    _CLC_1_Interrupt->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _CLC2_ISR->_CLC_2_Interrupt
    _CLC_2_Interrupt->___flsub
    ___flsub->___fladd
    _CLC1_ISR->_CLC_1_Interrupt
    _CLC_1_Interrupt->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _GP_Ports_FSM->_GP1_FSM
    _GP_Ports_FSM->_GP2_FSM
    _GP_Ports_FSM->_GP3_FSM
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_FadeProcessClear
    _FADE_GP2->_FadeProcessClear
    _FADE_GP1->_FadeProcessClear
    _FADE_LEDS->_FadeProcessClear
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_EncoderStatusUpdate
    _Encoder_PushButton_FSM->_EncoderStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1631
                     _ClearInterrupt
                        _DataInitSet
                        _Encoder_FSM
                       _GP_Ports_FSM
                  _SYSTEM_Initialize
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0     868
                                              6 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0     186
                   _FadeProcessClear
                     _FadeProcessSet
                      _GPort_GP3_PWM
 ---------------------------------------------------------------------------------
 (3) _GPort_GP3_PWM                                        1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0     186
                   _FadeProcessClear
                     _FadeProcessSet
                      _GPort_GP2_PWM
 ---------------------------------------------------------------------------------
 (3) _GPort_GP2_PWM                                        1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0     217
                   _FadeProcessClear
                     _FadeProcessSet
                      _GPort_GP1_PWM
 ---------------------------------------------------------------------------------
 (3) _GPort_GP1_PWM                                        2     2      0      93
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Encoder_FSM                                          0     0      0     341
             _Encoder_PushButton_FSM
                          _FADE_LEDS
 ---------------------------------------------------------------------------------
 (2) _FADE_LEDS                                            0     0      0     310
                   _FadeProcessClear
                     _FadeProcessSet
                    _RGBEncoder_BLED
                    _RGBEncoder_GLED
                    _RGBEncoder_RLED
 ---------------------------------------------------------------------------------
 (3) _RGBEncoder_RLED                                      1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGBEncoder_GLED                                      1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RGBEncoder_BLED                                      1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0      93
                                              2 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0      62
                                              1 BANK1      1     1      0
                _EncoderStatusUpdate
 ---------------------------------------------------------------------------------
 (2) _Encoder_PushButton_FSM                               0     0      0      31
                _EncoderStatusUpdate
     _EncoderSwitch_GetValueFiltered
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EncoderSwitch_GetValueFiltered                       0     0      0       0
             _EncoderSwitch_GetValue
 ---------------------------------------------------------------------------------
 (4) _EncoderSwitch_GetValue                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EncoderStatusUpdate                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    7832
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     229
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                           _TimerInt *
 ---------------------------------------------------------------------------------
 (9) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    1854
                                              9 COMMON     1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    1830
                                              8 COMMON     1     1      0
                    _Int2StatusClear
                       _RegisterRead
                      _RegisterWrite
                        _StatusClear
                   i1_ClearInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_ClearInterrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _StatusClear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    1636
                                              6 COMMON     2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                     _GeneralDataSet
                   _GeneralDataSplit
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                             ___wmul
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSplit                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSet                                      0     0      0       0
                    _RGB_EncoderMode
                    _STD_EncoderMode
 ---------------------------------------------------------------------------------
 (11) _STD_EncoderMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RGB_EncoderMode                                     0     0      0       0
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
 ---------------------------------------------------------------------------------
 (12) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0      44
                                              1 COMMON     2     2      0
                    _PWM1_Initialize
                    i1_GPort_GP3_PWM
 ---------------------------------------------------------------------------------
 (11) i1_GPort_GP3_PWM                                     1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0      44
                                              1 COMMON     2     2      0
                    _PWM4_Initialize
                    i1_GPort_GP2_PWM
 ---------------------------------------------------------------------------------
 (11) i1_GPort_GP2_PWM                                     1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _PWM4_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0      66
                                              2 COMMON     2     2      0
                    _PWM5_Initialize
                    i1_GPort_GP1_PWM
 ---------------------------------------------------------------------------------
 (11) i1_GPort_GP1_PWM                                     2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _PWM5_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     172
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Int2StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    2973
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_2_Interrupt                                      4     4      0    2973
                                             16 BANK0      4     4      0
                             ___flge
                            ___flsub
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    2776
                    _CLC_1_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_1_Interrupt                                      4     4      0    2776
                                              8 BANK0      4     4      0
                            ___fladd
                             ___flge
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_EncoderStatusUpdate                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _Encoder_FSM
     _Encoder_PushButton_FSM
       _EncoderStatusUpdate
       _EncoderSwitch_GetValueFiltered
         _EncoderSwitch_GetValue
       _SetInterrupt
     _FADE_LEDS
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _RGBEncoder_BLED
       _RGBEncoder_GLED
       _RGBEncoder_RLED
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _GPort_GP1_PWM
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _GPort_GP2_PWM
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _GPort_GP3_PWM
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _WDT_Initialize
   _TMR3_SetInterruptHandler
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _Int2StatusClear
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM5_Initialize
           i1_GPort_GP1_PWM
         _Config_GP2
           _PWM4_Initialize
           i1_GPort_GP2_PWM
         _Config_GP3
           _PWM1_Initialize
           i1_GPort_GP3_PWM
         _GeneralDataSet
           _RGB_EncoderMode
             _PWM1_Initialize
             _PWM2_Initialize
             _PWM3_Initialize
           _STD_EncoderMode
         _GeneralDataSplit
         _UpdateOut_GP1
         _UpdateOut_GP2
         _UpdateOut_GP3
         ___wmul
         _eeprom_write
       _StatusClear
       i1_ClearInterrupt
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _TimerInt *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      49       5       91.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      7      1D       7       36.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      74      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      74      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Oct 07 17:57:58 2018

                                       pc 0002                        __size_of_FADE_LEDS 0079  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 0072  
               __size_ofi1_ClearInterrupt 0003                           ??_UpdateOut_GP1 0070  
                         ??_UpdateOut_GP2 0070                           ??_UpdateOut_GP3 0070  
                                     l373 01D5                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                   __size_of_PMD_Initialize 000E  
                         _PWM4_Initialize 0DFE                           _TMR2_Initialize 0B58  
                       ??_CLC2_Initialize 00B6                                       wreg 0009  
                         __end_of_GP1_FSM 0119                           __end_of_GP2_FSM 0166  
                         __end_of_GP3_FSM 01B6                  RegisterRead@return_value 0072  
                                    S7401 0844                                      S7395 0850  
                                    S7397 0858                                      S7399 0860  
                            __CFG_LVP$OFF 0000                          __end_of_I2C1_ISR 0BAE  
                                    l1016 036E                                      l1025 03A8  
                                    l1034 03E2                                      l1262 00F4  
                                    l1280 014E                                      l1265 0102  
                                    l1418 0319                                      l1427 0309  
                         _timer3ReloadVal 00A8                                      l1436 0329  
                                    l1277 013F                                      l1293 018F  
                                    l1296 019E                                      l6401 0260  
                                    l7017 00AE                                      l7027 00C4  
                                    l6341 026E                                      l6327 01BC  
                                    l6345 01DF                                      l7057 005F  
                                    l6625 037F                                      l6705 00FE  
                                    l6397 0257                                      l6741 0131  
                                    l6813 01AA                                      l6911 01F7  
                                    l6831 0283                                      l6591 033A  
                                    l6719 010E                                      l6751 014A  
                                    l6735 0125                                      l6727 011A  
                                    l6559 07E2                                      l6921 0209  
                                    l6905 01E7                                      l6681 00D3  
                                    l6737 012D                                      l6931 021F  
                                    l6659 03B9                                      l6691 00E2  
                                    l6771 0166                                      l6933 0220  
                                    l6925 0211                                      l6917 0201  
                                    l6909 01F3                                      l6837 028C  
                                    l6845 0294                                      l6765 015A  
                                    l6695 00E6                                      l6783 0175  
                                    l6775 016A                                      l6857 02A7  
                                    l6689 00DC                                      l6785 017D  
                                    l6947 022F                                      l6939 021D  
                                    l6875 02C3                                      l6869 02B9  
                                    l6789 0181                                      l6959 023B  
                                    l6887 02D5                                      l6799 019A  
                                    _BLED 004A                                      _CMAX 0028  
                                    _CMIN 0024                   __end_of_PWM1_Initialize 0E8F  
                                    _GLED 004B                                      _CVAL 002C  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    _PMD3 0914                                      _PMD4 0915  
                                    _PMD5 0916                                      u4815 01EE  
                                    i1l80 0012                                      i1l82 001C  
                                    i1l84 0026                                      u4927 01D0  
                                    i1l89 002E                                      u4885 00A9  
                                    _RLED 004C                           ?_ClearInterrupt 0070  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                          ??_eeprom_write 0071                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                   __end_of_RGB_EncoderMode 0F3B  
                                    _main 0049   EncoderSwitch_GetValueFiltered@pb_status 00AA  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                        __end_of_FADE_GP1 0355                          __end_of_FADE_GP2 039A  
                        __end_of_FADE_GP3 03D4                          __end_of_CLC1_ISR 0438  
                        __end_of_CLC2_ISR 0434                             __CFG_BOREN$ON 0000  
                           __CFG_BORV$LOW 0000                                      start 0030  
                         _CLC_1_Interrupt 0438                           _PWM5_Initialize 0D70  
                         _TMR3_Initialize 07E2                       __end_of_Encoder_FSM 00B1  
                 __end_of_Int2StatusClear 0FEA                             __CFG_CSWEN$ON 0000  
                     RGBEncoder_BLED@duty 00B6                       _I2C1_StatusCallback 0C07  
                           _GPort_GP1_PWM 0355                             _GPort_GP2_PWM 039A  
                           _GPort_GP3_PWM 03D4                               _DataInitSet 006B  
                 __end_of_PWM2_Initialize 0FF4                           _CLC_2_Interrupt 04C0  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0430  
                                   _ADACT 009F                           __end_of___fladd 06FD  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                         __end_of___flsub 0721                                     _GCONF 007D  
                                   _T2CON 001F                                     _T3CON 0413  
                     RGBEncoder_GLED@duty 00B6                            __CFG_DEBUG$OFF 0000  
                                   i1l162 0BA1                                     i1l900 0ED5  
                                   i1l902 0EDF                                _Config_GP1 0D06  
                                   i1l783 0C09                                _Config_GP2 0D92  
                              _Config_GP3 0E18                                     i1l898 0ED3  
                              _EncoderReg 003B                                     _ISTEP 0020  
                                   _OSCEN 091D                                     _TMR3H 0412  
                                   _TMR3L 0411                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      FadeProcessSet@stat 00B6         __size_of_TMR3_SetInterruptHandler 0005  
               ?_TMR3_SetInterruptHandler 00B6                         ??_I2C1_Initialize 00B6  
                    ?_I2C1_StatusCallback 0070                          __end_of_TMR3_ISR 0BB7  
                         _STD_EncoderMode 0F3B            ??_TMR3_DefaultInterruptHandler 0070  
                          _WDT_Initialize 0B4E                         ?_GeneralDataSplit 0070  
         __size_of_Encoder_PushButton_FSM 005F                         __end_of_FADE_LEDS 02ED  
                 __end_of_PWM3_Initialize 1000                                     pclath 000A  
                              _DoublePush 00A4                        ??_GeneralDataSplit 0070  
                                   status 0003                                     wtemp0 007E  
                     _EncoderStatusUpdate 0262                            __CFG_MCLRE$OFF 0000  
                          ?_GPort_GP1_PWM 0070                            ?_GPort_GP2_PWM 0070  
                         __initialization 0032                            ?_GPort_GP3_PWM 0070  
                     RGBEncoder_RLED@duty 00B6                              __end_of_main 0068  
                __end_of_Int2StatusUpdate 01BC                   __end_of_PWM4_Initialize 0E0A  
                 __end_of_TMR2_Initialize 0B60               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00BD                                 ??_GP1_FSM 00BA  
                               ??_GP2_FSM 00BA                                 ??_GP3_FSM 00BA  
                    ?_EncoderStatusUpdate 0070                           _TMR3_StartTimer 0B4B  
                   _TMR3_InterruptHandler 00A6                  __end_of_FadeProcessClear 02F6  
                        __end_of_TimerInt 0B4B                          ??i1_SetInterrupt 0070  
                  __end_of_WDT_Initialize 0B52                     ??_I2C1_StatusCallback 0078  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _FADEGP 0043                                    i1S7403 0868  
                                  i1S7421 0880                                    i1S7405 079E  
                                  i1S7415 0878                                    i1S7425 0800  
                                  i1S7409 0870                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _CCPR1H 0292  
                                  _CCPR2H 0296                                    _CCPR3H 0312  
                                  _CCPR1L 0291                                    _CCPR4H 0316  
                                  _CCPR2L 0295                                    _CCPR3L 0311  
                                  _CCPR4L 0315                                    _GP1REG 0049  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _GP2REG 0048  
                                  _GP3REG 0047                                    _T3GCON 0414  
         ?_EncoderSwitch_GetValueFiltered 0070          ??_EncoderSwitch_GetValueFiltered 00B6  
                                  i1l1016 0D8F                                    i1l1025 0E15  
                                  i1l1201 0E2A                                    i1l1034 0E99  
                                  i1l1221 0E52                                    i1l1142 0D3C  
                        ?_PWM1_Initialize 0070                                    i1l1135 0D35  
                                  i1l1127 0D18                                    i1l1231 0E6E  
                                  i1l1216 0E4E                                    i1l1153 0D58  
                                  i1l1233 0E83                                    i1l1209 0E47  
                                  i1l1147 0D40                                    i1l1227 0E6B  
                                  i1l1243 0FAD                                    i1l1251 0FC1  
                                  i1l1172 0DC1                                    i1l1164 0DA4  
                                  i1l1157 0D5B                                    i1l1237 0F9C  
                                  i1l1190 0DE5                                    i1l1159 0D6F  
                 __end_of_CLC_1_Interrupt 04C0                                    i1l1184 0DCC  
                                  _ODCONA 028C                                    i1l1194 0DE8  
                                  _ODCONB 028D                                    i1l1179 0DC8  
                                  i1l1603 0FC8                                    _ODCONC 028E  
                                  i1l1196 0DFD                                    i1l1607 0FDD  
                                  i1l5001 072E                                    i1l5011 073E  
                                  i1l5003 0730                                    i1l1581 0792  
                                  i1l5021 0748                                    i1l5013 0740  
                                  i1l5005 0732                                    i1l5031 0752  
                                  i1l5023 074A                                    i1l5015 0742  
                                  i1l5007 0737                                    i1l1920 062D  
                                  i1l1912 05DC                                    i1l1921 0633  
                                  i1l1913 05DA                                    i1l5041 075C  
                                  i1l5033 0754                                    i1l5025 074C  
                                  i1l5017 0744                                    i1l5009 073C  
                                  i1l1930 065A                                    i1l1922 0634  
                                  i1l1907 05C1                                    i1l5051 0766  
                                  i1l5043 075E                                    i1l5035 0756  
                                  i1l5027 074E                                    i1l5019 0746  
                                  i1l4243 0FF4                                    i1l1940 06C5  
                                  i1l1908 05BF                   __end_of_PWM5_Initialize 0D7A  
                 __end_of_TMR3_Initialize 07FE                                    i1l5141 055D  
                                  i1l5061 076F                                    i1l5053 0768  
                                  i1l5045 0760                                    i1l5037 0758  
                                  i1l5029 0750                                    i1l1918 063F  
                                  i1l1935 06AC                                    i1l5063 0771  
                                  i1l5047 0762                                    i1l5039 075A  
                                  i1l5071 0776                                    i1l1929 0659  
                                  i1l5081 078D                                    i1l5065 0773  
                                  i1l5049 0764                                    i1l5073 0780  
                                  i1l1955 06F7                                    i1l5147 0585  
                                  i1l5059 076D                                    i1l4523 0DEB  
                                  i1l4427 0EF9                                    i1l1796 056E  
                                  i1l4429 0EFF                                    i1l4373 0EA1  
                                  i1l4613 0FB6                                    i1l1798 059C  
                                  i1l5327 04D0                                    i1l5079 078A  
                                  i1l4471 0D5E                                    i1l4519 0DD1  
                                  i1l4375 0EA3                                    i1l5409 0447  
                                  i1l5361 0C0D                                    i1l4803 06C6  
                                  i1l5435 04B6                                    i1l5427 0477  
                                  i1l5355 053F                                    i1l5347 0501  
                                  i1l4467 0D45                                    i1l4571 0E57  
                                  i1l4387 0EBA                                    i1l5363 0C11  
                                  i1l5371 0C23                                    i1l4717 05E8  
                                  i1l5437 04BE                                    i1l5357 0547  
                                  i1l4397 0ECD                                    u204_25 0F75  
                                  i1l4661 0CF9                                    i1l4901 0C5B  
                                  i1l5373 0C26                                    i1l4831 06E7  
                                  i1l4815 06D4                                    i1l4807 06C9  
                                  i1l4575 0E71                                    i1l4911 0C69  
                                  i1l5383 0C38                                    i1l5447 0BCC  
                                  i1l4809 06CB                                    i1l4761 063B  
                                  i1l4657 0CF3                                    i1l4921 0C78  
                                  i1l4913 0C6C                                    i1l5377 0C2F  
                                  i1l5369 0C1A                                    i1l5449 0BB7  
                                  i1l4843 06F8                                    i1l4819 06D6  
                                  i1l4747 0606                                    i1l7411 0E7B  
                                  i1l4931 0C87                                    i1l4923 0C7B  
                                  i1l4915 0C6F                                    i1l4907 0C63  
                                  i1l5395 0C3D                                    i1l7413 0DDB  
                                  u205_25 0F7F                                    i1l4941 0C96  
                                  i1l4933 0C8A                                    i1l4925 0C7E  
                                  i1l4917 0C72                                    i1l4909 0C66  
                                  _C_DIRE 00B4                                    i1l4839 06F3  
                                  i1l4767 0649                                    i1l7423 0D67  
                                  i1l7407 0E61                                    i1l4951 0CA4  
                                  i1l4943 0C99                                    i1l4935 0C8D  
                                  i1l4927 0C81                                    i1l4919 0C75  
                                  i1l7417 0DF5                                    i1l4961 0CB1  
                                  i1l4945 0C9C                                    i1l4937 0C90  
                                  i1l4929 0C84                                    i1l4795 06BA  
                                  i1l4779 0662                                    i1l7419 0D4E  
                                  i1l4971 0CD3                                    i1l4955 0CA9  
                                  i1l4947 0C9F                                    i1l4939 0C93  
                                  i1l4789 06A4                                    u206_25 0F89  
                                  i1l4965 0CC0                                    i1l4893 0C51  
                                  i1l4991 0723                                    i1l4983 0CED  
                                  i1l4887 0C4A                                    i1l4975 0CD6  
                                  i1l5863 0B9F                                    i1l4993 0725  
                                  i1l4969 0CD0                                    i1l4897 0C56  
                                  i1l4977 0CE0                                    i1l4995 0727  
                                  i1l5867 0BA5                                    i1l4997 0729  
                                  u224_21 0791                                    u308_25 0445  
                             _Encoder_FSM 009F                                    u237_25 061A  
                                  u238_20 0624                                    _C_IPUD 003E  
                                  u239_20 0625                                    u248_23 0675  
                                  _C_RMOD 003F                                    u299_25 04CE  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                        ?_RGB_EncoderMode 0070                           _TMR3_WriteTimer 0BC2  
                          __CFG_PWRTE$OFF 0000                   __end_of_CLC_2_Interrupt 0549  
                        ?_Int2StatusClear 0070                      __size_of_eeprom_read 000F  
                 __size_of_GeneralDataSet 0067                                    ___flge 054C  
                               ??___fladd 0054                                    ___wmul 0CF1  
                          __CFG_STVREN$ON 0000                                 ??___flsub 007C  
                  _Encoder_PushButton_FSM 01E7                                    _en_deb 00A0  
                                  _pb_cnt 00AD                                    _pb_fsm 00AE  
                        ?_PWM2_Initialize 0070                                 ?_I2C1_ISR 0070  
                        i1_ClearInterrupt 0FE5                      __end_of_eeprom_write 0FE3  
                         i1_GPort_GP1_PWM 0D7A                           i1_GPort_GP2_PWM 0E0A  
                   ??_EncoderStatusUpdate 00B6                   __end_of_STD_EncoderMode 0F52  
                         i1_GPort_GP3_PWM 0E8F                           _I2C1_AddressSet 0414  
                             ?_Config_GP1 0070                               ?_Config_GP2 0070  
                             ?_Config_GP3 0070                            _PMD_Initialize 0B60  
                               ?_FADE_GP1 0070                                 ?_FADE_GP2 0070  
                               ?_FADE_GP3 0070                                 ?_CLC1_ISR 0070  
                               ?_CLC2_ISR 0070                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 00B9  TMR3_SetInterruptHandler@InterruptHandler 00B6  
                           ?_RegisterRead 0070                           _CLC1_Initialize 0B7F  
                           ?_SetInterrupt 0070            __size_ofi1_EncoderStatusUpdate 0003  
           __end_ofi1_EncoderStatusUpdate 054C                                ___flge@ff1 0070  
                              ___flge@ff2 0074                          ?_PWM3_Initialize 0070  
                             _i2c_address 0053                         _SYSTEM_Initialize 03E9  
                 __end_of__initialization 0046                           eeprom_read@addr 0070  
                      ?_SYSTEM_Initialize 0070                           ??_GPort_GP1_PWM 00B6  
                         ??_GPort_GP2_PWM 00B6                           ??_GPort_GP3_PWM 00B6  
                ??_EncoderSwitch_GetValue 00B6                     __end_of_TMR3_CallBack 0BC2  
                    FadeProcessClear@stat 00B8                            __pcstackCOMMON 0070  
                            __pidataBANK0 0000                       ??_SYSTEM_Initialize 00B8  
                 __end_of_TMR3_StartTimer 0B4E                           _CLC2_Initialize 03FF  
                               ?_TMR3_ISR 0070                                ??_I2C1_ISR 0079  
                        ?_PWM4_Initialize 0070                          ?_TMR2_Initialize 0070  
                  __end_of_PMD_Initialize 0B6E                   __size_of_FadeProcessSet 0005  
                __size_of_RGBEncoder_BLED 0010                             ??_StatusClear 0070  
                __size_of_RGBEncoder_GLED 0010                  __size_of_RGBEncoder_RLED 0010  
                              ??_FADE_GP1 00B9                                ??_FADE_GP2 00B9  
                              ??_FADE_GP3 00B9                                ??_CLC1_ISR 007C  
                              ??_CLC2_ISR 007C                          ??_ClearInterrupt 00B6  
                       eeprom_write@value 0070                            ??_RegisterRead 0071  
                          ??_SetInterrupt 00B6                 __end_of_SYSTEM_Initialize 03FF  
                 __end_of_TMR3_WriteTimer 0BD1                                __pbssBANK0 0020  
                              __pbssBANK1 00A0                          ?_CLC_1_Interrupt 0070  
                        ?_PWM5_Initialize 0070                          ?_TMR3_Initialize 0070  
                  __size_of_RegisterWrite 00A9                       __size_of_Config_GP1 006A  
                     __size_of_Config_GP2 006C                       __size_of_Config_GP3 006C  
                        ?_CLC_2_Interrupt 0070                            _SSP1DATPPSbits 0E21  
                              __pmaintext 0049                             _CLCIN0PPSbits 0E28  
                           ?_GP_Ports_FSM 0070                   __end_ofi1_GPort_GP1_PWM 0D92  
                               ?_TimerInt 0070                   __end_ofi1_GPort_GP2_PWM 0E18  
                 __end_ofi1_GPort_GP3_PWM 0E9C                             _CLCIN1PPSbits 0E29  
                                 ?___flge 0070          __end_of_TMR3_SetInterruptHandler 03E9  
                                 ?___wmul 0070                   __end_of_I2C1_AddressSet 0427  
                              ??_TMR3_ISR 0072                              ?_DataInitSet 0070  
                              __pintentry 0004                           _I2C1_Initialize 0B6E  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CCP4CON 0317  
                                 _CLC1CON 0F10                                   _CLC2CON 0F1A  
                                 _FADERGB 0044                                   _CLC1POL 0F11  
                                 _CLC2POL 0F1B                                   _GP1CONF 007C  
                                 _GP2CONF 0050                            _SSP1CLKPPSbits 0E20  
                                 _GP3CONF 004F                           ?_PMD_Initialize 0070  
                     __CFG_RSTOSC$HFINT32 0000                   __size_of_ADC_Initialize 0008  
                        ?_STD_EncoderMode 0070                                   _GP1_FSM 00D2  
                                 _GP2_FSM 0119                                   _GP3_FSM 0166  
                 __end_of_CLC1_Initialize 0B94                     __end_of_UpdateOut_GP1 0FA2  
                   __end_of_UpdateOut_GP2 0FB3                     __end_of_UpdateOut_GP3 0FC7  
                                 _ESTATUS 0052                                   _C_MBANK 0041  
                                 _FSTATUS 004D                                   _INTCONF 0051  
       I2C1_StatusCallback@slaveWriteType 00B3                                   _C_DTYPE 003C  
                                 _C_ETYPE 0040                                   _C_RESET 0042  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _C_WRAPE 003D                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _PWM5DCH 0618  
                                 _PWM5DCL 0617                                   _PWM5CON 0619  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                __pswtext10 0800  
                                 _SSP1MSK 0213                       __end_of_StatusClear 0FE5  
                         _double_push_cnt 00A2                   __end_of_CLC2_Initialize 0414  
                               _FADE_LEDS 0274           __size_of_EncoderSwitch_GetValue 000D  
                          ??_GP_Ports_FSM 00BC                            _GeneralDataSet 0E9C  
                              ??_TimerInt 0070                 __size_of_GeneralDataSplit 003F  
                   __size_of_eeprom_write 001C                           RegisterRead@add 0071  
                         __size_of___flge 0062                                   ___fladd 05AE  
                        ?_TMR3_StartTimer 0070                                   ___flsub 0704  
                         __size_of___wmul 0015                                   _gp1_fsm 00B1  
                                 _gp2_fsm 00B0                                   _gp3_fsm 00AF  
                       ?_Int2StatusUpdate 0070                        ??_Int2StatusUpdate 00B7  
                                 __ptext1 0B4B                                   __ptext2 03E9  
                                 __ptext3 0B4E                                   __ptext4 07E2  
                                 __ptext5 03E4                                   __ptext6 0B58  
                                 __ptext7 0B60                                   __ptext8 0BD1  
                                 __ptext9 0427                             _RegisterWrite 0C48  
                                 _en_prev 00AB                     _OSCILLATOR_Initialize 0427  
                                 _fsm_tmr 00B5                                 _T3CONbits 0413  
                ??_PIN_MANAGER_Initialize 00B6                         ?_FadeProcessClear 0070  
                       ??_RGBEncoder_BLED 00B6                         ??_RGBEncoder_GLED 00B6  
                       ??_RGBEncoder_RLED 00B6                        ??_FadeProcessClear 00B8  
              __size_of_SYSTEM_Initialize 0016                                   clrloop0 0B53  
                    end_of_initialization 0046                          ?_TMR3_WriteTimer 0070  
                            ?_Encoder_FSM 0070                  __end_ofi1_ClearInterrupt 0FE8  
                            _eeprom_write 0FC7                                ?_FADE_LEDS 0070  
                  __end_of_GeneralDataSet 0F03                   __end_of_I2C1_Initialize 0B7F  
                 ?_Encoder_PushButton_FSM 0070                          ?i1_GPort_GP1_PWM 0070  
                        ?i1_GPort_GP2_PWM 0070                          ?i1_GPort_GP3_PWM 0070  
                              _temp_green 0033                      __end_of_RegisterRead 078F  
                        ?_I2C1_AddressSet 0070                      __end_of_SetInterrupt 01C4  
                          _FadeProcessSet 02F6                            ?_RegisterWrite 0076  
             __end_of_I2C1_StatusCallback 0C48                          ??_WDT_Initialize 00B6  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                  _TMR3_SetInterruptHandler 03E4  
                             _StatusClear 0FE3                              ??_Config_GP1 0072  
                            ??_Config_GP2 0071                              ??_Config_GP3 0071  
                       __size_of_I2C1_ISR 001A                          ?_CLC1_Initialize 0070  
                             ___fladd@grs 007B                   EncoderStatusUpdate@stat 00B6  
                  _EncoderSwitch_GetValue 0267                                 _TRISCbits 008E  
                       __size_of_FADE_GP1 002A                         __size_of_FADE_GP2 002A  
                       __size_of_FADE_GP3 002A                         __size_of_CLC1_ISR 0004  
                       __size_of_CLC2_ISR 0004                          __CFG_FEXTOSC$OFF 0000  
               i1EncoderStatusUpdate@stat 0070                             ??_eeprom_read 0070  
          __end_of_Encoder_PushButton_FSM 0246                          ?_CLC2_Initialize 0070  
                         ?_GeneralDataSet 0070                        __end_of_Config_GP1 0D70  
                      __end_of_Config_GP2 0DFE                        __end_of_Config_GP3 0E84  
                __size_of_PWM1_Initialize 000B               __end_of_EncoderStatusUpdate 0267  
                    Int2StatusUpdate@stat 00B7                  __size_of_RGB_EncoderMode 0038  
                  __end_of_FadeProcessSet 02FB                            __end_of___flge 05AE  
                          __end_of___wmul 0D06                         __size_of_TMR3_ISR 0009  
                    __size_of_DataInitSet 0034                            _ADC_Initialize 01DF  
                __size_of_Int2StatusClear 0002                    ?_OSCILLATOR_Initialize 0070  
                     start_initialization 0032                  __size_of_PWM2_Initialize 000A  
         __size_of_PIN_MANAGER_Initialize 0036                      __end_of_GP_Ports_FSM 00D2  
                       GPort_GP1_PWM@duty 00B7                         GPort_GP2_PWM@duty 00B6  
                   i1_EncoderStatusUpdate 0549                   __size_ofi1_SetInterrupt 0007  
                       GPort_GP3_PWM@duty 00B6                               ??_FADE_LEDS 00B9  
                        ?_I2C1_Initialize 0070                          __CFG_LPBOREN$OFF 0000  
                   __end_of_GPort_GP1_PWM 0370                     __end_of_GPort_GP2_PWM 03AA  
                   __end_of_GPort_GP3_PWM 03E4                  __size_of_PWM3_Initialize 000C  
                        _GeneralDataSplit 0F52                                  ??___flge 0078  
                        ??_PMD_Initialize 00B6                          I2C1_ISR@i2c_data 0079  
                                ??___wmul 0074                       __end_of_eeprom_read 079E  
                             _CCPTMRSbits 029F                           ?_FadeProcessSet 0070  
                         ??_RegisterWrite 0077                    __end_of_ADC_Initialize 01E7  
                             __pdataBANK0 0068                         __size_of_TimerInt 0003  
                                ?_GP1_FSM 0070                                  ?_GP2_FSM 0070  
                                ?_GP3_FSM 0070                                 ___fladd@a 0074  
                               ___fladd@b 0070                               __pbssCOMMON 007C  
                               ___flsub@a 005C                                 ___flsub@b 0060  
                               ___latbits 0002                             __pcstackBANK0 0054  
                           __pcstackBANK1 00B6          I2C1_StatusCallback@i2c_bus_state 0078  
                __size_of_PWM4_Initialize 000C                  __size_of_TMR2_Initialize 0008  
                  __size_of_TMR3_CallBack 000B                          eeprom_write@addr 0071  
                    __size_of_Encoder_FSM 0012                     __size_of_RegisterRead 006E  
                   __size_of_SetInterrupt 0008                    _PIN_MANAGER_Initialize 0BD1  
                __size_of_CLC_1_Interrupt 0088                  __size_of_PWM5_Initialize 000A  
                __size_of_TMR3_Initialize 001C                                  ?___fladd 0070  
                                ?___flsub 005C                           ?_ADC_Initialize 0070  
                        __CFG_PPS1WAY$OFF 0000                                  _I2C1_ISR 0B94  
                         _RGBEncoder_BLED 031B                           _RGBEncoder_GLED 02FB  
                         _RGBEncoder_RLED 030B                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 007C                                 _int2clear 0039  
                __size_of_CLC_2_Interrupt 0089                                 __pswtext1 0850  
                               __pswtext2 0858                                 __pswtext3 0860  
                               __pswtext4 0844                                 __pswtext5 0868  
                               __pswtext6 079E                                 __pswtext7 0870  
                               __pswtext8 0878                                 __pswtext9 0880  
                       ??_RGB_EncoderMode 0070                                  _CLC1GLS0 0F16  
                                _CLC1GLS1 0F17                                  _CLC1GLS2 0F18  
                                _CLC1GLS3 0F19                                  _CLC2GLS0 0F20  
                                _CLC2GLS1 0F21                                  _CLC2GLS2 0F22  
                                _CLC2GLS3 0F23                                  _CLC1SEL0 0F12  
                                _CLC1SEL1 0F13                                  _CLC1SEL2 0F14  
                                _CLC1SEL3 0F15                                  _CLC2SEL0 0F1C  
                                _CLC2SEL1 0F1D                                  _CLC2SEL2 0F1E  
                                _CLC2SEL3 0F1F                                  _I2STATUS 004E  
                                _FADE_GP1 032B                                  _FADE_GP2 0370  
                                _FADE_GP3 03AA                                  _CLC1_ISR 0434  
                                _CLC2_ISR 0430                                  _DEBOUNCE 0030  
                       ??_Int2StatusClear 0070                                  _ANTBOUNC 0046  
               __size_of_Int2StatusUpdate 0006                  __size_of_STD_EncoderMode 0017  
                            _RegisterRead 0721                              _SetInterrupt 01BC  
                                _DPPERIOD 0045                    ?i1_EncoderStatusUpdate 0070  
                       ??_PWM2_Initialize 0070                         ?i1_ClearInterrupt 0070  
                          ___wmul@product 0074                                  _LATBbits 010D  
                                _LATCbits 010E                   __size_of_ClearInterrupt 0003  
                               clear_ram0 0B52                               _eeprom_read 078F  
                                _PIE1bits 0091                                  _PIE3bits 0093  
                      ??i1_ClearInterrupt 0070                 __size_of_FadeProcessClear 0009  
                  __size_of_UpdateOut_GP1 0011                    __size_of_UpdateOut_GP2 0011  
                  __size_of_UpdateOut_GP3 0014       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _PIR3bits 0013  
              ??_TMR3_SetInterruptHandler 00B8                             _TMR3_CallBack 0BB7  
                             _gp_fade_cnt 0035                                  _SSP1CON1 0215  
                                _SSP1CON2 0216                                  _SSP1CON3 0217  
                                _TMR3_ISR 0BAE                                  _SSP1STAT 0214  
                     _I2C1_slaveWriteData 0068                   ?_EncoderSwitch_GetValue 0070  
                       ??_PWM3_Initialize 0070                                _ADCON0bits 009D  
                   __size_of_GP_Ports_FSM 0021                         ___wmul@multiplier 0070  
                            ?_StatusClear 0070                          __size_of_GP1_FSM 0047  
                        __size_of_GP2_FSM 004D                          __size_of_GP3_FSM 0050  
                                _WPUBbits 020D                                  _WPUCbits 020E  
                __size_of_TMR3_StartTimer 0003                         RegisterWrite@data 0076  
                        ??_GeneralDataSet 0070                         ??_PWM4_Initialize 0070  
                       ??_TMR2_Initialize 00B6                            i1_SetInterrupt 06FD  
                          ?_TMR3_CallBack 0070                  __size_of_TMR3_WriteTimer 000F  
                 __end_of_RGBEncoder_BLED 032B                   __end_of_RGBEncoder_GLED 030B  
                 __end_of_RGBEncoder_RLED 031B                         _ADC_GetConversion 01C4  
                                _TimerInt 0B48                              _GP_Ports_FSM 00B1  
                 ??_OSCILLATOR_Initialize 00B6            __end_of_EncoderSwitch_GetValue 0274  
                      ?_ADC_GetConversion 00B6                          __size_of___fladd 014F  
                        __size_of___flsub 001D                         ??_CLC_1_Interrupt 005C  
                       ??_PWM5_Initialize 0070                         ??_TMR3_Initialize 00B8  
                              _ANSELCbits 018E                  __size_ofi1_GPort_GP1_PWM 0018  
                __size_ofi1_GPort_GP2_PWM 000E                  __size_ofi1_GPort_GP3_PWM 000D  
                     ??_ADC_GetConversion 00B8                                  _fade_cnt 00AC  
                __size_of_I2C1_AddressSet 0013                             _UpdateOut_GP1 0F91  
                           _UpdateOut_GP2 0FA2                             _UpdateOut_GP3 0FB3  
                       ??_CLC_2_Interrupt 0064              __size_of_I2C1_StatusCallback 0041  
                __end_of_GeneralDataSplit 0F91                                  __ptext10 0B6E  
                                __ptext11 0414                                  __ptext20 03AA  
                                __ptext12 03FF                                  __ptext21 03D4  
                                __ptext13 0B7F                                  __ptext30 031B  
                                __ptext22 0370                                  __ptext14 00B1  
                                __ptext31 02F6                                  __ptext23 039A  
                                __ptext15 0166                                  __ptext40 0068  
                                __ptext32 02ED                                  __ptext24 032B  
                                __ptext16 0119                                  __ptext33 01B6  
                                __ptext25 0355                                  __ptext17 00D2  
                                __ptext50 0FE3                                  __ptext42 0BAE  
                                __ptext34 01E7                                  __ptext26 009F  
                                __ptext18 01DF                                  __ptext51 0C48  
                                __ptext43 0BC2                                  __ptext35 01BC  
                                __ptext27 0274                                  __ptext19 01C4  
                                __ptext60 0F03                                  __ptext52 0FC7  
                                __ptext44 0BB7                                  __ptext36 0246  
                                __ptext28 030B                                  __ptext61 0FF4  
                                __ptext53 0CF1                                  __ptext45 07FE  
                                __ptext37 0267                                  __ptext29 02FB  
                                __ptext70 0D7A                                  __ptext62 0FEA  
                                __ptext54 0FB3                                  __ptext46 0B48  
                                __ptext38 0262                                  __ptext71 0D70  
                                __ptext63 0E18                                  __ptext55 0FA2  
                                __ptext47 0B94                                  __ptext39 006B  
                                __ptext80 06FD                                  __ptext72 0721  
                                __ptext64 0E8F                                  __ptext56 0F91  
                                __ptext48 0C07                                  __ptext81 0549  
                                __ptext73 078F                                  __ptext65 0E84  
                                __ptext57 0F52                                  __ptext49 0FE5  
                                __ptext82 054C                                  __ptext74 0FE8  
                                __ptext66 0D92                                  __ptext58 0E9C  
                                __ptext83 05AE                                  __ptext75 0430  
                                __ptext67 0E0A                                  __ptext59 0F3B  
                                __ptext76 04C0                                  __ptext68 0DFE  
                                __ptext77 0704                                  __ptext69 0D06  
                                __ptext78 0434                                  __ptext79 0438  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                  __end_ofi1_SetInterrupt 0704                  __size_of_CLC1_Initialize 0015  
                 TMR3_WriteTimer@timerVal 0070                                  _gp_timer 00B2  
                           __size_of_main 001F                                  _intclear 003A  
                       ??_STD_EncoderMode 0070                 __end_of_ADC_GetConversion 01DF  
                        ??_FadeProcessSet 00B6                                  _temp_gp1 0038  
                                _temp_gp2 0037                                  _temp_gp3 0036  
                                _temp_blu 0032                                  _temp_red 0034  
                              _RC3PPSbits 0EA3                                _RB6PPSbits 0E9E  
                              _RC4PPSbits 0EA4                             ??_DataInitSet 00B6  
                                int$flags 007E                                _RB7PPSbits 0E9F  
                              _RC5PPSbits 0EA5                                _RC6PPSbits 0EA6  
                              _ODCONCbits 028E                                _RC7PPSbits 0EA7  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                __size_of_CLC2_Initialize 0015                          RegisterWrite@add 0077  
                            _SSP1STATbits 0214      __end_of_TMR3_DefaultInterruptHandler 07FF  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 07FE  
  __end_of_EncoderSwitch_GetValueFiltered 0262   __size_of_EncoderSwitch_GetValueFiltered 001C  
          _EncoderSwitch_GetValueFiltered 0246              __size_of_EncoderStatusUpdate 0005  
                          ?_UpdateOut_GP1 0070                            ?_UpdateOut_GP2 0070  
                          ?_UpdateOut_GP3 0070                                _INTCONbits 000B  
                             _NVMCON1bits 0895                          _Int2StatusUpdate 01B6  
                 __size_of_WDT_Initialize 0004                         ??_TMR3_StartTimer 00B6  
                         ?i1_SetInterrupt 0070                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                            _ClearInterrupt 0068  
                         ??_TMR3_CallBack 0070                         __CFG_CLKOUTEN$OFF 0000  
                             _PPSLOCKbits 0E0F                           _PWM1_Initialize 0E84  
                        _FadeProcessClear 02ED                          ??_ADC_Initialize 00B6  
                        ?_RGBEncoder_BLED 0070                          ?_RGBEncoder_GLED 0070  
                        ?_RGBEncoder_RLED 0070                           _RGB_EncoderMode 0F03  
                     i1GPort_GP1_PWM@duty 0071                           _Int2StatusClear 0FE8  
                     i1GPort_GP2_PWM@duty 0070                         ??_TMR3_WriteTimer 0072  
                __size_of_I2C1_Initialize 0011                     __end_of_RegisterWrite 0CF1  
                     i1GPort_GP3_PWM@duty 0070             ?_TMR3_DefaultInterruptHandler 0070  
                     __end_of_DataInitSet 009F                           _PWM2_Initialize 0FEA  
                    __size_of_StatusClear 0002                   ??i1_EncoderStatusUpdate 0070  
                  __size_of_GPort_GP1_PWM 001B                    __size_of_GPort_GP2_PWM 0010  
                  __size_of_GPort_GP3_PWM 0010                  ??_Encoder_PushButton_FSM 00B7  
                           ___fladd@signs 0078                         ??i1_GPort_GP1_PWM 0070  
                       ??i1_GPort_GP2_PWM 0070                         ??i1_GPort_GP3_PWM 0070  
                           ??_Encoder_FSM 00B9                    __end_of_ClearInterrupt 006B  
                       ??_I2C1_AddressSet 00B6            __end_of_PIN_MANAGER_Initialize 0C07  
                             _PWMTMRSbits 061F                             ?_eeprom_write 0070  
                            ___fladd@aexp 0079                              ___fladd@bexp 007A  
                              _STATUSbits 0003                              ?_eeprom_read 0070  
              __size_of_ADC_GetConversion 001B                           _PWM3_Initialize 0FF4  
                       ??_CLC1_Initialize 00B6  
